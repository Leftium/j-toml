{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","global.js","../../j-orderify/dist/ESM/j-orderify.js","iterator.js","RE.js?<RegExp>","types.js","options.js","RE.js","types-options.js","RE-never-slow-nor-overflow.js","parser-extension.js","parser.js","default.js"],
	"names":
		["WeakMap","Error","RE.XOB_INTEGER","RE.INTEGER","RE.UNDERSCORES","RE.FLOAT","RE.FLOAT_NOT_INTEGER","RE.DATETIME","ESCAPED_IN_SINGLE_LINE","ESCAPED_IN_MULTI_LINE","options.useWhatToJoinMultiLineString","RE.ESCAPED_IN_SINGLE_LINE","RE.ESCAPED_IN_MULTI_LINE","RE.SYM_WHITESPACE","RE.PRE_WHITESPACE","options.enableInterpolationString","RE.DELIMITER_CHECK","RE.INTERPOLATIONS","RE.INTERPOLATION","RE.REGEXP_MODE","RE.PATTERN_FLAGS_REPLACER","RE.WHOLE_AND_SUBS","RE.SUB","RE.DOLLAR","RE.INTERPOLATION_TOKEN","options.customConstructors","options.FUNCTION","options.use","options.TableDepends","RE.BOM","RE.EOL","options.keepComment","RE_good.TABLE_DEFINITION_exec","rest","options.clear","options.open","RE.KEYS","RE_good.KEY_VALUE_PAIR_exec","RE.VALUE_REST","options.enableNull","options.enableNil","options.useBigInt","options.allowLonger","RE.LITERAL_STRING","RE.MULTI_LINE_LITERAL_STRING","RE.CONTROL_CHARACTER_EXCLUDE_TAB","RE_good.BASIC_STRING_exec","RE_good.MULTI_LINE_BASIC_STRING_exec_0","RE_good.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test","options.allowInlineTableMultiLineAndTrailingCommaEvenNoComma","options.typify","options.unlimitedType","RE._VALUE_PAIR"],
	"mappings":
		";;AAAA,gBAAe,QAAQ;;yBAAC,zBCAjB,MAAM,EAAE,OAAO,WAAEA,SAAO,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,SAAEC,OAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM;CAC7H,KAAK,EAAE,EAAE,OAAO,EAAE;CAClB,MAAM,EAAE,EAAE,aAAa,EAAE;CACzB,MAAM,EAAE,EAAE,aAAa,EAAE;CACzB,MAAM,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAE;CACvC,OAAO,EAAE,EAAE,cAAc,EAAE;CAC3B,MAAM;CACN,MAAM,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE;CAC3B,IAAI,EAAE,EAAE,SAAS,EAAE;CACnB,MAAM,EAAE,EAAE,QAAQ,EAAE;CACpB,GAAG,MAAM,CAAC;;ACVV;;;;;;;;;;AAUD,AAEA;AACA,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;;AAE5D,MAAM,cAAc,GAAG,IAAI,OAAO,CAAC;;AAEnC,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;CACpC,cAAc,EAAE;EACf,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE;GAC/B,KAAK,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG;IAC9C,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,OAAO,IAAI,CAAC;IACZ;GACD,OAAO,KAAK,CAAC;GACb;EACD;CACD,cAAc,EAAE;EACf,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE;GACnB,KAAK,cAAc,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG;IAClC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC;IACZ;GACD,OAAO,KAAK,CAAC;GACb;EACD;CACD,OAAO,EAAE;EACR,KAAK,CAAC,CAAC,MAAM,EAAE;GACd,OAAO,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;GACvC;EACD;CACD,CAAC,CAAC;;AAEH,MAAM,QAAQ,GAAG,MAAM,IAAI;CAC1B,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;CACrD,OAAO,IAAI,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;CACnC,CAAC;AACF,AAYA;sBACsB;;AC1DtB,MAAM,IAAI,GAAG,EAAE,CAAC;AAChB,IAAI,WAAW,GAAG,IAAI,CAAC;AACvB,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;AACvB,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;;AAEnB,MAAM,IAAI,GAAG,MAAM,WAAW,GAAG,IAAI,CAAC;AACtC,MAAM,IAAI,GAAG,MAAM,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC;AAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC;AAC5C,MAAM,IAAI,GAAG,MAAM,SAAS,GAAG,aAAa,CAAC;AAC7C,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC;AAC7B,MAAM,IAAI,GAAG,CAAC,OAAO,EAAE,UAAU,KAAK;CACrC,KAAK,SAAS,GAAG,aAAa,GAAG;EAChC,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,mEAAmE,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;EACzJ,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;;EAE5B,MAAM,KAAK,CAAC;EACZ;CACD,OAAO,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC;CAChC,CAAC;AACF,MAAM,IAAI,GAAG,KAAK,IAAI;CACrB,WAAW,GAAG,KAAK,CAAC;CACpB,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;CACrC,SAAS,GAAG,CAAC,CAAC,CAAC;CACf,CAAC;AACF,AAEO,MAAM,gBAAgB,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5E,AAAO,MAAM,eAAe,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1E,AAAO,MAAM,cAAc,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;AACxE,AAAO,MAAM,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC,IAAIA,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAChE,AAAO,MAAM,KAAK,GAAG,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;AAE/E,SAAS,MAAM,EAAE,KAAK,EAAE;CACvB,KAAK,WAAW,GAAG,IAAI,GAAG;EACzB,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;EAC5B,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;;EAE/B;CACD,MAAM,KAAK,CAAC;CACZ;;ACpCM,MAAM,WAAW,GAAG,IAAI,CAAC;;AAEhC,AAAO,MAAM,WAAW,GAAG,0EAA0E,CAAC;AACtG,AAAO,MAAM,OAAO,GAAG,0BAA0B,CAAC;;AAElD,AAAO,MAAM,KAAK,GAAG,6EAA6E,CAAC;AACnG,AAAO,MAAM,iBAAiB,GAAG,OAAO,CAAC;AACzC,AAUO,MAAM,QAAQ,GAAG,mQAAmQ,CAAC;AAC5R,AAIA;AACA,AAAO,MAAM,GAAG,GAAG,SAAS,CAAC;AAC7B,AAAO,MAAM,GAAG,GAAG,OAAO,CAAC;;AAE3B,AAAO,MAAM,cAAc,GAAG,SAAS,CAAC;AACxC,AAAO,MAAM,IAAI,GAAG,sCAAsC,CAAC;AAC3D,AAAO,MAAM,UAAU,GAAG,sDAAsD,CAAC;AACjF,AAAO,MAAM,cAAc,GAAG,8CAA8C,CAAC;AAC7E,AAAO,MAAM,yBAAyB,GAAG,yBAAyB,CAAC;AACnE,AAAO,MAAM,6BAA6B,GAAG,0BAA0B,CAAC;AACxE,AACO,MAAM,cAAc,GAAG,YAAY,CAAC;;AAE3C,AAAO,MAAM,WAAW,GAAG,iCAAiC,CAAC;AAC7D,AAQA;AACA,AAAO,MAAM,GAAG,GAAG,sMAAsM,CAAC;AAC1N,AAAO,MAAM,eAAe,GAAG,MAAM,CAAC;AACtC,AAAO,MAAM,aAAa,GAAG,+uBAA+uB,CAAC;AAC7wB,AAAO,MAAM,cAAc,GAAG,uwBAAuwB,CAAC;AACtyB,AAAO,MAAM,mBAAmB,GAAG,+BAA+B,CAAC;AACnE,AAAO,MAAM,WAAW,GAAG,aAAa,CAAC;AACzC,AAAO,MAAM,sBAAsB,GAAG,yiBAAyiB,CAAC;AAChlB,AAAO,MAAM,cAAc,GAAG,4CAA4C,CAAC;AAC3E,AAAO,MAAM,MAAM,GAAG,oBAAoB,CAAC;;ACrDpC,MAAM,OAAO,GAAG,CAAC,OAAO,EAAE,SAAS,GAAG,IAAI,EAAE,WAAW,GAAG,KAAK,KAAK;CAC1E,KAAK,SAAS,GAAG,KAAK,GAAG;EACxB,KAAK,OAAO,GAAG,GAAG,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE;EACtE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGC,WAAc,GAAGC,OAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,kBAAkB,CAAC,OAAO,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EACzJ,MAAM,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,CAACC,WAAc,EAAE,EAAE,CAAC,CAAC;EACpD,WAAW,IAAI,aAAa,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC,wEAAwE,CAAC,OAAO,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAChL,OAAO,MAAM,CAAC;EACd;MACI;EACJ,IAAI,MAAM,CAAC;EACX,KAAK,OAAO,GAAG,GAAG,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE;OACpE;GACJ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGF,WAAc,GAAGC,OAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,kBAAkB,CAAC,OAAO,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;GACzJ,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAACC,WAAc,EAAE,EAAE,CAAC,CAAC,CAAC;GACrD,WAAW;GACX,CAAC,oBAAoB,EAAE,MAAM,IAAI,MAAM,EAAE,oBAAoB;GAC7D,eAAe,CAAC,sGAAsG,CAAC,OAAO,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;GACtK;EACD,KAAK,SAAS,GAAG,IAAI,GAAG,EAAE,OAAO,MAAM,CAAC,EAAE;EAC1C,aAAa,CAAC,SAAS,CAAC,IAAI,eAAe,CAAC,yDAAyD,CAAC,CAAC;EACvG,KAAK,SAAS,CAAC,CAAC,GAAG,SAAS,EAAE,MAAM,IAAI,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,IAAI,MAAM,EAAE,SAAS,GAAG,EAAE,OAAO,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE;EACpI,OAAO,MAAM,CAAC;EACd;CACD,CAAC;;AAEF,AAAO,MAAM,KAAK,GAAG,OAAO,IAAI;CAC/B,KAAKC,KAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAIC,iBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;EACnE,OAAO,CAAC,OAAO,CAAC,OAAO,CAACF,WAAc,EAAE,EAAE,CAAC,CAAC;;;;EAI5C;CACD,KAAK,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,GAAG,EAAE,OAAO,QAAQ,CAAC,EAAE;CAC/D,KAAK,OAAO,GAAG,MAAM,GAAG,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE;CAC7C,KAAK,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,IAAI,OAAO,GAAG,MAAM,GAAG,EAAE,OAAO,GAAG,CAAC,EAAE;CAC9E,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;CAC5E,CAAC;;AAEF,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAC9C,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AAC1C,AAAO,MAAM,QAAQ,SAAS,IAAI,CAAC;;CAElC,WAAW,CAAC,CAAC,OAAO,EAAE;EACrB,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM,GAAG,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAGG,QAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,mBAAmB,CAAC,OAAO,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAC7K,KAAK;GACJ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM;KACjB,GAAG,GAAG,GAAG,CAAC,eAAe;QACtB,aAAa,CAAC,MAAM;GACzB,CAAC;EACF,IAAI,CAAC,IAAI;GACR,CAAC,GAAG,kBAAkB;IACrB,CAAC,GAAG,iBAAiB;KACpB,GAAG,GAAG,YAAY;QACf,YAAY,CAAC;EACnB,IAAI,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC;EAC9B,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;EACnC;;CAED,OAAO,UAAU,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,YAAY,QAAQ,CAAC,EAAE;;;CAG/D,WAAW,CAAC,GAAG;EACd,KAAK,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE;EACzE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;EACrD;;CAED;;AAED,AAAO,MAAM,KAAK,GAAG,SAAS,KAAK,EAAE,SAAS,EAAE;CAC/C,IAAI,SAAS,CAAC;CACd,KAAK,GAAG,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,yDAAyD,CAAC,CAAC,EAAE;CACjH,KAAK,SAAS,GAAG,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;CAC3C,CAAC;AACF,AAAO,MAAM,YAAY,GAAG,SAAS,KAAK,IAAI,GAAG,CAAC;AAClD,AAAO,MAAM,cAAc,GAAG,SAAS,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;AAC3E,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACnF,AAAO,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,IAAI,KAAK,YAAY,KAAK,CAAC;;AC9EvE,MAAM,WAAW,GAAG,IAAIP,SAAO,CAAC;AAChC,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK;CACrC,KAAK,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG;EAC7B,KAAK,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,KAAK,CAAC,EAAE;EACtD,cAAc,CAAC,qCAAqC,CAAC,KAAK,EAAE,CAAC,CAAC;EAC9D;CACD,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;CAC7B,OAAO,KAAK,CAAC;CACb,CAAC;AACF,AAAO,MAAM,aAAa,GAAG,KAAK,IAAI,KAAK,CAAC;AAC5C,AAAO,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC;;AAEpC,AAAO,IAAI,4BAA4B,GAAG,EAAE,CAAC;AAC7C,AAAO,IAAI,SAAS,GAAG,IAAI,CAAC;;AAE5B,AAAO,IAAI,YAAY,GAAG,YAAY,CAAC;AACvC,AAAO,IAAI,IAAI,GAAG,KAAK,CAAC;AACxB,AAAO,IAAI,WAAW,GAAG,KAAK,CAAC;AAC/B,AAAO,IAAI,WAAW,GAAG,KAAK,CAAC;AAC/B,AAAO,IAAI,UAAU,GAAG,KAAK,CAAC;AAC9B,AAAO,IAAI,SAAS,GAAG,KAAK,CAAC;AAC7B,AAAO,IAAI,oDAAoD,GAAG,KAAK,CAAC;AACxE,AAAO,IAAI,yBAAyB,GAAG,KAAK,CAAC;AAC7C,AAAO,IAAI,MAAM,GAAG,YAAY,CAAC;AACjC,AAAO,IAAI,kBAAkB,GAAG,IAAI,CAAC;;AAErC,AAAO,SAAS,GAAG,EAAE,2DAA2D,EAAE,oBAAoB,EAAE,gBAAgB,EAAE;CACzH,KAAK,OAAO,2DAA2D,GAAG,QAAQ,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,+BAA+B,CAAC,CAAC,EAAE;CAC9I,KAAK,OAAO,oBAAoB,GAAG,SAAS,GAAG;EAC9C,KAAK,OAAO,oBAAoB,GAAG,QAAQ,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAC,EAAE;EAClG,KAAK,CAAC,aAAa,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,IAAI,UAAU,CAAC,0BAA0B,CAAC,CAAC,EAAE;EACjG;CACD,4BAA4B,GAAG,2DAA2D,CAAC;CAC3F,SAAS,GAAG,oBAAoB,CAAC;CACjC,KAAK,gBAAgB,GAAG,IAAI,GAAG;EAC9B,YAAY,GAAG,YAAY,CAAC;EAC5B,IAAI,GAAG,WAAW,GAAG,WAAW,GAAG,UAAU,GAAG,SAAS,GAAG,oDAAoD,GAAG,yBAAyB,GAAG,KAAK,CAAC;EACrJ,MAAM,GAAG,YAAY,CAAC;EACtB,kBAAkB,GAAG,IAAI,CAAC;EAC1B;MACI;EACJ,YAAY,GAAG,gBAAgB,CAAC,KAAK,GAAG,cAAc,GAAG,YAAY,CAAC;EACtE,IAAI,GAAG,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;EAC/B,WAAW,GAAG,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC;EACxC,WAAW,GAAG,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;EACtC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;EACrC,SAAS,GAAG,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC;EACnC,oDAAoD,GAAG,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC;EAChF,yBAAyB,GAAG,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC;EACnD,MAAM,GAAG,gBAAgB,CAAC,GAAG,GAAG,aAAa,GAAG,YAAY,CAAC;EAC7D,kBAAkB,GAAG,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC;EAClD,KAAK,kBAAkB,GAAG,IAAI,GAAG;GAChC,KAAK,OAAO,kBAAkB,GAAG,UAAU,GAAG;IAC7C,KAAK,kBAAkB,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,MAAM,IAAIC,OAAK,CAAC,oCAAoC,CAAC,CAAC,EAAE;IAC/F,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACjC;QACI,KAAK,OAAO,kBAAkB,GAAG,QAAQ,GAAG;IAChD,KAAK,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,GAAG;KAChD,MAAM,MAAM,IAAI,IAAI,mBAAmB,CAAC,kBAAkB,CAAC,GAAG;MAC7D,KAAK,OAAO,kBAAkB,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG;OACnD,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;OACxE;MACD,KAAK,kBAAkB,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG;OACtC,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAIA,OAAK,CAAC,6BAA6B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC;OAC3E;MACD;KACD;SACI;KACJ,MAAM,MAAM,GAAG,kBAAkB,CAAC;KAClC,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;KAClC,MAAM,MAAM,IAAI,IAAI,mBAAmB,CAAC,MAAM,CAAC,GAAG;MACjD,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;MACvC,KAAK,OAAO,iBAAiB,GAAG,UAAU,GAAG;OAC5C,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;OACxE;MACD,KAAK,kBAAkB,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG;OACtC,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAIA,OAAK,CAAC,6BAA6B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC;OAC3E;MACD,kBAAkB,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC;MAC7C;KACD;IACD;QACI,EAAE,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAC,EAAE;GAC5D;EACD;CACD;;AAED,AAAO,SAAS,KAAK,IAAI;CACxB,kBAAkB,GAAG,IAAI,CAAC;CAC1B;;AChGD;;AAEA,AAAO,MAAMO,wBAAsB,GAAG,0CAA0C,CAAC;AACjF,AAiCO,MAAMC,uBAAqB,GAAG,0DAA0D,CAAC;;AChChG,MAAM,YAAY,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;;AAErE,MAAM,kBAAkB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;CAClD,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;CACxB,KAAK,EAAE,GAAG,EAAE,OAAO,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE;CACtC,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;CACzC,EAAE,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,IAAI,QAAQ,CAAC,SAAS,MAAM,eAAe,CAAC,yBAAyB,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;CACzJ,OAAO,aAAa,CAAC,SAAS,CAAC,CAAC;CAChC,CAAC;;AAEF,MAAM,iBAAiB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;CACrD,KAAK,EAAE,GAAG,IAAI,GAAG,EAAE,OAAOC,4BAAoC,CAAC,EAAE;CACjE,KAAK,EAAE,GAAG;EACT,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,+EAA+E,CAAC,KAAK,EAAE,CAAC,CAAC;EAC/H,OAAO,EAAE,CAAC;EACV;CACD,OAAO,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;CAC9C,CAAC;;AAEF,AAAO,MAAM,UAAU,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAACC,wBAAyB,EAAE,kBAAkB,CAAC,CAAC;;AAEpG,AAAO,MAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAACC,uBAAwB,EAAE,iBAAiB,CAAC,CAAC;;ACvBjG,MAAM,uBAAuB,GAAG,6BAA6B,CAAC;AAC9D,AAAO,SAAS,8BAA8B,EAAE,CAAC,EAAE;CAClD,MAAM,IAAI,EAAE,GAAG,EAAE,MAAM;EACtB,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;EAC5B,MAAM,CAAC,GAAG,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1C,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EACzB;CACD;;AAED,MAAM,iCAAiC,GAAG,mFAAmF,CAAC;AAC9H,AAAO,SAAS,sCAAsC,EAAE,CAAC,EAAE;CAC1D,OAAO,CAAC,CAAC,OAAO,CAAC,iCAAiC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;CAC7D;;AAED,MAAM,YAAY,GAAG,qFAAqF,CAAC;AAC3G,AAAO,SAAS,iBAAiB,EAAE,EAAE,EAAE;CACtC,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CACjB,MAAM,IAAI,EAAE,GAAG,EAAE,MAAM;EACtB,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAChC,KAAK,CAAC,GAAG,IAAI,GAAG;GACf,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;GAChD,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAACC,cAAiB,EAAE,EAAE,CAAC,EAAE,CAAC;GACvD;EACD,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EAC3B;CACD;;AAED,MAAM,QAAQ,GAAG,SAAS,CAAC;AAC3B,MAAM,WAAW,GAAG,gCAAgC,CAAC;AACrD,MAAM,OAAO,GAAG,iBAAiB,CAAC;;AAElC,AAAO,SAAS,qBAAqB,EAAE,CAAC,EAAE;CACzC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CAC7B,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAACC,cAAiB,EAAE,EAAE,CAAC,CAAC;CACvD,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CACtB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC;CACtD,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;CAC/C,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CAC7B,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC;CACvD,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;CACzD,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;CACrC;;AAED,MAAM,cAAc,GAAG,iDAAiD,CAAC;AACzE,AAAO,SAAS,mBAAmB,EAAE,CAAC,EAAE;CACvC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CACtB,MAAM,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;CAC/E,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CAC5C;;AAED,SAAS,OAAO,EAAE,CAAC,EAAE;CACpB,MAAM,IAAI,IAAI,GAAG,EAAE,MAAM;EACxB,KAAK,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GACxB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACf,MAAM,IAAI,GAAG,GAAG,GAAG,MAAM;IACxB,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC,GAAG,IAAI,GAAG;KACf,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;KAC/C,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACf,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;KAChB,MAAM;KACN;IACD,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACzB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ;GACD;OACI;GACJ,MAAM,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;GACvG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;GACxB,IAAI,IAAI,GAAG,CAAC;GACZ;EACD,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE;EAChC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EACzB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACb;CACD;;AC5EM,SAAS,yBAAyB,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE;CACtEC,yBAAiC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;CAC/DC,eAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,gBAAgB,CAAC,gDAAgD,CAAC,KAAK,EAAE,CAAC,CAAC;CACjH,IAAI,MAAM,CAAC;CACX,IAAI,QAAQ,CAAC;CACb;EACC,MAAM,QAAQ,GAAG,EAAE,CAAC;EACpB,MAAM,MAAM,KAAK,GAAG,IAAI,EAAE,MAAM;GAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;GACpD,KAAK,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG;IACpC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAACF,cAAiB,EAAE,EAAE,CAAC,CAAC;IAC1E,MAAM;IACN;GACD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GACvB;EACD,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7B;CACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;EAC/B,MAAM,mBAAmB,GAAGG,cAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;EAC1F,QAAQ,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;EAClC,MAAM,MAAM,aAAa,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,CAACC,aAAgB,CAAC,GAAG;GAC7E,KAAKC,WAAc,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG;IACzC,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAGC,sBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5F,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,gBAAgB,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3F,IAAI,QAAQ,CAAC;IACb,SAAS,QAAQ,CAAC,CAAC,CAAC;KACnB,KAAK,GAAG;MACP,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACjC,MAAM;KACP,KAAK,GAAG;MACP,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7C,MAAM;KACP,KAAK,GAAG;MACP,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;MACnC,QAAQ,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;MAChD,MAAM;KACP,KAAK,GAAG;MACP,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAGC,cAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC/D,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;MACpB,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,CAACC,GAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;MACzE,QAAQ,GAAG,CAAC,GAAG,IAAI,KAAK,KAAK,CAAC,OAAO,CAACC,MAAS,EAAE,EAAE,IAAI;OACtD,KAAK,EAAE,GAAG,IAAI,GAAG,EAAE,OAAO,GAAG,CAAC,EAAE;OAChC,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OACtB,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;OAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OACpB,OAAO,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;OAChD,CAAC,CAAC;MACH,MAAM;KACP;IACD,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC1C;QACI;IACJ,MAAM,GAAG,GAAG,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACzC,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,KAAK,EAAE,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,IAAI;KACnE,MAAM,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,GAAG,GAAG;MAC/C,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG;OACvC,KAAK,IAAI,QAAQ,CAAC;OAClB,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC;OACvB,SAAS,KAAK,CAAC;OACf;MACD;KACD,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;KACvB,EAAE,KAAK,CAAC;KACR;IACD,MAAM,GAAG,KAAK,CAAC;IACf;GACD;EACD;CACD,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;CACzB,OAAO,QAAQ,CAAC;CAChB;;AAED,SAAS,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE;CAC9C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC;CACpB,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,CAACC,mBAAsB,CAAC,CAAC;CAC3D,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,IAAI;EAC5D,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC7B,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACjF,aAAa,IAAI,MAAM,IAAI,gBAAgB,CAAC,6DAA6D,CAAC,KAAK,EAAE,CAAC,CAAC;EACnH,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,gBAAgB,CAAC,YAAY,GAAG,aAAa,GAAG,UAAU,GAAG,uBAAuB,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC1H,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC/B,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACzF,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EAC1B;CACD,OAAO,GAAG,CAAC;CACX;;AAED,SAAS,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;CACnC,IAAI,EAAE,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;CAC1C,OAAO,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;CAC9B;;AAED,AAAO,SAAS,iBAAiB,EAAE,IAAI,EAAE;CACxCC,kBAA0B,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;CACxDC,QAAgB,CAAC,GAAG,CAACD,kBAA0B,CAAC,IAAI,IAAI,IAAIA,kBAA0B,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;CAC9G;;AAED,AAAO,SAAS,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE;CACvC,OAAOC,QAAgB,CAAC,GAAG,CAACD,kBAA0B,CAAC,GAAGA,kBAA0B,CAAC,IAAI,EAAE,KAAK,CAAC,GAAGA,kBAA0B,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;CAC5I;;AChGD,MAAM,WAAW,GAAG,IAAI,OAAO,CAAC;AAChC,MAAM,UAAU,GAAG,IAAI,OAAO,CAAC;;AAE/B,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC;AACxB,MAAM,cAAc,GAAG,CAAC,CAAC;AACzB,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAC9B,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAC9B,MAAM,eAAe,GAAG,CAAC,CAAC;AAC1B,MAAM,aAAa,GAAG,CAAC,CAAC;AACxB,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3B,MAAM,eAAe,GAAG,CAAC,CAAC;;AAE1B,AAAe,SAAS,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,2DAA2D,EAAE,oBAAoB,GAAG,IAAI,EAAE,gBAAgB,GAAG,IAAI,EAAE;CAC5K,KAAK,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAE;CACtE,KAAK,OAAO,WAAW,GAAG,QAAQ,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,oBAAoB,CAAC,CAAC,EAAE;CACnF,KAAK,YAAY,GAAG,GAAG,GAAG,EAAE,MAAM,IAAIxB,OAAK,CAAC,sBAAsB,CAAC,CAAC,EAAE;CACtE0B,GAAW,CAAC,2DAA2D,EAAE,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;CACjH,MAAM,SAAS,GAAG,IAAIC,YAAoB,CAAC;CAC3C,IAAI;EACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAACC,GAAM,EAAE,EAAE,CAAC,CAAC,KAAK,CAACC,GAAM,CAAC,CAAC,CAAC;EACpD,IAAI,gBAAgB,GAAG,SAAS,CAAC;EACjC,QAAQ,IAAI,EAAE,GAAG;GAChB,MAAM,IAAI,GAAG,IAAI,EAAE,CAAC,OAAO,CAAChB,cAAiB,EAAE,EAAE,CAAC,CAAC;GACnD,KAAK,IAAI,GAAG,EAAE,GAAG,CAAG;QACf,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAChC,KAAKiB,WAAmB,GAAG,EAAE,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7E;QACI,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAChC,MAAM,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,GAAGC,qBAA6B,CAAC,IAAI,CAAC,CAAC;IACzG,eAAe,GAAG,eAAe,IAAI,gBAAgB,CAAC,yDAAyD,CAAC,KAAK,EAAE,CAAC,CAAC;IACzH,gBAAgB,GAAG,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;IACvE;QACI;IACJ,MAAMC,OAAI,GAAG,YAAY,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAClD,KAAKA,OAAI,GAAG,EAAE,GAAG,CAAG;SACf,KAAKA,OAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KAChC,KAAKF,WAAmB,GAAG,EAAE,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAGE,OAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KAC7E;SACI,EAAE,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;IACnC;GACD;EACD;SACO;EACP,IAAI,EAAE,CAAC;EACPC,KAAa,EAAE,CAAC;EAChB;CACD,OAAO,SAAS,CAAC;CACjB,AACD;AACA,SAAS,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE;CACxD,MAAM,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;CACvC,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;CACnC,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;CACzC,IAAI,SAAS,CAAC;CACd,KAAK,WAAW,GAAG;EAClB,IAAI,aAAa,CAAC;EAClB,KAAK,QAAQ,IAAI,KAAK,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,UAAU,CAAC,qDAAqD,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;OACtJ,EAAE,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE;EAC9C,aAAa,CAAC,IAAI,CAAC,SAAS,GAAG,IAAIN,YAAoB,CAAC,CAAC;EACzD;MACI;EACJ,KAAK,QAAQ,IAAI,KAAK,GAAG;GACxBO,IAAY,IAAI,UAAU,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,UAAU,CAAC,gCAAgC,CAAC,KAAK,EAAE,CAAC,CAAC;GACpH,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;GAC7B;OACI,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,SAAS,GAAG,IAAIP,YAAoB,CAAC,EAAE;EAChE;CACD,KAAKG,WAAmB,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;CACnF,OAAO,SAAS,CAAC;CACjB;;AAED,SAAS,SAAS,EAAE,OAAO,EAAE;CAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAACK,IAAO,CAAC,CAAC;CACpC,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI;EACzC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;EACxB,KAAK,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;OACzD,KAAK,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;GAC3C;EACD;CACD,OAAO,IAAI,CAAC;CACZ;;AAED,SAAS,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE;CACnC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;CACxB,IAAI,KAAK,GAAG,CAAC,CAAC;CACd,QAAQ,KAAK,CAAC,MAAM,GAAG;EACtB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;EAC1B,KAAK,GAAG,IAAI,KAAK,GAAG;GACnB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;GACnB,KAAK,OAAO,CAAC,KAAK,CAAC,GAAG;IACrB,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,yDAAyD,CAAC,KAAK,EAAE,CAAC,CAAC;IACxG;QACI,KAAK,OAAO,CAAC,KAAK,CAAC,GAAG;IAC1B,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,mDAAmD,CAAC,KAAK,EAAE,CAAC,CAAC;IAClG,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B;QACI,EAAE,UAAU,CAAC,oDAAoD,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;GAClF;OACI;GACJ,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,IAAIR,YAAoB,CAAC,CAAC;GAC9D,QAAQ,KAAK,CAAC,MAAM,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAIA,YAAoB,CAAC,CAAC,EAAE;GACnG,OAAO,KAAK,CAAC;GACb;EACD;CACD,OAAO,KAAK,CAAC;CACb;;AAED,SAAS,kBAAkB,EAAE,KAAK,EAAE,IAAI,EAAE;CACzC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;CACxB,IAAI,KAAK,GAAG,CAAC,CAAC;CACd,QAAQ,KAAK,CAAC,MAAM,GAAG;EACtB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;EAC1B,KAAK,GAAG,IAAI,KAAK,GAAG;GACnB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;GACnB,OAAO,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,uDAAuD,CAAC,KAAK,EAAE,CAAC,CAAC;GAC9F,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,4DAA4D,CAAC,KAAK,EAAE,CAAC,CAAC;GAC3G;OACI;GACJ,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,IAAIA,YAAoB,CAAC;GAC9C,QAAQ,KAAK,CAAC,MAAM,GAAG,EAAE,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAIA,YAAoB,CAAC,EAAE;GACnF,OAAO,KAAK,CAAC;GACb;EACD;CACD,OAAO,KAAK,CAAC;CACb;;AAED,SAAS,YAAY,EAAE,eAAe,EAAE,QAAQ,EAAE;CACjD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,GAAGS,mBAA2B,CAAC,QAAQ,CAAC,CAAC;CACxF,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;CAClC,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;CACpC,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;CACnC,MAAM,KAAK,GAAG,kBAAkB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;CAC/D,QAAQ,IAAI,KAAK,IAAI,UAAU,CAAC,mCAAmC,CAAC,KAAK,EAAE,CAAC,CAAC;CAC7E,SAAS,KAAK,CAAC,CAAC,CAAC;EAChB,KAAK,GAAG;GACP,QAAQ,GAAG,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACvD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACrD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACrD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACrD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,yBAAyB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GAC7D,MAAM;EACP;GACC,IAAI,OAAO,CAAC;GACZ,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAGC,UAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,GAAG;GACzF,KAAK,CAAC,QAAQ,CAAC;IACd,OAAO,GAAG,MAAM,GAAG,IAAI,GAAG,OAAO,GAAG,OAAO,GAAG,KAAK;KAClD,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,CAAC,QAAQ;MAC5E,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,IAAI,OAAO,GAAG,MAAM,GAAG,GAAG;OAC5D,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC;QAC3H,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;SACxHC,UAAkB,IAAI,OAAO,GAAG,MAAM,IAAIC,SAAiB,IAAI,OAAO,GAAG,KAAK,GAAG,IAAI;UACpF,OAAO,CAAC,OAAO,EAAEC,SAAiB,EAAEC,WAAmB,CAAC,CAAC;GAChE,MAAM;EACP;CACD,KAAK,MAAM,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;CACrE,KAAKX,WAAmB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;EACtD,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChD,OAAO,EAAE,CAAC;EACV;CACD,OAAO,QAAQ,CAAC;CAChB;;AAED,SAAS,mBAAmB,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;CACvD,IAAI,CAAC,CAAC;CACN,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG;EACzD,CAAC,GAAGY,cAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ;CACD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC3B,CAAC,GAAGC,yBAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC/C,KAAK,CAAC,GAAG;EACRC,6BAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,8FAA8F,CAAC,KAAK,EAAE,CAAC,CAAC;EACxK,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ;CACD,KAAK,OAAO,GAAG;EACdA,6BAAgC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,8FAA8F,CAAC,KAAK,EAAE,CAAC,CAAC;EAC3K,OAAO,IAAInC,4BAAoC,CAAC;EAChD;CACD,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC;CACrB,YAAY;EACX,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;EAC3C,CAAC,GAAGkC,yBAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5C,KAAK,CAAC,GAAG;GACRC,6BAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,8FAA8F,CAAC,KAAK,EAAE,CAAC,CAAC;GACxK,KAAK,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAC/B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;GACZ;EACD,OAAO,IAAI,IAAI,CAACnC,4BAAoC,CAAC;EACrD;CACD;;AAED,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;CACrD,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG;EACzD,MAAM,CAAC,GAAGoC,iBAAyB,CAAC,OAAO,CAAC,CAAC;EAC7C,KAAK,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ;CACD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC3B,MAAM,CAAC,GAAGC,8BAAsC,CAAC,OAAO,CAAC,CAAC;CAC1D,KAAK,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG;EAC1CC,sCAA8C,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;EAC/E,KAAK,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;EAChC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAClC,cAAiB,EAAE,EAAE,CAAC,CAAC;EAChE;CACD,KAAK,OAAO,GAAG;EACd,OAAO,IAAI,IAAI,CAAC;EAChBkC,sCAA8C,CAAC,OAAO,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;EACrF;CACD,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC;CACrB,YAAY;EACX,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;EACvC,MAAM,CAAC,GAAGD,8BAAsC,CAAC,IAAI,CAAC,CAAC;EACvD,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG;GACvCC,sCAA8C,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;GAC/E,KAAK,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GACvC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAClC,cAAiB,EAAE,EAAE,CAAC,CAAC;GAC7D;EACD,IAAI,IAAI,IAAI,CAAC;EACbkC,sCAA8C,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;EAClF,OAAO,IAAI,IAAI,CAAC;EAChB;CACD;;AAED,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;CACtD,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAIpB,YAAoB,CAAC;CAC/D,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAC7B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACf,cAAiB,EAAE,EAAE,CAAC,CAAC;CACnD,KAAKoC,oDAA4D,GAAG;EACnE,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC;EACrB,YAAY;GACX,YAAY;IACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;SACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KACpC,KAAKlB,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KACtE;SACI,EAAE,MAAM,EAAE;IACf,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAACjB,cAAiB,EAAE,EAAE,CAAC,CAAC;IACtE;GACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnF,QAAQ,GAAG,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;GAC/C,YAAY;IACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;SACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KACpC,KAAKkB,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KACtE;SACI,EAAE,MAAM,EAAE;IACf,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAACjB,cAAiB,EAAE,EAAE,CAAC,CAAC;IACtE;GACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACvF;EACD;MACI;EACJ,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;EACnF,EAAE,QAAQ,GAAG,EAAE,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,gBAAgB,CAAC,uEAAuE,CAAC,KAAK,EAAE,CAAC,CAAC;EACnJ,YAAY;GACX,QAAQ,GAAG,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;GAC/C,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnF,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAC/B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC;IACnD,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,yFAAyF,CAAC,KAAK,EAAE,CAAC,CAAC;IAChJ;GACD,EAAE,QAAQ,GAAG,EAAE,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,gBAAgB,CAAC,uEAAuE,CAAC,KAAK,EAAE,CAAC,CAAC;GACnJ;EACD;CACD;;AAED,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;CACtD,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;CACzC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAC7B,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC;CACrB,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC;CACnD,YAAY;EACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;OACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GACpC,KAAKkB,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;GACtE;OACI,EAAE,MAAM,EAAE;EACf,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAACjB,cAAiB,EAAE,EAAE,CAAC,CAAC;EACtE;CACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;CACnF,YAAY;EACX,QAAQ,GAAG,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;EAC7C,YAAY;GACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;QACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IACpC,KAAKkB,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IACtE;QACI,EAAE,MAAM,EAAE;GACf,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAACjB,cAAiB,EAAE,EAAE,CAAC,CAAC;GACtE;EACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GAC/B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC;GACnD,KAAKkB,WAAmB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IACtD,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrE,QAAQ,GAAG,EAAE,CAAC;IACd;GACD,YAAY;IACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;SACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KACpC,KAAKA,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KACtE;SACI,EAAE,MAAM,EAAE;IACf,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAACjB,cAAiB,EAAE,EAAE,CAAC,CAAC;IACtE;GACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnF;OACI;GACJ,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnF,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC;GAC1B;EACD;CACD;;AAED,SAAS,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE;CACrC,MAAM,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CACzC,IAAI,IAAI,CAAC;CACT,KAAK,MAAM,GAAG;EACbqC,MAAc,GAAGC,aAAqB,IAAI,gBAAgB,CAAC,uDAAuD,CAAC,KAAK,EAAE,CAAC,CAAC;EAC5H,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAGC,WAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,GAAG;EAC1F,iBAAiB,CAAC,IAAI,CAAC,CAAC;EACxB;CACD,MAAM,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;CAClC,SAAS,QAAQ,CAAC,CAAC,CAAC;EACnB,KAAK,GAAG;GACP,QAAQ,GAAG,mBAAmB,CAACF,MAAc,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC3F,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAACA,MAAc,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GACzF,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAACA,MAAc,CAAC,KAAK,EAAE,mBAAmB,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC9F,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAACA,MAAc,CAAC,KAAK,EAAE,mBAAmB,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC9F,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,yBAAyB,CAACA,MAAc,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GACjG,MAAM;EACP;GACC,IAAI,OAAO,CAAC;GACZ,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAGZ,UAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,KAAK,EAAE,CAAC,GAAG;GAC5F,KAAK,OAAO,GAAG,MAAM,GAAG,EAAEY,MAAc,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;QACzE,KAAK,OAAO,GAAG,OAAO,GAAG,EAAEA,MAAc,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QAChF,KAAK,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,GAAG,EAAEA,MAAc,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;QACnG,KAAK,OAAO,GAAG,MAAM,GAAG,EAAEA,MAAc,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE;QACjF,KAAK,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,IAAI,OAAO,GAAG,MAAM,GAAG;IACnEA,MAAc,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C;QACI,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAChHA,MAAc,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACpE;QACI,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG;IACpHA,MAAc,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1D;QACI,KAAKX,UAAkB,IAAI,OAAO,GAAG,MAAM,IAAIC,SAAiB,IAAI,OAAO,GAAG,KAAK,GAAG;IAC1FU,MAAc,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C;QACI;IACJA,MAAc,CAAC,KAAK,EAAE,eAAe,CAAC;MACpC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAET,SAAiB,EAAEC,WAAmB,CAAC,CAAC,CAAC;IACjE;GACD,MAAM;EACP;CACD,KAAK,MAAM,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;CACvE,KAAKX,WAAmB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;EACtD,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjD,OAAO,EAAE,CAAC;EACV;CACD,OAAO,QAAQ,CAAC;CAChB;;AClYD,MAAM,IAAI,GAAG;CACZ,KAAK;CACL,QAAQ;CACR,KAAK;CACL,OAAO;CACP,CAAC;;;;",
	"sourcesContent":
		[
			"export default '0.5.53';",
			"export const { WeakSet, WeakMap, SyntaxError, RangeError, TypeError, Error, BigInt, Date, parseInt, Infinity, NaN, Map, RegExp,\n\tArray: { isArray },\n\tString: { fromCodePoint },\n\tNumber: { isSafeInteger },\n\tObject: { create, getOwnPropertyNames },\n\tReflect: { getPrototypeOf },\n\tSymbol,\n\tSymbol: { for: Symbol_for },\n\tJSON: { stringify },\n\tBuffer: { isBuffer },\n} = global;\n",
			"﻿/*!\n * 模块名称：@ltd/j-orderify\n * 模块功能：返回一个能保证给定对象的属性按此后添加顺序排列的 proxy，即使键名是 symbol，或整数 string。\n   　　　　　Return a proxy for given object, which can guarantee own keys are in setting order, even if the key name is symbol or int string.\n * 模块版本：1.0.0\n * 许可条款：LGPL-3.0\n * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)\n * 问题反馈：https://GitHub.com/LongTengDao/j-orderify/issues\n * 项目主页：https://GitHub.com/LongTengDao/j-orderify/\n */\n\nconst version = '1.0.0';\n\nconst { defineProperty, deleteProperty, ownKeys } = Reflect;\n\nconst ownKeysKeepers = new WeakMap;\n\nconst handlers = Object.create(null, {\n\tdefineProperty: {\n\t\tvalue (target, key, descriptor) {\n\t\t\tif ( defineProperty(target, key, descriptor) ) {\n\t\t\t\townKeysKeepers.get(target).add(key);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\tdeleteProperty: {\n\t\tvalue (target, key) {\n\t\t\tif ( deleteProperty(target, key) ) {\n\t\t\t\townKeysKeepers.get(target).delete(key);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\townKeys: {\n\t\tvalue (target) {\n\t\t\treturn [...ownKeysKeepers.get(target)];\n\t\t}\n\t},\n});\n\nconst orderify = object => {\n\townKeysKeepers.set(object, new Set(ownKeys(object)));\n\treturn new Proxy(object, handlers);\n};\n\nconst _export = ( () => {\n\tconst orderify = object => {\n\t\townKeysKeepers.set(object, new Set(ownKeys(object)));\n\t\treturn new Proxy(object, handlers);\n\t};\n\torderify.version = version;\n\treturn orderify.orderify = orderify.default = orderify;\n} )();\n\nexport default _export;\nexport { orderify, version };\n\n/*¡ @ltd/j-orderify */\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnNpb24/dGV4dCIsImV4cG9ydC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAnMS4wLjAnOyIsImltcG9ydCB2ZXJzaW9uIGZyb20gJy4vdmVyc2lvbj90ZXh0JzsvLyBSZWZsZWN0LCBXZWFrTWFwLCBPYmplY3QsIFNldCwgUHJveHlcblxuY29uc3QgeyBkZWZpbmVQcm9wZXJ0eSwgZGVsZXRlUHJvcGVydHksIG93bktleXMgfSA9IFJlZmxlY3Q7XG5cbmNvbnN0IG93bktleXNLZWVwZXJzID0gbmV3IFdlYWtNYXA7XG5cbmNvbnN0IGhhbmRsZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsLCB7XG5cdGRlZmluZVByb3BlcnR5OiB7XG5cdFx0dmFsdWUgKHRhcmdldCwga2V5LCBkZXNjcmlwdG9yKSB7XG5cdFx0XHRpZiAoIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBkZXNjcmlwdG9yKSApIHtcblx0XHRcdFx0b3duS2V5c0tlZXBlcnMuZ2V0KHRhcmdldCkuYWRkKGtleSk7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fSxcblx0ZGVsZXRlUHJvcGVydHk6IHtcblx0XHR2YWx1ZSAodGFyZ2V0LCBrZXkpIHtcblx0XHRcdGlmICggZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBrZXkpICkge1xuXHRcdFx0XHRvd25LZXlzS2VlcGVycy5nZXQodGFyZ2V0KS5kZWxldGUoa2V5KTtcblx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9LFxuXHRvd25LZXlzOiB7XG5cdFx0dmFsdWUgKHRhcmdldCkge1xuXHRcdFx0cmV0dXJuIFsuLi5vd25LZXlzS2VlcGVycy5nZXQodGFyZ2V0KV07XG5cdFx0fVxuXHR9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBvcmRlcmlmeSA9IG9iamVjdCA9PiB7XG5cdG93bktleXNLZWVwZXJzLnNldChvYmplY3QsIG5ldyBTZXQob3duS2V5cyhvYmplY3QpKSk7XG5cdHJldHVybiBuZXcgUHJveHkob2JqZWN0LCBoYW5kbGVycyk7XG59O1xuXG5leHBvcnQgeyB2ZXJzaW9uIH07XG5cbmV4cG9ydCBkZWZhdWx0ICggKCkgPT4ge1xuXHRjb25zdCBvcmRlcmlmeSA9IG9iamVjdCA9PiB7XG5cdFx0b3duS2V5c0tlZXBlcnMuc2V0KG9iamVjdCwgbmV3IFNldChvd25LZXlzKG9iamVjdCkpKTtcblx0XHRyZXR1cm4gbmV3IFByb3h5KG9iamVjdCwgaGFuZGxlcnMpO1xuXHR9O1xuXHRvcmRlcmlmeS52ZXJzaW9uID0gdmVyc2lvbjtcblx0cmV0dXJuIG9yZGVyaWZ5Lm9yZGVyaWZ5ID0gb3JkZXJpZnkuZGVmYXVsdCA9IG9yZGVyaWZ5O1xufSApKCk7XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxnQkFBZSxPQUFPOzt3QkFBQyx4QkNFdkIsTUFBTSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsT0FBTyxFQUFFLEdBQUcsT0FBTyxDQUFDOztBQUU1RCxNQUFNLGNBQWMsR0FBRyxJQUFJLE9BQU8sQ0FBQzs7QUFFbkMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Q0FDcEMsY0FBYyxFQUFFO0VBQ2YsS0FBSyxDQUFDLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUU7R0FDL0IsS0FBSyxjQUFjLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRztJQUM5QyxjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNwQyxPQUFPLElBQUksQ0FBQztJQUNaO0dBQ0QsT0FBTyxLQUFLLENBQUM7R0FDYjtFQUNEO0NBQ0QsY0FBYyxFQUFFO0VBQ2YsS0FBSyxDQUFDLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRTtHQUNuQixLQUFLLGNBQWMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUc7SUFDbEMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkMsT0FBTyxJQUFJLENBQUM7SUFDWjtHQUNELE9BQU8sS0FBSyxDQUFDO0dBQ2I7RUFDRDtDQUNELE9BQU8sRUFBRTtFQUNSLEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRTtHQUNkLE9BQU8sQ0FBQyxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztHQUN2QztFQUNEO0NBQ0QsQ0FBQyxDQUFDOztBQUVILEFBQVksTUFBQyxRQUFRLEdBQUcsTUFBTSxJQUFJO0NBQ2pDLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7Q0FDckQsT0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7Q0FDbkMsQ0FBQztBQUNGLEFBRUE7QUFDQSxnQkFBZSxFQUFFLE1BQU07Q0FDdEIsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFJO0VBQzFCLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDckQsT0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7RUFDbkMsQ0FBQztDQUNGLFFBQVEsQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0NBQzNCLE9BQU8sUUFBUSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQztDQUN2RCxJQUFJLENBQUM7Ozs7Ozs7OzsifQ==",
			"import { SyntaxError, RangeError, TypeError, Error } from './global.js';\n\nconst NONE = [];\nlet sourceLines = NONE;\nlet lastLineIndex = -1;\nlet lineIndex = -1;\n\nconst none = () => sourceLines===NONE;\nconst done = () => { sourceLines = NONE; };\nconst next = () => sourceLines[++lineIndex];\nconst rest = () => lineIndex!==lastLineIndex;\nconst mark = () => lineIndex;\nconst must = (message, startIndex) => {\n\tif ( lineIndex===lastLineIndex ) {\n\t\tconst error = new SyntaxError(message+' is not close until the end of the file, which started from line '+( startIndex+1 )+': '+sourceLines[startIndex]);\n\t\terror.lineIndex = lineIndex;\n\t\t//done();\n\t\tthrow error;\n\t}\n\treturn sourceLines[++lineIndex];\n};\nconst from = array => {\n\tsourceLines = array;\n\tlastLineIndex = sourceLines.length-1;\n\tlineIndex = -1;\n};\n\nexport { from, next, rest, mark, must, done, none };\nexport const throwSyntaxError = message => throws(new SyntaxError(message));\nexport const throwRangeError = message => throws(new RangeError(message));\nexport const throwTypeError = message => throws(new TypeError(message));\nexport const throwError = message => throws(new Error(message));\nexport const where = () => 'line '+( lineIndex+1 )+': '+sourceLines[lineIndex];\n\nfunction throws (error) {\n\tif ( sourceLines!==NONE ) {\n\t\terror.lineIndex = lineIndex;\n\t\terror.lineNumber = lineIndex+1;\n\t\t//done();\n\t}\n\tthrow error;\n}\n",
			"\n/* types */\n\nexport const ESCAPED_IN_SINGLE_LINE = /\\\\(?:([\\\\\"])|([btnfr])|u(.{4})|U(.{8}))/g;\n\nexport const UNDERSCORES = /_/g;\n\nexport const XOB_INTEGER = /^0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|o[0-7]+(?:_[0-7]+)*|b[01]+(?:_[01]+)*$/;\nexport const INTEGER = /^[-+]?[1-9]\\d*(?:_\\d+)*$/;\n\nexport const FLOAT = /^[-+]?(?:0|[1-9]\\d*(?:_\\d+)*)(?:\\.\\d+(?:_\\d+)*)?(?:[eE][-+]?\\d+(?:_\\d+)*)?$/;\nexport const FLOAT_NOT_INTEGER = /[.eE]/;\n\nconst _29_ = /(?:0[1-9]|1\\d|2[0-9])/;\nconst _30_ = /(?:0[1-9]|[12]\\d|30)/;\nconst _31_ = /(?:0[1-9]|[12]\\d|3[01])/;\nconst _23_ = /(?:[01]\\d|2[0-3])/;\nconst _59_ = /[0-5]\\d/;\nconst YMD = /\\d\\d\\d\\d-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|02-(?:0[1-9]|1\\d|2[0-9]))/;\nconst T = /[T ]/;\nconst HMS = /(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?/;\nconst Z = /Z|[+-](?:[01]\\d|2[0-3]):[0-5]\\d/;\nexport const DATETIME = /^(?:(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?|(\\d\\d\\d\\d-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|02-(?:0[1-9]|1\\d|2[0-9])))(?:([T ])((?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?)(Z|[+-](?:[01]\\d|2[0-3]):[0-5]\\d)?)?)$/;\n\n/* parser */\n\nconst Whitespace = /[ \\t]/;\n\nexport const BOM = /^\\uFEFF/;\nexport const EOL = /\\r?\\n/;\n\nexport const PRE_WHITESPACE = /^[ \\t]+/;\nexport const KEYS = /[\\w-]+|\"(?:[^\\\\\"]+|\\\\[^])*\"|'[^']*'/g;\nexport const VALUE_REST = /^((?:\\d\\d\\d\\d-\\d\\d-\\d\\d \\d)?[\\w\\-+.:]+)[ \\t]*([^]*)$/;\nexport const LITERAL_STRING = /^'([^'\\x00-\\x08\\x0B-\\x1F\\x7F]*)'[ \\t]*([^]*)/;\nexport const MULTI_LINE_LITERAL_STRING = /^([^]*?)'''[ \\t]*([^]*)/;\nexport const CONTROL_CHARACTER_EXCLUDE_TAB = /[\\x00-\\x08\\x0B-\\x1F\\x7F]/;\nexport const ESCAPED_IN_MULTI_LINE = /\\n|\\\\(?:([ \\n]+)|([\\\\\"])|([btnfr])|u([^]{4})|U([^]{8}))/g;\nexport const SYM_WHITESPACE = /^[^][ \\t]*/;\n\nexport const _VALUE_PAIR = /^!!([\\w-]*)[ \\t]+([^ \\t#][^]*)$/;\n\nconst String_ = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"/;\nconst KeyValuePairs = /(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*/;\nconst NonEmptyObject = /{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/;\nconst Object = /{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/;\nconst StringOrArray = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+]/;\nconst RegExpContent = /(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+/;\nconst Rule = /\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)/;\n\nexport const SUB = /{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/g;\nexport const DELIMITER_CHECK = /[^`]/;\nexport const INTERPOLATION = /\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)/g;\nexport const INTERPOLATIONS = /^(?:\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)[ \\t]*)*[ \\t]*([^]*)$/;\nexport const INTERPOLATION_TOKEN = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"/g;\nexport const REGEXP_MODE = /^\\([ \\t]*\\//;\nexport const PATTERN_FLAGS_REPLACER = /\\/((?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+)\\/([a-z]*)[ \\t]*=[ \\t]*('[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])/;\nexport const WHOLE_AND_SUBS = /('[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*([^]*)/;\nexport const DOLLAR = /\\$(?:[1-9]\\d?|\\$)/g;\n",
			"import { TypeError, BigInt, Date, Infinity, NaN, isSafeInteger, create, Symbol } from './global.js';\nimport { orderify } from '@ltd/j-orderify';\nimport { throwSyntaxError, throwRangeError, none, where } from './iterator.js';\nimport * as RE from './RE.js?<RegExp>';\n\nexport const Integer = (literal, useBigInt = true, allowLonger = false) => {\n\tif ( useBigInt===false ) {\n\t\tif ( literal==='0' || literal==='+0' || literal==='-0' ) { return 0; }\n\t\t( literal.charAt(0)==='0' ? RE.XOB_INTEGER : RE.INTEGER ).test(literal) || throwSyntaxError('Invalid Integer '+literal+( none() ? '' : ' at '+where() ));\n\t\tconst number = +literal.replace(RE.UNDERSCORES, '');\n\t\tallowLonger || isSafeInteger(number) || throwRangeError('Integer did not use BitInt must be Number.isSafeInteger, not includes '+literal+( none() ? '' : ' meet at '+where() ));\n\t\treturn number;\n\t}\n\telse {\n\t\tlet bigInt;\n\t\tif ( literal==='0' || literal==='+0' || literal==='-0' ) { bigInt = 0n; }\n\t\telse {\n\t\t\t( literal.charAt(0)==='0' ? RE.XOB_INTEGER : RE.INTEGER ).test(literal) || throwSyntaxError('Invalid Integer '+literal+( none() ? '' : ' at '+where() ));\n\t\t\tbigInt = BigInt(literal.replace(RE.UNDERSCORES, ''));\n\t\t\tallowLonger ||\n\t\t\t-9223372036854775808n<=bigInt && bigInt<=9223372036854775807n ||// ( min = -(2n**(64n-1n)) || ~max ) <= long <= ( max = 2n**(64n-1n)-1n || ~min )\n\t\t\tthrowRangeError('Integer expect 64 bit range (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807), not includes '+literal+( none() ? '' : ' meet at '+where() ));\n\t\t}\n\t\tif ( useBigInt===true ) { return bigInt; }\n\t\tisSafeInteger(useBigInt) || throwRangeError('TOML.Integer(,useBigInt) argument muse be safe integer.');\n\t\tif ( useBigInt<0 ? useBigInt<=bigInt && bigInt<= -useBigInt-1 : -useBigInt<=bigInt && bigInt<=useBigInt ) { return +( bigInt+'' ); }\n\t\treturn bigInt;\n\t}\n};\n\nexport const Float = literal => {\n\tif ( RE.FLOAT.test(literal) && RE.FLOAT_NOT_INTEGER.test(literal) ) {\n\t\treturn +literal.replace(RE.UNDERSCORES, '');\n\t\t//const number = +literal.replace(RE.UNDERSCORES, '');\n\t\t//isFinite(number) || throwRangeError('Float can not be as big as Infinity, like '+literal+( none() ? '' : ' at '+where() ));\n\t\t//return number;\n\t}\n\tif ( literal==='inf' || literal==='+inf' ) { return Infinity; }\n\tif ( literal==='-inf' ) { return -Infinity; }\n\tif ( literal==='nan' || literal==='+nan' || literal==='-nan' ) { return NaN; }\n\tthrowSyntaxError('Invalid Float '+literal+( none() ? '' : ' at '+where() ));\n};\n\nconst literal_cache = Symbol('literal_cache');\nconst value_cache = Symbol('value_cache');\nexport class Datetime extends Date {\n\t\n\tconstructor (literal) {\n\t\tconst [hms_ms = '', YMD = '', T = '', HMS_MS = hms_ms, Z = ''] = RE.DATETIME.exec(literal) || throwSyntaxError('Invalid Datetime '+literal+( none() ? '' : ' at '+where() ));\n\t\tsuper(\n\t\t\tZ ? YMD+'T'+HMS_MS+Z :\n\t\t\t\tT ? YMD+'T'+HMS_MS :\n\t\t\t\t\tYMD ? YMD+'T00:00:00.000'\n\t\t\t\t\t\t: '1970-01-01T'+HMS_MS\n\t\t);\n\t\tthis.type =\n\t\t\tZ ? 'Offset Date-Time' :\n\t\t\t\tT ? 'Local Date-Time' :\n\t\t\t\t\tYMD ? 'Local Date'\n\t\t\t\t\t\t: 'Local Time';\n\t\tthis[literal_cache] = literal;\n\t\tthis[value_cache] = this.getTime();\n\t}\n\t\n\tstatic isDatetime (value) { return value instanceof Datetime; }\n\t\n\t//toJSON () { return this.toISOString(); }\n\ttoISOString () {\n\t\tif ( this.getTime()===this[value_cache] ) { return this[literal_cache]; }\n\t\tthrow new Error('Datetime value has been modified.');\n\t}\n\t\n}\n\nexport const Table = function Table (keepOrder) {\n\tlet undefined;\n\tif ( new.target===undefined ) { throw new TypeError(\"Class constructor Table cannot be invoked without 'new'\"); }\n\tif ( keepOrder ) { return orderify(this); }\n};\nexport const TableDefault = function Table () { };\nexport const TableKeepOrder = function Table () { return orderify(this); };\nTable.prototype = TableDefault.prototype = TableKeepOrder.prototype = create(null);\nexport const isTable = Table.isTable = value => value instanceof Table;\n",
			"import { WeakMap, WeakSet, create, Error, getOwnPropertyNames, getPrototypeOf, stringify, TypeError, isSafeInteger, RangeError } from './global.js';\nimport { throwTypeError, where } from './iterator.js';\nimport { TableDefault, TableKeepOrder } from './types.js';\n\nconst TypedArrays = new WeakMap;\nconst reallyTypify = (array, type) => {\n\tif ( TypedArrays.has(array) ) {\n\t\tif ( TypedArrays.get(array)===type ) { return array; }\n\t\tthrowTypeError('Types in array must be same. Check '+where());\n\t}\n\tTypedArrays.set(array, type);\n\treturn array;\n};\nexport const unlimitedType = array => array;\nexport const FUNCTION = new WeakSet;\n\nexport let useWhatToJoinMultiLineString = '';\nexport let useBigInt = true;\n\nexport let TableDepends = TableDefault;\nexport let open = false;\nexport let allowLonger = false;\nexport let keepComment = false;\nexport let enableNull = false;\nexport let enableNil = false;\nexport let allowInlineTableMultiLineAndTrailingCommaEvenNoComma = false;\nexport let enableInterpolationString = false;\nexport let typify = reallyTypify;\nexport let customConstructors = null;\n\nexport function use (useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger, extensionOptions) {\n\tif ( typeof useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines!=='string' ) { throw new TypeError('TOML.parse(,,multiLineJoiner)'); }\n\tif ( typeof useBigInt_forInteger!=='boolean' ) {\n\t\tif ( typeof useBigInt_forInteger!=='number' ) { throw new TypeError('TOML.parse(,,,useBigInt)'); }\n\t\tif ( !isSafeInteger(useBigInt_forInteger) ) { throw new RangeError('TOML.parse(...useBigInt)'); }\n\t}\n\tuseWhatToJoinMultiLineString = useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines;\n\tuseBigInt = useBigInt_forInteger;\n\tif ( extensionOptions===null ) {\n\t\tTableDepends = TableDefault;\n\t\topen = allowLonger = keepComment = enableNull = enableNil = allowInlineTableMultiLineAndTrailingCommaEvenNoComma = enableInterpolationString = false;\n\t\ttypify = reallyTypify;\n\t\tcustomConstructors = null;\n\t}\n\telse {\n\t\tTableDepends = extensionOptions.order ? TableKeepOrder : TableDefault;\n\t\topen = !!extensionOptions.open;\n\t\tallowLonger = !!extensionOptions.longer;\n\t\tkeepComment = !!extensionOptions.hash;\n\t\tenableNull = !!extensionOptions.null;\n\t\tenableNil = !!extensionOptions.nil;\n\t\tallowInlineTableMultiLineAndTrailingCommaEvenNoComma = !!extensionOptions.multi;\n\t\tenableInterpolationString = !!extensionOptions.ins;\n\t\ttypify = extensionOptions.mix ? unlimitedType : reallyTypify;\n\t\tcustomConstructors = extensionOptions.new || null;\n\t\tif ( customConstructors!==null ) {\n\t\t\tif ( typeof customConstructors==='function' ) {\n\t\t\t\tif ( customConstructors.length!==2 ) { throw new Error('TOML.parse(,,,xOptions.new.length)'); }\n\t\t\t\tFUNCTION.add(customConstructors);\n\t\t\t}\n\t\t\telse if ( typeof customConstructors==='object' ) {\n\t\t\t\tif ( getPrototypeOf(customConstructors)===null ) {\n\t\t\t\t\tfor ( const type of getOwnPropertyNames(customConstructors) ) {\n\t\t\t\t\t\tif ( typeof customConstructors[type]!=='function' ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new TypeError('TOML.parse(,,,xOptions.new['+stringify(type)+'])');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( customConstructors[type].length ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new Error('TOML.parse(,,,xOptions.new['+stringify(type)+'].length)');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst origin = customConstructors;\n\t\t\t\t\tcustomConstructors = create(null);\n\t\t\t\t\tfor ( const type of getOwnPropertyNames(origin) ) {\n\t\t\t\t\t\tconst customConstructor = origin[type];\n\t\t\t\t\t\tif ( typeof customConstructor!=='function' ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new TypeError('TOML.parse(,,,xOptions.new['+stringify(type)+'])');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( customConstructors[type].length ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new Error('TOML.parse(,,,xOptions.new['+stringify(type)+'].length)');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomConstructors[type] = customConstructor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { throw new TypeError('TOML.parse(,,,xOptions.new)'); }\n\t\t}\n\t}\n}\n\nexport function clear () {\n\tcustomConstructors = null;\n}\n",
			"\n/* types */\n\nexport const ESCAPED_IN_SINGLE_LINE = /\\\\(?:([\\\\\"])|([btnfr])|u(.{4})|U(.{8}))/g;\n\nexport const UNDERSCORES = /_/g;\n\nexport const XOB_INTEGER = /^0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|o[0-7]+(?:_[0-7]+)*|b[01]+(?:_[01]+)*$/;\nexport const INTEGER = /^[-+]?[1-9]\\d*(?:_\\d+)*$/;\n\nexport const FLOAT = /^[-+]?(?:0|[1-9]\\d*(?:_\\d+)*)(?:\\.\\d+(?:_\\d+)*)?(?:[eE][-+]?\\d+(?:_\\d+)*)?$/;\nexport const FLOAT_NOT_INTEGER = /[.eE]/;\n\nconst _29_ = /(?:0[1-9]|1\\d|2[0-9])/;\nconst _30_ = /(?:0[1-9]|[12]\\d|30)/;\nconst _31_ = /(?:0[1-9]|[12]\\d|3[01])/;\nconst _23_ = /(?:[01]\\d|2[0-3])/;\nconst _59_ = /[0-5]\\d/;\nconst YMD = /\\d\\d\\d\\d-(?:(?:0[13578]|1[02])-<_31_>|(?:0[469]|11)-<_30_>|02-<_29_>)/;\nconst T = /[T ]/;\nconst HMS = /<_23_>:<_59_>:<_59_>(?:\\.\\d+)?/;\nconst Z = /Z|[+-]<_23_>:<_59_>/;\nexport const DATETIME = /^(?:<HMS>|(<YMD>)(?:(<T>)(<HMS>)(<Z>)?)?)$/;\n\n/* parser */\n\nconst Whitespace = /[ \\t]/;\n\nexport const BOM = /^\\uFEFF/;\nexport const EOL = /\\r?\\n/;\n\nexport const PRE_WHITESPACE = /^<Whitespace>+/;\nexport const KEYS = /[\\w-]+|\"(?:[^\\\\\"]+|\\\\[^])*\"|'[^']*'/g;\nexport const VALUE_REST = /^((?:\\d\\d\\d\\d-\\d\\d-\\d\\d \\d)?[\\w\\-+.:]+)<Whitespace>*([^]*)$/;\nexport const LITERAL_STRING = /^'([^'\\x00-\\x08\\x0B-\\x1F\\x7F]*)'<Whitespace>*([^]*)/;\nexport const MULTI_LINE_LITERAL_STRING = /^([^]*?)'''<Whitespace>*([^]*)/;\nexport const CONTROL_CHARACTER_EXCLUDE_TAB = /[\\x00-\\x08\\x0B-\\x1F\\x7F]/;\nexport const ESCAPED_IN_MULTI_LINE = /\\n|\\\\(?:([ \\n]+)|([\\\\\"])|([btnfr])|u([^]{4})|U([^]{8}))/g;\nexport const SYM_WHITESPACE = /^[^]<Whitespace>*/;\n\nexport const _VALUE_PAIR = /^!!([\\w-]*)<Whitespace>+([^ \\t#][^]*)$/;\n\nconst String_ = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"/;\nconst KeyValuePairs = /(?:<String_>)<Whitespace>*=<Whitespace>*(?:<String_>)<Whitespace>*(?:,<Whitespace>*(?:<String_>)<Whitespace>*=<Whitespace>*(?:<String_>)<Whitespace>*)*/;\nconst NonEmptyObject = /{<Whitespace>*<KeyValuePairs>}/;\nconst Object = /{<Whitespace>*}|<NonEmptyObject>/;\nconst StringOrArray = /<String_>|<NonEmptyObject>|\\[<Whitespace>+(?:<String_>)<Whitespace>*(?:,<Whitespace>*(?:<Object>)<Whitespace>*)+]/;\nconst RegExpContent = /(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+/;\nconst Rule = /\\(<Whitespace>*(?:\\/<RegExpContent>\\/[a-z]*<Whitespace>*=<Whitespace>*(?:<StringOrArray>)<Whitespace>*|<KeyValuePairs>)\\)/;\n\nexport const SUB = /<Object>/g;\nexport const DELIMITER_CHECK = /[^`]/;\nexport const INTERPOLATION = /<Rule>/g;\nexport const INTERPOLATIONS = /^(?:<Rule><Whitespace>*)*<Whitespace>*([^]*)$/;\nexport const INTERPOLATION_TOKEN = /<String_>/g;\nexport const REGEXP_MODE = /^\\(<Whitespace>*\\//;\nexport const PATTERN_FLAGS_REPLACER = /\\/(<RegExpContent>)\\/([a-z]*)<Whitespace>*=<Whitespace>*(<StringOrArray>)/;\nexport const WHOLE_AND_SUBS = /(<String_>)<Whitespace>*([^]*)/;\nexport const DOLLAR = /\\$(?:[1-9]\\d?|\\$)/g;\n",
			"import { fromCodePoint, parseInt } from './global.js';\nimport { throwRangeError, throwSyntaxError, where } from './iterator.js';\nimport * as options from './options.js';\nimport * as RE from './RE.js';\n\nconst ESCAPE_ALIAS = { b: '\\b', t: '\\t', n: '\\n', f: '\\f', r: '\\r' };\n\nconst unEscapeSingleLine = ($0, $1, $2, $3, $4) => {\n\tif ( $1 ) { return $1; }\n\tif ( $2 ) { return ESCAPE_ALIAS[$2]; }\n\tconst codePoint = parseInt($3 || $4, 16);\n\t( 0xD7FF<codePoint && codePoint<0xE000 || 0x10FFFF<codePoint ) && throwRangeError('Invalid Unicode Scalar '+( $3 ? '\\\\u'+$3 : '\\\\U'+$4 )+' at '+where());\n\treturn fromCodePoint(codePoint);\n};\n\nconst unEscapeMultiLine = ($0, $1, $2, $3, $4, $5) => {\n\tif ( $0==='\\n' ) { return options.useWhatToJoinMultiLineString; }\n\tif ( $1 ) {\n\t\t$1.includes('\\n') || throwSyntaxError('Back slash leading whitespaces can only appear at the end of a line, but see '+where());\n\t\treturn '';\n\t}\n\treturn unEscapeSingleLine('', $2, $3, $4, $5);\n};\n\nexport const SingleLine = literal => literal.replace(RE.ESCAPED_IN_SINGLE_LINE, unEscapeSingleLine);\n\nexport const MultiLine = literal => literal.replace(RE.ESCAPED_IN_MULTI_LINE, unEscapeMultiLine);\n",
			"import { throwSyntaxError, where } from './iterator.js';\nimport * as RE from './RE.js?<RegExp>';\n\nconst MULTI_LINE_BASIC_STRING = /^(?:[^\\\\\"]+|\\\\[^]|\"\"?(?!\"))/;\nexport function MULTI_LINE_BASIC_STRING_exec_0 (_) {\n\tfor ( let _0 = ''; ; ) {\n\t\tif ( _==='' ) { return _0; }\n\t\tconst $ = MULTI_LINE_BASIC_STRING.exec(_);\n\t\tif ( $===null ) { return _0; }\n\t\t_0 += $[0];\n\t\t_ = _.slice($[0].length);\n\t}\n}\n\nconst ESCAPED_EXCLUDE_CONTROL_CHARACTER = /[^\\\\\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\ \\n]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/g;\nexport function ESCAPED_EXCLUDE_CONTROL_CHARACTER_test (_) {\n\treturn _.replace(ESCAPED_EXCLUDE_CONTROL_CHARACTER, '')==='';\n}\n\nconst BASIC_STRING = /^(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))/;\nexport function BASIC_STRING_exec (_2) {\n\t_2 = _2.slice(1);\n\tfor ( let _1 = ''; ; ) {\n\t\tconst $ = BASIC_STRING.exec(_2);\n\t\tif ( $===null ) {\n\t\t\t_2.startsWith('\"') || throwSyntaxError(where());\n\t\t\treturn { 1: _1, 2: _2.replace(RE.SYM_WHITESPACE, '') };\n\t\t}\n\t\t_1 += $[0];\n\t\t_2 = _2.slice($[0].length);\n\t}\n}\n\nconst BARE_KEY = /^[\\w-]+/;\nconst LITERAL_KEY = /^'[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*'/;\nconst DOT_KEY = /^[ \\t]*\\.[ \\t]*/;\n\nexport function TABLE_DEFINITION_exec (_) {\n\tconst _1 = _.charAt(1)==='[';\n\t_ = _.slice(_1 ? 2 : 1).replace(RE.PRE_WHITESPACE, '');\n\tconst _2 = getKeys(_);\n\t_ = _.slice(_2.length).replace(RE.PRE_WHITESPACE, '');\n\t_.startsWith(']') || throwSyntaxError(where());\n\tconst _3 = _.charAt(1)===']';\n\t_ = _.slice(_3 ? 2 : 1).replace(RE.PRE_WHITESPACE, '');\n\t_==='' || _.startsWith('#') || throwSyntaxError(where());\n\treturn { 1: _1, 2: _2, 3: _3, 4: _ };\n}\n\nconst KEY_VALUE_PAIR = /^[ \\t]*=[ \\t]*(!!([\\w-]*)[ \\t]+)?([^ \\t#][^]*)$/;\nexport function KEY_VALUE_PAIR_exec (_) {\n\tconst _1 = getKeys(_);\n\tconst $ = KEY_VALUE_PAIR.exec(_.slice(_1.length)) || throwSyntaxError(where());\n\treturn { 1: _1, 2: $[1], 3: $[2], 4: $[3] };\n}\n\nfunction getKeys (_) {\n\tfor ( let keys = ''; ; ) {\n\t\tif ( _.startsWith('\"') ) {\n\t\t\t_ = _.slice(1);\n\t\t\tfor ( let key = '\"'; ; ) {\n\t\t\t\tconst $ = BASIC_STRING.exec(_);\n\t\t\t\tif ( $===null ) {\n\t\t\t\t\t_.startsWith('\"') || throwSyntaxError(where());\n\t\t\t\t\t_ = _.slice(1);\n\t\t\t\t\tkeys += key+'\"';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_ = _.slice($[0].length);\n\t\t\t\tkey += $[0];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst key = ( ( _.startsWith(\"'\") ? LITERAL_KEY : BARE_KEY ).exec(_) || throwSyntaxError(where()) )[0];\n\t\t\t_ = _.slice(key.length);\n\t\t\tkeys += key;\n\t\t}\n\t\tconst $ = DOT_KEY.exec(_);\n\t\tif ( $===null ) { return keys; }\n\t\t_ = _.slice($[0].length);\n\t\tkeys += $[0];\n\t}\n}\n",
			"import { Map, RegExp } from './global.js';\nimport { mark, must, throwError, throwSyntaxError, where } from './iterator.js';\nimport * as options from './options.js';\nimport { SingleLine } from './types-options.js';\nimport * as RE from './RE.js?<RegExp>';\n\nexport function assignInterpolationString (table, finalKey, delimiter) {\n\toptions.enableInterpolationString || throwSyntaxError(where());\n\tRE.DELIMITER_CHECK.test(delimiter) && throwSyntaxError('Interpolation String opening tag incorrect at '+where());\n\tlet string;\n\tlet lineRest;\n\t{\n\t\tconst literals = [];\n\t\tfor ( const start = mark(); ; ) {\n\t\t\tconst literal = must('Interpolation String', start);\n\t\t\tif ( literal.startsWith(delimiter) ) {\n\t\t\t\tlineRest = literal.slice(delimiter.length).replace(RE.PRE_WHITESPACE, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tliterals.push(literal);\n\t\t}\n\t\tstring = literals.join('\\n');\n\t}\n\tif ( lineRest.startsWith('(') ) {\n\t\tconst interpolations_rest = RE.INTERPOLATIONS.exec(lineRest) || throwSyntaxError(where());\n\t\tlineRest = interpolations_rest[2];\n\t\tfor ( const interpolation of interpolations_rest[1].match(RE.INTERPOLATION) ) {\n\t\t\tif ( RE.REGEXP_MODE.test(interpolation) ) {\n\t\t\t\tconst { 1: pattern, 2: flags, 3: Replacer } = RE.PATTERN_FLAGS_REPLACER.exec(interpolation);\n\t\t\t\tconst search = newRegExp(pattern, flags) || throwSyntaxError('Invalid regExp at '+where());\n\t\t\t\tlet replacer;\n\t\t\t\tswitch ( Replacer[0] ) {\n\t\t\t\t\tcase \"'\":\n\t\t\t\t\t\treplacer = Replacer.slice(1, -1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '\"':\n\t\t\t\t\t\treplacer = SingleLine(Replacer.slice(1, -1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tconst map = newMap(Replacer, true);\n\t\t\t\t\t\treplacer = $0 => map.has($0) ? map.get($0) : $0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tconst { 1: whole, 2: subs } = RE.WHOLE_AND_SUBS.exec(Replacer);\n\t\t\t\t\t\tconst maps = [null];\n\t\t\t\t\t\tfor ( const sub of subs.match(RE.SUB) ) { maps.push(newMap(sub, true)); }\n\t\t\t\t\t\treplacer = (...args) => whole.replace(RE.DOLLAR, $n => {\n\t\t\t\t\t\t\tif ( $n==='$$' ) { return '$'; }\n\t\t\t\t\t\t\tconst n = $n.slice(1);\n\t\t\t\t\t\t\tconst arg = args[n] || '';\n\t\t\t\t\t\t\tconst map = maps[n];\n\t\t\t\t\t\t\treturn map && map.has(arg) ? map.get(arg) : arg;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstring = string.replace(search, replacer);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst map = newMap(interpolation, false);\n\t\t\t\tlet round = '';\n\t\t\t\touter: for ( let length = string.length, index = 0; index<length; ) {\n\t\t\t\t\tfor ( const { 0: search, 1: replacer } of map ) {\n\t\t\t\t\t\tif ( string.startsWith(search, index) ) {\n\t\t\t\t\t\t\tround += replacer;\n\t\t\t\t\t\t\tindex += search.length;\n\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tround += string[index];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\tstring = round;\n\t\t\t}\n\t\t}\n\t}\n\ttable[finalKey] = string;\n\treturn lineRest;\n}\n\nfunction newMap (interpolation, usedForRegExp) {\n\tconst map = new Map;\n\tconst tokens = interpolation.match(RE.INTERPOLATION_TOKEN);\n\tfor ( let length = tokens.length, index = 0; index<length; ) {\n\t\tlet search = tokens[index++];\n\t\tsearch = search[0]===\"'\" ? search.slice(1, -1) : SingleLine(search.slice(1, -1));\n\t\tusedForRegExp || search || throwSyntaxError('Characters to replace can not be empty, which was found at '+where());\n\t\tmap.has(search) && throwSyntaxError('Duplicate '+( usedForRegExp ? 'replacer' : 'characters to replace' )+' at '+where());\n\t\tlet replacer = tokens[index++];\n\t\treplacer = replacer[0]===\"'\" ? replacer.slice(1, -1) : SingleLine(replacer.slice(1, -1));\n\t\tmap.set(search, replacer);\n\t}\n\treturn map;\n}\n\nfunction newRegExp (pattern, flags) {\n\ttry { return new RegExp(pattern, flags); }\n\tcatch (error) { return null; }\n}\n\nexport function ensureConstructor (type) {\n\toptions.customConstructors || throwSyntaxError(where());\n\toptions.FUNCTION.has(options.customConstructors) || type in options.customConstructors || throwError(where());\n}\n\nexport function construct (type, value) {\n\treturn options.FUNCTION.has(options.customConstructors) ? options.customConstructors(type, value) : options.customConstructors[type](value);\n}\n",
			"import { WeakSet, Error, TypeError, Infinity, NaN, isArray, Symbol_for, isBuffer, Symbol } from './global.js';\nimport { from, next, rest, done, mark, must, throwSyntaxError, throwError, where } from './iterator.js';\nimport { Integer, Float, Datetime, isTable } from './types.js';\nimport * as options from './options.js';\nimport { SingleLine, MultiLine } from './types-options.js';\nimport * as RE from './RE.js?<RegExp>';\nimport * as RE_good from './RE-never-slow-nor-overflow.js';\n\nimport { assignInterpolationString, ensureConstructor, construct } from './parser-extension.js';\n\nconst closeTables = new WeakSet;\nconst openTables = new WeakSet;\n\nconst ArrayOfNulls = -1;\nconst ArrayOfStrings = 1;\nconst ArrayOfInlineTables = 2;\nconst ArrayOfInlineArrays = 3;\nconst ArrayOfBooleans = 4;\nconst ArrayOfFloats = 5;\nconst ArrayOfDatetimes = 6;\nconst ArrayOfIntegers = 7;\n\nexport default function parse (toml_source, toml_version, useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger = true, extensionOptions = null) {\n\tif ( isBuffer(toml_source) ) { toml_source = toml_source.toString(); }\n\tif ( typeof toml_source!=='string' ) { throw new TypeError('TOML.parse(source)'); }\n\tif ( toml_version!==0.5 ) { throw new Error('TOML.parse(,version)'); }\n\toptions.use(useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger, extensionOptions);\n\tconst rootTable = new options.TableDepends;\n\ttry {\n\t\tfrom(toml_source.replace(RE.BOM, '').split(RE.EOL));\n\t\tlet lastSectionTable = rootTable;\n\t\twhile ( rest() ) {\n\t\t\tconst line = next().replace(RE.PRE_WHITESPACE, '');\n\t\t\tif ( line==='' ) { }\n\t\t\telse if ( line.startsWith('#') ) {\n\t\t\t\tif ( options.keepComment ) { lastSectionTable[Symbol('#')] = line.slice(1); }\n\t\t\t}\n\t\t\telse if ( line.startsWith('[') ) {\n\t\t\t\tconst { 1: $_asArrayItem$$, 2: keys, 3: $$asArrayItem$_, 4: hash } = RE_good.TABLE_DEFINITION_exec(line);\n\t\t\t\t$_asArrayItem$$===$$asArrayItem$_ || throwSyntaxError('Square brackets of table define statement not match at '+where());\n\t\t\t\tlastSectionTable = appendTable(rootTable, keys, $_asArrayItem$$, hash);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst rest = assignInline(lastSectionTable, line);\n\t\t\t\tif ( rest==='' ) { }\n\t\t\t\telse if ( rest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { lastSectionTable[Symbol('#')] = rest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { throwSyntaxError(where()); }\n\t\t\t}\n\t\t}\n\t}\n\tfinally {\n\t\tdone();\n\t\toptions.clear();\n\t}\n\treturn rootTable;\n};\n\nfunction appendTable (table, key_key, asArrayItem, hash) {\n\tconst leadingKeys = parseKeys(key_key);\n\tconst finalKey = leadingKeys.pop();\n\ttable = prepareTable(table, leadingKeys);\n\tlet lastTable;\n\tif ( asArrayItem ) {\n\t\tlet arrayOfTables;\n\t\tif ( finalKey in table ) { closeTables.has(arrayOfTables = table[finalKey]) && throwError('Trying to push Table to non-ArrayOfTables value at '+where()); }\n\t\telse { arrayOfTables = table[finalKey] = []; }\n\t\tarrayOfTables.push(lastTable = new options.TableDepends);\n\t}\n\telse {\n\t\tif ( finalKey in table ) {\n\t\t\toptions.open && openTables.has(lastTable = table[finalKey]) || throwError('Duplicate Table definition at '+where());\n\t\t\topenTables.delete(lastTable);\n\t\t}\n\t\telse { table[finalKey] = lastTable = new options.TableDepends; }\n\t}\n\tif ( options.keepComment && hash ) { table[Symbol_for(finalKey)] = hash.slice(1); }\n\treturn lastTable;\n}\n\nfunction parseKeys (key_key) {\n\tconst keys = key_key.match(RE.KEYS);\n\tfor ( let index = keys.length; index--; ) {\n\t\tconst key = keys[index];\n\t\tif ( key.startsWith(\"'\") ) { keys[index] = key.slice(1, -1); }\n\t\telse if ( key.startsWith('\"') ) {\n\t\t\tkeys[index] = SingleLine(key.slice(1, -1));\n\t\t}\n\t}\n\treturn keys;\n}\n\nfunction prepareTable (table, keys) {\n\tconst { length } = keys;\n\tlet index = 0;\n\twhile ( index<length ) {\n\t\tconst key = keys[index++];\n\t\tif ( key in table ) {\n\t\t\ttable = table[key];\n\t\t\tif ( isTable(table) ) {\n\t\t\t\tcloseTables.has(table) && throwError('Trying to define table through static Inline Object at '+where());\n\t\t\t}\n\t\t\telse if ( isArray(table) ) {\n\t\t\t\tcloseTables.has(table) && throwError('Trying to append value to static Inline Array at '+where());\n\t\t\t\ttable = table[table.length-1];\n\t\t\t}\n\t\t\telse { throwError('Trying to define table through non-Table value at '+where()); }\n\t\t}\n\t\telse {\n\t\t\topenTables.add(table = table[key] = new options.TableDepends);\n\t\t\twhile ( index<length ) { openTables.add(table = table[keys[index++]] = new options.TableDepends); }\n\t\t\treturn table;\n\t\t}\n\t}\n\treturn table;\n}\n\nfunction prepareInlineTable (table, keys) {\n\tconst { length } = keys;\n\tlet index = 0;\n\twhile ( index<length ) {\n\t\tconst key = keys[index++];\n\t\tif ( key in table ) {\n\t\t\ttable = table[key];\n\t\t\tisTable(table) || throwError('Trying to assign property through non-Table value at '+where());\n\t\t\tcloseTables.has(table) && throwError('Trying to assign property through static Inline Object at '+where());\n\t\t}\n\t\telse {\n\t\t\ttable = table[key] = new options.TableDepends;\n\t\t\twhile ( index<length ) { table = table[keys[index++]] = new options.TableDepends; }\n\t\t\treturn table;\n\t\t}\n\t}\n\treturn table;\n}\n\nfunction assignInline (lastInlineTable, lineRest) {\n\tconst { 1: left, 2: custom, 3: type, 4: right } = RE_good.KEY_VALUE_PAIR_exec(lineRest);\n\tcustom && ensureConstructor(type);\n\tconst leadingKeys = parseKeys(left);\n\tconst finalKey = leadingKeys.pop();\n\tconst table = prepareInlineTable(lastInlineTable, leadingKeys);\n\tfinalKey in table && throwError('Duplicate property definition at '+where());\n\tswitch ( right[0] ) {\n\t\tcase \"'\":\n\t\t\tlineRest = assignLiteralString(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '\"':\n\t\t\tlineRest = assignBasicString(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '{':\n\t\t\tlineRest = assignInlineTable(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '[':\n\t\t\tlineRest = assignInlineArray(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '`':\n\t\t\tlineRest = assignInterpolationString(table, finalKey, right);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tlet literal;\n\t\t\t( { 1: literal, 2: lineRest } = RE.VALUE_REST.exec(right) || throwSyntaxError(where()) );\n\t\t\ttable[finalKey] =\n\t\t\t\tliteral==='true' ? true : literal==='false' ? false :\n\t\t\t\t\tliteral==='inf' || literal==='+inf' ? Infinity : literal==='-inf' ? -Infinity :\n\t\t\t\t\t\tliteral==='nan' || literal==='+nan' || literal==='-nan' ? NaN :\n\t\t\t\t\t\t\tliteral.includes(':') || literal.indexOf('-')!==literal.lastIndexOf('-') && !literal.startsWith('-') ? new Datetime(literal) :\n\t\t\t\t\t\t\t\tliteral.includes('.') || ( literal.includes('e') || literal.includes('E') ) && !literal.startsWith('0x') ? Float(literal) :\n\t\t\t\t\t\t\t\t\toptions.enableNull && literal==='null' || options.enableNil && literal==='nil' ? null :\n\t\t\t\t\t\t\t\t\t\tInteger(literal, options.useBigInt, options.allowLonger);\n\t\t\tbreak;\n\t}\n\tif ( custom ) { table[finalKey] = construct(type, table[finalKey]); }\n\tif ( options.keepComment && lineRest.startsWith('#') ) {\n\t\ttable[Symbol_for(finalKey)] = lineRest.slice(1);\n\t\treturn '';\n\t}\n\treturn lineRest;\n}\n\nfunction assignLiteralString (table, finalKey, literal) {\n\tlet $;\n\tif ( literal.charAt(1)!==\"'\" || literal.charAt(2)!==\"'\" ) {\n\t\t$ = RE.LITERAL_STRING.exec(literal) || throwSyntaxError(where());\n\t\ttable[finalKey] = $[1];\n\t\treturn $[2];\n\t}\n\tliteral = literal.slice(3);\n\t$ = RE.MULTI_LINE_LITERAL_STRING.exec(literal);\n\tif ( $ ) {\n\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test($[1]) && throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+where());\n\t\ttable[finalKey] = $[1];\n\t\treturn $[2];\n\t}\n\tif ( literal ) {\n\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test(literal) && throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+where());\n\t\tliteral += options.useWhatToJoinMultiLineString;\n\t}\n\tconst start = mark();\n\tfor ( ; ; ) {\n\t\tconst line = must('Literal String', start);\n\t\t$ = RE.MULTI_LINE_LITERAL_STRING.exec(line);\n\t\tif ( $ ) {\n\t\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test($[1]) && throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+where());\n\t\t\ttable[finalKey] = literal+$[1];\n\t\t\treturn $[2];\n\t\t}\n\t\tliteral += line+options.useWhatToJoinMultiLineString;\n\t}\n}\n\nfunction assignBasicString (table, finalKey, literal) {\n\tif ( literal.charAt(1)!=='\"' || literal.charAt(2)!=='\"' ) {\n\t\tconst $ = RE_good.BASIC_STRING_exec(literal);\n\t\ttable[finalKey] = SingleLine($[1]);\n\t\treturn $[2];\n\t}\n\tliteral = literal.slice(3);\n\tconst $ = RE_good.MULTI_LINE_BASIC_STRING_exec_0(literal);\n\tif ( literal.startsWith('\"\"\"', $.length) ) {\n\t\tRE_good.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test($) || throwSyntaxError(where());\n\t\ttable[finalKey] = SingleLine($);\n\t\treturn literal.slice($.length+3).replace(RE.PRE_WHITESPACE, '');\n\t}\n\tif ( literal ) {\n\t\tliteral += '\\n';\n\t\tRE_good.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test(literal) || throwSyntaxError(where());\n\t}\n\tconst start = mark();\n\tfor ( ; ; ) {\n\t\tlet line = must('Basic String', start);\n\t\tconst $ = RE_good.MULTI_LINE_BASIC_STRING_exec_0(line);\n\t\tif ( line.startsWith('\"\"\"', $.length) ) {\n\t\t\tRE_good.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test($) || throwSyntaxError(where());\n\t\t\ttable[finalKey] = MultiLine(literal+$);\n\t\t\treturn line.slice($.length+3).replace(RE.PRE_WHITESPACE, '');\n\t\t}\n\t\tline += '\\n';\n\t\tRE_good.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test(line) || throwSyntaxError(where());\n\t\tliteral += line;\n\t}\n}\n\nfunction assignInlineTable (table, finalKey, lineRest) {\n\tconst inlineTable = table[finalKey] = new options.TableDepends;\n\tcloseTables.add(inlineTable);\n\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\tif ( options.allowInlineTableMultiLineAndTrailingCommaEvenNoComma ) {\n\t\tconst start = mark();\n\t\tfor ( ; ; ) {\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineRest==='' ) { }\n\t\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { break; }\n\t\t\t\tlineRest = must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tlineRest = assignInline(inlineTable, lineRest);\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineRest==='' ) { }\n\t\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { break; }\n\t\t\t\tlineRest = must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith(',') ) { lineRest = lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t}\n\t}\n\telse {\n\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t( lineRest==='' || lineRest.startsWith('#') ) && throwSyntaxError('Inline Table is intended to appear on a single line, which broken at '+where());\n\t\tfor ( ; ; ) {\n\t\t\tlineRest = assignInline(inlineTable, lineRest);\n\t\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tif ( lineRest.startsWith(',') ) {\n\t\t\t\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\t\t\t\tlineRest.startsWith('}') && throwSyntaxError('The last property of an Inline Table can not have a trailing comma, which was found at '+where());\n\t\t\t}\n\t\t\t( lineRest==='' || lineRest.startsWith('#') ) && throwSyntaxError('Inline Table is intended to appear on a single line, which broken at '+where());\n\t\t}\n\t}\n}\n\nfunction assignInlineArray (table, finalKey, lineRest) {\n\tconst inlineArray = table[finalKey] = [];\n\tcloseTables.add(inlineArray);\n\tconst start = mark();\n\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\tfor ( ; ; ) {\n\t\tif ( lineRest==='' ) { }\n\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t}\n\t\telse { break; }\n\t\tlineRest = must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t}\n\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\tfor ( ; ; ) {\n\t\tlineRest = pushInline(inlineArray, lineRest);\n\t\tfor ( ; ; ) {\n\t\t\tif ( lineRest==='' ) { }\n\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t}\n\t\t\telse { break; }\n\t\t\tlineRest = must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t\t}\n\t\tif ( lineRest.startsWith(',') ) {\n\t\t\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\t\t\tif ( options.keepComment && lineRest.startsWith('#') ) {\n\t\t\t\tinlineArray[Symbol_for(inlineArray.length-1+'')] = lineRest.slice(1);\n\t\t\t\tlineRest = '';\n\t\t\t}\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineRest==='' ) { }\n\t\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { break; }\n\t\t\t\tlineRest = must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t}\n\t\telse {\n\t\t\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tthrowSyntaxError(where());\n\t\t}\n\t}\n}\n\nfunction pushInline (array, lineRest) {\n\tconst custom = lineRest.startsWith('!!');\n\tlet type;\n\tif ( custom ) {\n\t\toptions.typify===options.unlimitedType || throwSyntaxError('Only mixable arrays could contain custom type. Check '+where());\n\t\t( { 1: type, 2: lineRest } = RE._VALUE_PAIR.exec(lineRest) || throwSyntaxError(where()) );\n\t\tensureConstructor(type);\n\t}\n\tconst lastIndex = ''+array.length;\n\tswitch ( lineRest[0] ) {\n\t\tcase \"'\":\n\t\t\tlineRest = assignLiteralString(options.typify(array, ArrayOfStrings), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '\"':\n\t\t\tlineRest = assignBasicString(options.typify(array, ArrayOfStrings), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '{':\n\t\t\tlineRest = assignInlineTable(options.typify(array, ArrayOfInlineTables), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '[':\n\t\t\tlineRest = assignInlineArray(options.typify(array, ArrayOfInlineArrays), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '`':\n\t\t\tlineRest = assignInterpolationString(options.typify(array, ArrayOfStrings), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tlet literal;\n\t\t\t( { 1: literal, 2: lineRest } = RE.VALUE_REST.exec(lineRest) || throwSyntaxError(where()) );\n\t\t\tif ( literal==='true' ) { options.typify(array, ArrayOfBooleans).push(true); }\n\t\t\telse if ( literal==='false' ) { options.typify(array, ArrayOfBooleans).push(false); }\n\t\t\telse if ( literal==='inf' || literal==='+inf' ) { options.typify(array, ArrayOfFloats).push(Infinity); }\n\t\t\telse if ( literal==='-inf' ) { options.typify(array, ArrayOfFloats).push(-Infinity); }\n\t\t\telse if ( literal==='nan' || literal==='+nan' || literal==='-nan' ) {\n\t\t\t\toptions.typify(array, ArrayOfFloats).push(NaN);\n\t\t\t}\n\t\t\telse if ( literal.includes(':') || literal.indexOf('-')!==literal.lastIndexOf('-') && !literal.startsWith('-') ) {\n\t\t\t\toptions.typify(array, ArrayOfDatetimes).push(new Datetime(literal));\n\t\t\t}\n\t\t\telse if ( literal.includes('.') || ( literal.includes('e') || literal.includes('E') ) && !literal.startsWith('0x') ) {\n\t\t\t\toptions.typify(array, ArrayOfFloats).push(Float(literal));\n\t\t\t}\n\t\t\telse if ( options.enableNull && literal==='null' || options.enableNil && literal==='nil' ) {\n\t\t\t\toptions.typify(array, ArrayOfNulls).push(null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toptions.typify(array, ArrayOfIntegers).\n\t\t\t\t\t\tpush(Integer(literal, options.useBigInt, options.allowLonger));\n\t\t\t}\n\t\t\tbreak;\n\t}\n\tif ( custom ) { array[lastIndex] = construct(type, array[lastIndex]); }\n\tif ( options.keepComment && lineRest.startsWith('#') ) {\n\t\tarray[Symbol_for(lastIndex)] = lineRest.slice(1);\n\t\treturn '';\n\t}\n\treturn lineRest;\n}\n",
			"import version from './version?text';\nimport { Datetime, Table } from './types.js';\nimport parse from './parser.js';\n\nconst TOML = {\n\tparse,\n\tDatetime,\n\tTable,\n\tversion\n};\n\nexport default TOML;\n"
		]
}