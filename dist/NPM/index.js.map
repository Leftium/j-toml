{
	"version":
		3,
	"file":
		"index.js",
	"sources":
		["src/version?text","src/global.js","../j-orderify/dist/ESM/j-orderify.js","src/iterator.js","src/RE.js?RegExp","src/types.js","src/parser.js","src/default.js"],
	"names":
		["WeakMap","version","defineProperty","RE.ESCAPED_IN_SINGLE_LINE","RE.XOB_INTEGER","RE.INTEGER","RE.UNDERSCORES","RE.FLOAT","RE.FLOAT_NOT_INTEGER","RE.OFFSET_DATE_TIME","RE.LOCAL_DATE_TIME","RE.LOCAL_DATE","RE.LOCAL_TIME","RE.TIMEZONE_OFFSET","RE.BOM","RE.EOL","RE.PRE_WHITESPACE","RE.TABLE_DEFINITION","rest","RE.KEYS","RE.KEY_VALUE_PAIR","RE.VALUE_REST","RE.LITERAL_STRING","RE.MULTI_LINE_LITERAL_STRING_LONE","RE.CONTROL_CHARACTER_EXCLUDE_TAB","RE.MULTI_LINE_LITERAL_STRING_REST","RE.BASIC_STRING","RE.MULTI_LINE_BASIC_STRING_LONE","RE.ESCAPED_EXCLUDE_CONTROL_CHARACTER","RE.MULTI_LINE_BASIC_STRING_REST","RE.ESCAPED_IN_MULTI_LINE","RE.SYM_WHITESPACE","RE._VALUE_PAIR","RE.DELIMITER_CHECK","RE.INTERPOLATIONS","RE.INTERPOLATION","RE.REGEXP_MODE","RE.PATTERN_FLAGS_REPLACER","RE.WHOLE_AND_SUBS","RE.SUB","RE.DOLLAR","RE.INTERPOLATION_TOKEN"],
	"mappings":
		"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",
	"sourcesContent":
		[
			"export default '0.5.31';",
			"export const { WeakSet, WeakMap, SyntaxError, RangeError, TypeError, Error, BigInt, Date, parseInt, Infinity, NaN, Array, Map, RegExp,\n\tString: { fromCodePoint },\n\tNumber: { isFinite, isSafeInteger },\n\tObject: { create, getOwnPropertyNames, defineProperty },\n\tReflect: { getPrototypeOf },\n\tSymbol: { for: Symbol_for },\n\tJSON: { stringify },\n} = global;\n\nexport const { isArray } = Array;\n",
			"﻿/*!\n * 模块名称：@ltd/j-orderify\n * 模块功能：返回一个可以保证给定对象的自有属性按照此后添加的顺序排列的 proxy，即便键名是 symbol，或整数式 string。\n   　　　　　Return a proxy for the given object, which can guarantee the own keys are in setting order, even if the key name is a symbol or an integer-form string.\n * 模块版本：1.0.0\n * 许可条款：LGPL-3.0\n * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)\n * 问题反馈：https://GitHub.com/LongTengDao/j-orderify/issues\n * 项目主页：https://GitHub.com/LongTengDao/j-orderify/\n */\n\nconst version = '1.0.0';\n\nconst { defineProperty, deleteProperty, ownKeys } = Reflect;\n\nconst ownKeysKeepers = new WeakMap;\n\nconst handlers = Object.assign(Object.create(null), {\n\tdefineProperty (target, key, descriptor) {\n\t\tif ( defineProperty(target, key, descriptor) ) {\n\t\t\townKeysKeepers.get(target).add(key);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tdeleteProperty (target, key) {\n\t\tif ( deleteProperty(target, key) ) {\n\t\t\townKeysKeepers.get(target).delete(key);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\townKeys (target) {\n\t\treturn [...ownKeysKeepers.get(target)];\n\t},\n});\n\nconst orderify = object => {\n\townKeysKeepers.set(object, new Set(ownKeys(object)));\n\treturn new Proxy(object, handlers);\n};\n\norderify.version = version;\n\norderify.default = orderify;\n\nexport default orderify;\nexport { version };\n\n/*¡ @ltd/j-orderify */\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy92ZXJzaW9uP3RleHQiLCJzcmMvZXhwb3J0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0ICcxLjAuMCc7IiwiaW1wb3J0IHZlcnNpb24gZnJvbSAnLi92ZXJzaW9uP3RleHQnOy8vIFJlZmxlY3QsIFdlYWtNYXAsIE9iamVjdCwgU2V0LCBQcm94eVxuZXhwb3J0IHsgdmVyc2lvbiB9O1xuXG5jb25zdCB7IGRlZmluZVByb3BlcnR5LCBkZWxldGVQcm9wZXJ0eSwgb3duS2V5cyB9ID0gUmVmbGVjdDtcblxuY29uc3Qgb3duS2V5c0tlZXBlcnMgPSBuZXcgV2Vha01hcDtcblxuY29uc3QgaGFuZGxlcnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUobnVsbCksIHtcblx0ZGVmaW5lUHJvcGVydHkgKHRhcmdldCwga2V5LCBkZXNjcmlwdG9yKSB7XG5cdFx0aWYgKCBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgZGVzY3JpcHRvcikgKSB7XG5cdFx0XHRvd25LZXlzS2VlcGVycy5nZXQodGFyZ2V0KS5hZGQoa2V5KTtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0sXG5cdGRlbGV0ZVByb3BlcnR5ICh0YXJnZXQsIGtleSkge1xuXHRcdGlmICggZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBrZXkpICkge1xuXHRcdFx0b3duS2V5c0tlZXBlcnMuZ2V0KHRhcmdldCkuZGVsZXRlKGtleSk7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9LFxuXHRvd25LZXlzICh0YXJnZXQpIHtcblx0XHRyZXR1cm4gWy4uLm93bktleXNLZWVwZXJzLmdldCh0YXJnZXQpXTtcblx0fSxcbn0pO1xuXG5jb25zdCBvcmRlcmlmeSA9IG9iamVjdCA9PiB7XG5cdG93bktleXNLZWVwZXJzLnNldChvYmplY3QsIG5ldyBTZXQob3duS2V5cyhvYmplY3QpKSk7XG5cdHJldHVybiBuZXcgUHJveHkob2JqZWN0LCBoYW5kbGVycyk7XG59O1xuXG5vcmRlcmlmeS52ZXJzaW9uID0gdmVyc2lvbjtcblxub3JkZXJpZnkuZGVmYXVsdCA9IG9yZGVyaWZ5O1xuXG5leHBvcnQgZGVmYXVsdCBvcmRlcmlmeTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLGdCQUFlLE9BQU87O3dCQUFDLHhCQ0d2QixNQUFNLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUM7O0FBRTVELE1BQU0sY0FBYyxHQUFHLElBQUksT0FBTyxDQUFDOztBQUVuQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7Q0FDbkQsY0FBYyxDQUFDLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUU7RUFDeEMsS0FBSyxjQUFjLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRztHQUM5QyxjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztHQUNwQyxPQUFPLElBQUksQ0FBQztHQUNaO0VBQ0QsT0FBTyxLQUFLLENBQUM7RUFDYjtDQUNELGNBQWMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7RUFDNUIsS0FBSyxjQUFjLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHO0dBQ2xDLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0dBQ3ZDLE9BQU8sSUFBSSxDQUFDO0dBQ1o7RUFDRCxPQUFPLEtBQUssQ0FBQztFQUNiO0NBQ0QsT0FBTyxDQUFDLENBQUMsTUFBTSxFQUFFO0VBQ2hCLE9BQU8sQ0FBQyxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztFQUN2QztDQUNELENBQUMsQ0FBQzs7QUFFSCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUk7Q0FDMUIsY0FBYyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztDQUNyRCxPQUFPLElBQUksS0FBSyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztDQUNuQyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDOztBQUUzQixRQUFRLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQzs7Ozs7Ozs7OyJ9",
			"import { SyntaxError, RangeError, TypeError, Error } from './global.js';\n\nconst NONE = [];\nlet sourceLines = NONE;\nlet lastLineIndex = -1;\nlet lineIndex = -1;\n\nconst none = () => sourceLines===NONE;\nconst done = () => { sourceLines = NONE; };\nconst next = () => sourceLines[++lineIndex];\nconst rest = () => lineIndex!==lastLineIndex;\nconst mark = () => lineIndex;\nconst must = (message, startIndex) => {\n\tif ( lineIndex===lastLineIndex ) {\n\t\tconst error = new SyntaxError(message+' is not close until the end of the file, which started from lines['+startIndex+']: '+sourceLines[startIndex]);\n\t\terror.lineIndex = lineIndex;\n\t\tdone();\n\t\tthrow error;\n\t}\n\treturn sourceLines[++lineIndex];\n};\nconst from = array => {\n\tsourceLines = array;\n\tlastLineIndex = sourceLines.length-1;\n\tlineIndex = -1;\n};\n\nexport { from, next, rest, mark, must, done, none };\nexport const throwSyntaxError = message => throws(new SyntaxError(message));\nexport const throwRangeError = message => throws(new RangeError(message));\nexport const throwTypeError = message => throws(new TypeError(message));\nexport const throwError = message => throws(new Error(message));\nexport const where = () => 'lines['+lineIndex+']: '+sourceLines[lineIndex];\n\nfunction throws (error) {\n\tif ( sourceLines===NONE ) { throw error; }\n\terror.lineIndex = lineIndex;\n\tdone();\n\tthrow error;\n}\n",
			"\n/* types */\n\nexport const ESCAPED_IN_SINGLE_LINE = /\\\\(?:([\\\\\"])|([btnfr])|u(.{4})|U(.{4})(.{4}))/g;\n\nexport const UNDERSCORES = /_/g;\n\nexport const XOB_INTEGER = /^0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|o[0-7]+(?:_[0-7]+)*|b[01]+(?:_[01]+)*$/;\nexport const INTEGER = /^[-+]?[1-9]\\d*(?:_\\d+)*$/;\n\nexport const FLOAT = /^[-+]?(?:0|[1-9]\\d*(?:_\\d+)*)(?:\\.\\d+(?:_\\d+)*)?(?:[eE][-+]?\\d+(?:_\\d+)*)?$/;\nexport const FLOAT_NOT_INTEGER = /[.eE]/;\n\nconst Date = /(?:0[1-9]|[1-9]\\d)\\d\\d-(?:0[1-9]|1[012])-(?:0[1-9]|[12]\\d|3[01])/;\nconst Hour = /[01]\\d|2[0-3]/;\nconst Minuteorsecond = /[0-5]\\d/;\nconst Time = /(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?/;\n\nexport const OFFSET_DATE_TIME = /^(?:0[1-9]|[1-9]\\d)\\d\\d-(?:0[1-9]|1[012])-(?:0[1-9]|[12]\\d|3[01])([T ])(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(Z|[+-](?:[01]\\d|2[0-3]):[0-5]\\d)$/;\nexport const LOCAL_DATE_TIME = /^(?:0[1-9]|[1-9]\\d)\\d\\d-(?:0[1-9]|1[012])-(?:0[1-9]|[12]\\d|3[01])([T ])(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/;\nexport const LOCAL_DATE = /^(?:0[1-9]|[1-9]\\d)\\d\\d-(?:0[1-9]|1[012])-(?:0[1-9]|[12]\\d|3[01])$/;\nexport const LOCAL_TIME = /^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/;\nexport const TIMEZONE_OFFSET = /^([+-])([01]\\d|2[0-3]):([0-5]\\d)$/;\n\n/* parser */\n\nconst Whitespace = /[ \\t]/;\n\nexport const BOM = /^\\uFEFF/;\nexport const EOL = /\\r?\\n/;\n\nconst Basicstringcontent = /(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))*/;\nconst Literalstringcontent = /[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*/;\n\nexport const PRE_WHITESPACE = /^[ \\t]*/;\nexport const TABLE_DEFINITION = /^\\[(\\[?)[ \\t]*((?:[\\w-]+|\"(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))*\"|'[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*')(?:[ \\t]*\\.[ \\t]*(?:[\\w-]+|\"(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))*\"|'[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*'))*)[ \\t]*](]?)[ \\t]*(?:#[^]*)?$/;\nexport const KEY_VALUE_PAIR = /^((?:[\\w-]+|\"(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))*\"|'[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*')(?:[ \\t]*\\.[ \\t]*(?:[\\w-]+|\"(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))*\"|'[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*'))*)[ \\t]*=[ \\t]*(!!([\\w-]*)[ \\t]+)?([^ \\t#][^]*)$/;\nexport const KEYS = /[\\w-]+|\"(?:[^\\\\\"]+|\\\\[^])*\"|'[^']*'/g;\nexport const VALUE_REST = /^((?:\\d\\d\\d\\d-\\d\\d-\\d\\d \\d)?[\\w\\-+.:]+)[ \\t]*([^]*)$/;\nexport const LITERAL_STRING = /^'([^'\\x00-\\x08\\x0B-\\x1F\\x7F]*)'[ \\t]*([^]*)/;\nexport const MULTI_LINE_LITERAL_STRING_LONE = /^'''([^]*?)'''[ \\t]*([^]*)/;\nexport const MULTI_LINE_LITERAL_STRING_REST = /^([^]*?)'''[ \\t]*([^]*)/;\nexport const CONTROL_CHARACTER_EXCLUDE_TAB = /[\\x00-\\x08\\x0B-\\x1F\\x7F]/;\nexport const BASIC_STRING = /^\"((?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))*)\"[ \\t]*([^]*)/;\nexport const MULTI_LINE_BASIC_STRING_LONE = /^\"\"\"((?:[^\\\\]+|\\\\[^])*?)\"\"\"[ \\t]*([^]*)/;\nexport const MULTI_LINE_BASIC_STRING_REST = /^((?:[^\\\\]+|\\\\[^])*?)\"\"\"[ \\t]*([^]*)/;\nexport const ESCAPED_EXCLUDE_CONTROL_CHARACTER = /^(?:[^\\\\\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\ \\n]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))*$/;\nexport const ESCAPED_IN_MULTI_LINE = /\\n|\\\\(?:([ \\n]+)|([\\\\\"])|([btnfr])|u(.{4})|U(.{4})(.{4}))/g;\nexport const SYM_WHITESPACE = /^[^][ \\t]*/;\n\nexport const _VALUE_PAIR = /^!!([\\w-]*)[ \\t]+([^ \\t#][^]*)$/;\n\nconst String_ = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"/;\nconst Keyvaluepairs = /(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*/;\nconst Nonemptyobject = /{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/;\nconst Object = /{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/;\nconst Stringorarray = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+]/;\nconst Regexpcontent = /(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+/;\nconst Rule = /\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)/;\n\nexport const SUB = /{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/g;\nexport const DELIMITER_CHECK = /[^`]/;\nexport const INTERPOLATION = /\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)/g;\nexport const INTERPOLATIONS = /^(?:\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)[ \\t]*)*[ \\t]*([^]*)$/;\nexport const INTERPOLATION_TOKEN = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"/g;\nexport const REGEXP_MODE = /^\\([ \\t]*\\//;\nexport const PATTERN_FLAGS_REPLACER = /\\/((?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+)\\/([a-z]*)[ \\t]*=[ \\t]*('[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])/;\nexport const WHOLE_AND_SUBS = /('[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*([^]*)/;\nexport const DOLLAR = /\\$(?:[1-9]\\d?|\\$)/g;\n",
			"import { RangeError, TypeError, BigInt, Date, parseInt, Infinity, NaN, isFinite, isSafeInteger, fromCodePoint, create } from './global.js';\nimport { orderify } from './import.js';\nimport { throwSyntaxError, throwRangeError, none, where } from './iterator.js';\nimport * as RE from './RE.js?RegExp';\n\nconst ESCAPE_ALIAS = { b: '\\b', t: '\\t', n: '\\n', f: '\\f', r: '\\r' };\nexport const unEscapeSingleLine = ($0, $1, $2, $3, $4, $5) => $1 ? $1 : $2 ? ESCAPE_ALIAS[$2] : fromCodePoint(parseInt($3 || $4+$5, 16));\nexport const String = literal => literal.replace(RE.ESCAPED_IN_SINGLE_LINE, unEscapeSingleLine);\nString.isString = value => typeof value==='string';\n\nconst MAX64 = BigInt(2**63-1);\nconst MIN64 = ~MAX64;\nconst ZERO = BigInt(0);\nexport const Integer = (literal, useBigInt = true, allowLonger = false) => {\n\tif ( useBigInt===false ) {\n\t\tif ( literal==='0' || literal==='+0' || literal==='-0' ) { return 0; }\n\t\t( literal.charAt(0)==='0' ? RE.XOB_INTEGER : RE.INTEGER ).test(literal) || throwSyntaxError('Invalid Integer '+literal+( none() ? '' : ' at '+where() ));\n\t\tconst number = +literal.replace(RE.UNDERSCORES, '');\n\t\tallowLonger || isSafeInteger(number) || throwRangeError('Integer did not use BitInt must be Number.isSafeInteger, not includes '+literal+( none() ? '' : ' meet at '+where() ));\n\t\treturn number;\n\t}\n\telse {\n\t\tlet bitInt;\n\t\tif ( literal==='0' || literal==='+0' || literal==='-0' ) { bitInt = ZERO; }\n\t\telse {\n\t\t\t( literal.charAt(0)==='0' ? RE.XOB_INTEGER : RE.INTEGER ).test(literal) || throwSyntaxError('Invalid Integer '+literal+( none() ? '' : ' at '+where() ));\n\t\t\tbitInt = BigInt(literal.replace(RE.UNDERSCORES, ''));\n\t\t\tallowLonger || bitInt<=MAX64 && bitInt>=MIN64 || throwRangeError('Integer expect 64 bit range (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807), not includes '+literal+( none() ? '' : ' meet at '+where() ));\n\t\t}\n\t\tif ( useBigInt===true || bitInt<=useBigInt && bitInt>= ~useBigInt ) { return bitInt; }\n\t\treturn +( bitInt+'' );\n\t}\n};\nInteger.isInteger = value => typeof value==='bigint';\n\nexport const Float = literal => {\n\tif ( RE.FLOAT.test(literal) && RE.FLOAT_NOT_INTEGER.test(literal) ) {\n\t\tconst number = +literal.replace(RE.UNDERSCORES, '');\n\t\tisFinite(number) || throwRangeError('Float can not be as big as Infinity, like '+literal+( none() ? '' : ' at '+where() ));\n\t\treturn number;\n\t}\n\tif ( literal==='inf' || literal==='+inf' ) { return Infinity; }\n\tif ( literal==='-inf' ) { return -Infinity; }\n\tif ( literal==='nan' || literal==='+nan' || literal==='-nan' ) { return NaN; }\n\tthrowSyntaxError('Invalid Float '+literal+( none() ? '' : ' at '+where() ));\n};\nFloat.isFloat = value => typeof value==='number';\n\nexport const Boolean = {\n\tisBoolean: value => value===true || value===false,\n};\n\nconst DATE = new Date;\nconst year = (date, utc) => {\n\tconst year = utc ? date.getUTCFullYear() : date.getFullYear();\n\tif ( year>=1000 && year<=9999 ) { return ''+year; }\n\tif ( year>=100 && year<=999 ) { return '0'+year; }\n\tthrow new RangeError('Datetime which year was set out of range 100 to 9999 can not be serialized toTOML.');\n};\nconst month = (datetime, utc) => ( ( utc ? datetime.getUTCMonth() : datetime.getMonth() )+1+'' ).padStart(2, '0');\nconst date = (datetime, utc) => ( ( utc ? datetime.getUTCDate() : datetime.getDate() )+'' ).padStart(2, '0');\nconst hours = (datetime, utc) => ( ( utc ? datetime.getUTCHours() : datetime.getHours() )+'' ).padStart(2, '0');\nconst minutes = (datetime, utc) => ( ( utc ? datetime.getUTCMinutes() : datetime.getMinutes() )+'' ).padStart(2, '0');\nconst seconds = datetime => ( datetime.getSeconds()+'' ).padStart(2, '0');\nconst milliseconds = datetime => {\n\tconst milliseconds = datetime.getMilliseconds();\n\treturn milliseconds===0 ? '' : '.'+( milliseconds+'' ).padStart(3, '0');\n};\n\nexport class Datetime extends Date {\n\t\n\tconstructor (literal) {\n\t\tif ( literal.includes('-') ) {\n\t\t\tif ( literal.includes('T') || literal.includes(' ') ) {\n\t\t\t\tif ( literal.includes('Z') || literal.includes('+') || literal.split('-').length===4 ) {\n\t\t\t\t\tconst $ = RE.OFFSET_DATE_TIME.exec(literal) || throwSyntaxError('Invalid Offset Date-Time '+literal+( none() ? '' : ' at '+where() ));\n\t\t\t\t\tsuper(literal);\n\t\t\t\t\tthis.type = 'Offset Date-Time';\n\t\t\t\t\tthis.T = $[1];\n\t\t\t\t\tthis.Z = $[2];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst $ = RE.LOCAL_DATE_TIME.exec(literal) || throwSyntaxError('Invalid Local Date-Time '+literal+( none() ? '' : ' at '+where() ));\n\t\t\t\t\tsuper(literal);\n\t\t\t\t\tthis.type = 'Local Date-Time';\n\t\t\t\t\tthis.T = $[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tRE.LOCAL_DATE.test(literal) || throwSyntaxError('Invalid Local Date '+literal+( none() ? '' : ' at '+where() ));\n\t\t\t\tsuper(literal);\n\t\t\t\tthis.type = 'Local Date';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tRE.LOCAL_TIME.test(literal) || throwSyntaxError('Invalid Local Time '+literal+( none() ? '' : ' at '+where() ));\n\t\t\tsuper('1970-01-01 '+literal);\n\t\t\tthis.type = 'Local Time';\n\t\t}\n\t}\n\t\n\tstatic isDatetime (value) { return value instanceof Datetime; }\n\t\n\ttoTOML () {\n\t\tif ( !isSafeInteger(this.getTime()) ) { throw new RangeError('Datetime which time was set unsafe integer can not be serialized toTOML.'); }\n\t\tswitch ( this.type ) {\n\t\t\tcase 'Offset Date-Time':\n\t\t\t\tlet datetime;\n\t\t\t\tconst { Z } = this;\n\t\t\t\tif ( Z==='Z' || Z==='+00:00' || Z==='-00:00' ) { datetime = this; }\n\t\t\t\telse {\n\t\t\t\t\tconst $ = RE.TIMEZONE_OFFSET.exec(Z);\n\t\t\t\t\tdatetime = DATE;\n\t\t\t\t\tdatetime.setTime(this.getTime()+( $[1]+'60000' )*( +$[3]+60*$[2] ));\n\t\t\t\t}\n\t\t\t\treturn year(datetime, true)+'-'+month(datetime, true)+'-'+date(datetime, true)+this.T+hours(datetime, true)+':'+minutes(datetime, true)+':'+seconds(datetime)+milliseconds(this)+Z;\n\t\t\tcase 'Local Date-Time':\n\t\t\t\treturn year(this)+'-'+month(this)+'-'+date(this)+this.T+hours(this)+':'+minutes(this)+':'+seconds(this)+milliseconds(this);\n\t\t\tcase 'Local Date':\n\t\t\t\treturn year(this)+'-'+month(this)+'-'+date(this);\n\t\t\tcase 'Local Time':\n\t\t\t\treturn hours(this)+':'+minutes(this)+':'+seconds(this)+milliseconds(this);\n\t\t}\n\t\tthrow new TypeError('Unknown type Datetime.');\n\t}\n\t\n}\n\nexport const Table = function (keepOrder) {\n\tlet undefined;\n\tif ( new.target===undefined ) { throw new TypeError(\"Class constructor Table cannot be invoked without 'new'\"); }\n\tif ( keepOrder ) { return orderify(this); }\n};\nTable.prototype = create(null);\nTable.isTable = value => value instanceof Table;\n",
			"import { WeakSet, WeakMap, Error, TypeError, Infinity, NaN, isArray, Symbol_for, Map, RegExp, getOwnPropertyNames, create, defineProperty, getPrototypeOf, stringify } from './global.js';\nimport { from, next, rest, done, mark, must, throwSyntaxError, throwTypeError, throwError, where } from './iterator.js';\nimport { unEscapeSingleLine, String, Integer, Float, Datetime, Table } from './types.js';\nimport * as RE from './RE.js?RegExp';\n\nconst { isTable } = Table;\nconst StaticObjects = new WeakSet;\nconst TypedArrays = new WeakMap;\nconst ArrayOfNulls = -1;\nconst ArrayOfStrings = 1;\nconst ArrayOfInlineTables = 2;\nconst ArrayOfInlineArrays = 3;\nconst ArrayOfBooleans = 4;\nconst ArrayOfFloats = 5;\nconst ArrayOfDatetimes = 6;\nconst ArrayOfIntegers = 7;\nconst reallyTypify = (array, type) => {\n\tif ( TypedArrays.has(array) ) {\n\t\tif ( TypedArrays.get(array)===type ) { return array; }\n\t\tthrowTypeError('Types in array must be same. Check '+where());\n\t}\n\tTypedArrays.set(array, type);\n\treturn array;\n};\nconst unlimitedType = array => array;\n\nlet useWhatToJoinMultiLineString = '';\nlet useBigInt = true;\nlet keepOrder = false;\nlet allowLonger = false;\nlet keepComment = false;\nlet enableNull = false;\nlet enableNil = false;\nlet allowInlineTableMultiLineAndTrailingCommaEvenNoComma = false;\nlet enableInterpolationString = false;\nlet typify = reallyTypify;\nlet customConstructors = null;\nconst FUNCTION = new WeakSet;\n\nexport default function parse (toml_source, toml_version, useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger = true, extensionOptions) {\n\tif ( typeof toml_source!=='string' ) { throw new TypeError('TOML.parse(source)'); }\n\tif ( toml_version!==0.5 ) { throw new Error('TOML.parse(,version)'); }\n\tif ( typeof useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines!=='string' ) { throw new TypeError('TOML.parse(,,multiLineJoiner)'); }\n\tif ( typeof useBigInt_forInteger!=='boolean' && typeof useBigInt_forInteger!=='bigint' ) { throw new TypeError('TOML.parse(,,,useBigInt)'); }\n\tuseWhatToJoinMultiLineString = useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines;\n\tuseBigInt = useBigInt_forInteger;\n\tif ( extensionOptions ) {\n\t\tkeepOrder = !!extensionOptions.order;\n\t\tallowLonger = !!extensionOptions.longer;\n\t\tkeepComment = !!extensionOptions.hash;\n\t\tenableNull = !!extensionOptions.null;\n\t\tenableNil = !!extensionOptions.nil;\n\t\tallowInlineTableMultiLineAndTrailingCommaEvenNoComma = !!extensionOptions.multi;\n\t\tenableInterpolationString = !!extensionOptions.ins;\n\t\ttypify = extensionOptions.mix ? unlimitedType : reallyTypify;\n\t\tcustomConstructors = extensionOptions.new || null;\n\t\tcustomConstructors===null || prepareConstructors();\n\t}\n\telse {\n\t\tkeepOrder = allowLonger = keepComment = enableNull = enableNil = allowInlineTableMultiLineAndTrailingCommaEvenNoComma = enableInterpolationString = false;\n\t\ttypify = reallyTypify;\n\t\tcustomConstructors = null;\n\t}\n\tconst rootTable = new Table(keepOrder);\n\ttry {\n\t\tfrom(toml_source.replace(RE.BOM, '').split(RE.EOL));\n\t\tlet lastSectionTable = rootTable;\n\t\twhile ( rest() ) {\n\t\t\tconst line = next().replace(RE.PRE_WHITESPACE, '');\n\t\t\tif ( line==='' || line.startsWith('#') ) { }\n\t\t\telse if ( line.startsWith('[') ) {\n\t\t\t\tconst { 1: $_asArrayItem$$, 2: keys, 3: $$asArrayItem$_, 4: hash = '' } = RE.TABLE_DEFINITION.exec(line) || throwSyntaxError(where());\n\t\t\t\t( $_asArrayItem$$==='[' )===( $$asArrayItem$_===']' ) || throwSyntaxError('Square brackets of table define statement not match at '+where());\n\t\t\t\tlastSectionTable = appendTable(rootTable, keys, $_asArrayItem$$==='[', hash);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst rest = assignInline(lastSectionTable, line);\n\t\t\t\trest==='' || rest.startsWith('#') || throwSyntaxError(where());\n\t\t\t}\n\t\t}\n\t}\n\tfinally {\n\t\tcustomConstructors = null;\n\t\tdone();\n\t}\n\treturn rootTable;\n};\n\nfunction appendTable (table, key_key, asArrayItem, hash) {\n\tconst leadingKeys = parseKeys(key_key);\n\tconst finalKey = leadingKeys.pop();\n\ttable = prepareTable(table, leadingKeys);\n\tconst lastTable = new Table(keepOrder);\n\tif ( asArrayItem ) {\n\t\tlet arrayOfTables;\n\t\tif ( finalKey in table ) { StaticObjects.has(arrayOfTables = table[finalKey]) && throwError('Trying to push Table to non-ArrayOfTables value at '+where()); }\n\t\telse { arrayOfTables = table[finalKey] = []; }\n\t\tarrayOfTables.push(lastTable);\n\t}\n\telse {\n\t\tfinalKey in table && throwError('Duplicate Table definition at '+where());\n\t\ttable[finalKey] = lastTable;\n\t}\n\tif ( keepComment && hash ) {\n\t\tdefineProperty(table, Symbol_for(finalKey), {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tvalue: hash,\n\t\t});\n\t}\n\treturn lastTable;\n}\n\nfunction parseKeys (key_key) {\n\tconst keys = key_key.match(RE.KEYS);\n\tfor ( let index = keys.length; index--; ) {\n\t\tconst key = keys[index];\n\t\tif ( key.startsWith(\"'\") ) { keys[index] = keys.slice(1, -1); }\n\t\telse if ( key.startsWith('\"') ) {\n\t\t\tkeys[index] = String(keys.slice(1, -1));\n\t\t}\n\t}\n\treturn keys;\n}\n\nfunction prepareTable (table, keys) {\n\tconst { length } = keys;\n\tlet index = 0;\n\twhile ( index<length ) {\n\t\tconst key = keys[index++];\n\t\tif ( key in table ) {\n\t\t\ttable = table[key];\n\t\t\tif ( isTable(table) ) {\n\t\t\t\tStaticObjects.has(table) && throwError('Trying to define table through static Inline Object at '+where());\n\t\t\t}\n\t\t\telse if ( isArray(table) ) {\n\t\t\t\tStaticObjects.has(table) && throwError('Trying to append value to static Inline Array at '+where());\n\t\t\t\ttable = table[table.length-1];\n\t\t\t}\n\t\t\telse { throwError('Trying to define table through non-Table value at '+where()); }\n\t\t}\n\t\telse {\n\t\t\ttable = table[key] = new Table(keepOrder);\n\t\t\twhile ( index<length ) { table = table[keys[index++]] = new Table(keepOrder); }\n\t\t\treturn table;\n\t\t}\n\t}\n\treturn table;\n}\n\nfunction prepareInlineTable (table, keys) {\n\tconst { length } = keys;\n\tlet index = 0;\n\twhile ( index<length ) {\n\t\tconst key = keys[index++];\n\t\tif ( key in table ) {\n\t\t\ttable = table[key];\n\t\t\tisTable(table) || throwError('Trying to assign property through non-Table value at '+where());\n\t\t\tStaticObjects.has(table) && throwError('Trying to assign property through static Inline Object at '+where());\n\t\t}\n\t\telse {\n\t\t\ttable = table[key] = new Table(keepOrder);\n\t\t\twhile ( index<length ) { table = table[keys[index++]] = new Table(keepOrder); }\n\t\t\treturn table;\n\t\t}\n\t}\n\treturn table;\n}\n\nfunction assignInline (lastInlineTable, lineRest) {\n\tconst { 1: left, 2: custom, 3: type, 4: right } = RE.KEY_VALUE_PAIR.exec(lineRest) || throwSyntaxError(where());\n\tcustom && ensureConstructor(type);\n\tconst leadingKeys = parseKeys(left);\n\tconst finalKey = leadingKeys.pop();\n\tconst table = prepareInlineTable(lastInlineTable, leadingKeys);\n\tfinalKey in table && throwError('Duplicate property definition at '+where());\n\tswitch ( right[0] ) {\n\t\tcase \"'\":\n\t\t\tlineRest = assignLiteralString(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '\"':\n\t\t\tlineRest = assignBasicString(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '{':\n\t\t\tlineRest = assignInlineTable(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '[':\n\t\t\tlineRest = assignInlineArray(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '`':\n\t\t\tlineRest = assignInterpolationString(table, finalKey, right);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tlet literal;\n\t\t\t( { 1: literal, 2: lineRest } = RE.VALUE_REST.exec(right) || throwSyntaxError(where()) );\n\t\t\ttable[finalKey] =\n\t\t\t\tliteral==='true' ? true : literal==='false' ? false :\n\t\t\t\t\tliteral==='inf' || literal==='+inf' ? Infinity : literal==='-inf' ? -Infinity :\n\t\t\t\t\t\tliteral==='nan' || literal==='+nan' || literal==='-nan' ? NaN :\n\t\t\t\t\t\t\tliteral.includes(':') || literal.indexOf('-')!==literal.lastIndexOf('-') ? new Datetime(literal) :\n\t\t\t\t\t\t\t\tliteral.includes('.') || literal.includes('e') || literal.includes('E') ? Float(literal) :\n\t\t\t\t\t\t\t\t\tenableNull && literal==='null' || enableNil && literal==='nil' ? null :\n\t\t\t\t\t\t\t\t\t\tInteger(literal, useBigInt, allowLonger);\n\t\t\tbreak;\n\t}\n\tif ( custom ) { table[finalKey] = construct(type, table[finalKey]); }\n\tif ( keepComment && lineRest.startsWith('#') ) {\n\t\tdefineProperty(table, Symbol_for(finalKey), {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tvalue: lineRest,\n\t\t});\n\t\treturn '';\n\t}\n\treturn lineRest;\n}\n\nfunction assignLiteralString (table, finalKey, literal) {\n\tlet $;\n\tif ( literal.charAt(1)!==\"'\" || literal.charAt(2)!==\"'\" ) {\n\t\t$ = RE.LITERAL_STRING.exec(literal) || throwSyntaxError(where());\n\t\ttable[finalKey] = $[1];\n\t\treturn $[2];\n\t}\n\t$ = RE.MULTI_LINE_LITERAL_STRING_LONE.exec(literal);\n\tif ( $ ) {\n\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test($[1]) && throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+where());\n\t\ttable[finalKey] = $[1];\n\t\treturn $[2];\n\t}\n\tliteral = literal.slice(3);\n\tif ( literal ) {\n\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test(literal) && throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+where());\n\t\tliteral += useWhatToJoinMultiLineString;\n\t}\n\tconst start = mark();\n\tfor ( ; ; ) {\n\t\tconst line = must('Literal String', start);\n\t\t$ = RE.MULTI_LINE_LITERAL_STRING_REST.exec(line);\n\t\tif ( $ ) {\n\t\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test($[1]) && throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+where());\n\t\t\ttable[finalKey] = literal+$[1];\n\t\t\treturn $[2];\n\t\t}\n\t\tliteral += line+useWhatToJoinMultiLineString;\n\t}\n}\n\nfunction assignBasicString (table, finalKey, literal) {\n\tlet $;\n\tif ( literal.charAt(1)!=='\"' || literal.charAt(2)!=='\"' ) {\n\t\t$ = RE.BASIC_STRING.exec(literal) || throwSyntaxError(where());\n\t\ttable[finalKey] = String($[1]);\n\t\treturn $[2];\n\t}\n\t$ = RE.MULTI_LINE_BASIC_STRING_LONE.exec(literal);\n\tif ( $ ) {\n\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER.test($[1]) || throwSyntaxError(where());\n\t\ttable[finalKey] = String($[1]);\n\t\treturn $[2];\n\t}\n\tliteral = literal.slice(3);\n\tif ( literal ) {\n\t\tliteral += '\\n';\n\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER.test(literal) || throwSyntaxError(where());\n\t}\n\tconst start = mark();\n\tfor ( ; ; ) {\n\t\tlet line = must('Basic String', start);\n\t\t$ = RE.MULTI_LINE_BASIC_STRING_REST.exec(line);\n\t\tif ( $ ) {\n\t\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER.test($[1]) || throwSyntaxError(where());\n\t\t\ttable[finalKey] = ( literal+$[1] ).replace(RE.ESCAPED_IN_MULTI_LINE, ($0, $1, $2, $3, $4, $5, $6) => {\n\t\t\t\tif ( $0==='\\n' ) { return useWhatToJoinMultiLineString; }\n\t\t\t\tif ( $1 ) {\n\t\t\t\t\t$1.includes('\\n') || throwSyntaxError('Back slash leading whitespaces can only appear at the end of a line, but see '+where());\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\treturn unEscapeSingleLine('', $2, $3, $4, $5, $6);\n\t\t\t});\n\t\t\treturn $[2];\n\t\t}\n\t\tline += '\\n';\n\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER.test(line) || throwSyntaxError(where());\n\t\tliteral += line;\n\t}\n}\n\nfunction assignInlineTable (table, finalKey, lineRest) {\n\tconst inlineTable = table[finalKey] = new Table(keepOrder);\n\tStaticObjects.add(inlineTable);\n\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\tif ( allowInlineTableMultiLineAndTrailingCommaEvenNoComma ) {\n\t\tconst start = mark();\n\t\tfor ( ; ; ) {\n\t\t\twhile ( lineRest==='' || lineRest.startsWith('#') ) {\n\t\t\t\tlineRest = must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tlineRest = assignInline(inlineTable, lineRest);\n\t\t\twhile ( lineRest==='' || lineRest.startsWith('#') ) {\n\t\t\t\tlineRest = must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith(',') ) { lineRest = lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t}\n\t}\n\telse {\n\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t( lineRest==='' || lineRest.startsWith('#') ) && throwSyntaxError('Inline Table is intended to appear on a single line, which broken at '+where());\n\t\tfor ( ; ; ) {\n\t\t\tlineRest = assignInline(inlineTable, lineRest);\n\t\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tif ( lineRest.startsWith(',') ) {\n\t\t\t\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\t\t\t\tlineRest.startsWith('}') && throwSyntaxError('The last property of an Inline Table can not have a trailing comma, which was found at '+where());\n\t\t\t}\n\t\t\t( lineRest==='' || lineRest.startsWith('#') ) && throwSyntaxError('Inline Table is intended to appear on a single line, which broken at '+where());\n\t\t}\n\t}\n}\n\nfunction assignInlineArray (table, finalKey, lineRest) {\n\tconst inlineArray = table[finalKey] = [];\n\tStaticObjects.add(inlineArray);\n\tconst start = mark();\n\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\twhile ( lineRest==='' || lineRest.startsWith('#') ) {\n\t\tlineRest = must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t}\n\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\tfor ( ; ; ) {\n\t\tlineRest = pushInline(inlineArray, lineRest);\n\t\twhile ( lineRest==='' || lineRest.startsWith('#') ) {\n\t\t\tlineRest = must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t\t}\n\t\tif ( lineRest.startsWith(',') ) {\n\t\t\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\t\t\tif ( keepComment && lineRest.startsWith('#') ) {\n\t\t\t\tdefineProperty(inlineArray, Symbol_for(inlineArray.length-1+''), {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: lineRest,\n\t\t\t\t});\n\t\t\t\tlineRest = '';\n\t\t\t}\n\t\t\twhile ( lineRest==='' || lineRest.startsWith('#') ) {\n\t\t\t\tlineRest = must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t}\n\t\telse {\n\t\t\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tthrowSyntaxError(where());\n\t\t}\n\t}\n}\n\nfunction pushInline (array, lineRest) {\n\tconst custom = lineRest.startsWith('!!');\n\tlet type;\n\tif ( custom ) {\n\t\ttypify===unlimitedType || throwSyntaxError('Only mixable arrays could contain custom type. Check '+where());\n\t\t( { 1: type, 2: lineRest } = RE._VALUE_PAIR.exec(lineRest) || throwSyntaxError(where()) );\n\t\tensureConstructor(type);\n\t}\n\tconst lastIndex = ''+array.length;\n\tswitch ( lineRest[0] ) {\n\t\tcase \"'\":\n\t\t\tlineRest = assignLiteralString(typify(array, ArrayOfStrings), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '\"':\n\t\t\tlineRest = assignBasicString(typify(array, ArrayOfStrings), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '{':\n\t\t\tlineRest = assignInlineTable(typify(array, ArrayOfInlineTables), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '[':\n\t\t\tlineRest = assignInlineArray(typify(array, ArrayOfInlineArrays), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '`':\n\t\t\tlineRest = assignInterpolationString(typify(array, ArrayOfStrings), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tlet literal;\n\t\t\t( { 1: literal, 2: lineRest } = RE.VALUE_REST.exec(lineRest) || throwSyntaxError(where()) );\n\t\t\tif ( literal==='true' ) { typify(array, ArrayOfBooleans).push(true); }\n\t\t\telse if ( literal==='false' ) { typify(array, ArrayOfBooleans).push(false); }\n\t\t\telse if ( literal==='inf' || literal==='+inf' ) { typify(array, ArrayOfFloats).push(Infinity); }\n\t\t\telse if ( literal==='-inf' ) { typify(array, ArrayOfFloats).push(-Infinity); }\n\t\t\telse if ( literal==='nan' || literal==='+nan' || literal==='-nan' ) {\n\t\t\t\ttypify(array, ArrayOfFloats).push(NaN);\n\t\t\t}\n\t\t\telse if ( literal.includes(':') || literal.indexOf('-')!==literal.lastIndexOf('-') ) {\n\t\t\t\ttypify(array, ArrayOfDatetimes).push(new Datetime(literal));\n\t\t\t}\n\t\t\telse if ( literal.includes('.') || literal.includes('e') || literal.includes('E') ) {\n\t\t\t\ttypify(array, ArrayOfFloats).push(Float(literal));\n\t\t\t}\n\t\t\telse if ( enableNull && literal==='null' || enableNil && literal==='nil' ) {\n\t\t\t\ttypify(array, ArrayOfNulls).push(null);\n\t\t\t}\n\t\t\telse { typify(array, ArrayOfIntegers).push(Integer(literal, useBigInt, allowLonger)); }\n\t\t\tbreak;\n\t}\n\tif ( custom ) { array[lastIndex] = construct(type, array[lastIndex]); }\n\tif ( keepComment && lineRest.startsWith('#') ) {\n\t\tdefineProperty(array, Symbol_for(lastIndex), {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tvalue: lineRest,\n\t\t});\n\t\treturn '';\n\t}\n\treturn lineRest;\n}\n\nfunction assignInterpolationString (table, finalKey, lineRest) {\n\tenableInterpolationString || throwSyntaxError(where());\n\tRE.DELIMITER_CHECK.test(lineRest) && throwSyntaxError('Interpolation String opening tag incorrect at '+where());\n\tconst literals = [];\n\tfor ( const start = mark(); ; ) {\n\t\tconst literal = must('Interpolation String', start);\n\t\tif ( literal.startsWith(lineRest) ) {\n\t\t\tlineRest = lineRest.slice(lineRest.length).replace(RE.PRE_WHITESPACE, '');\n\t\t\tbreak;\n\t\t}\n\t\tliterals.push(literal);\n\t}\n\tlet string = literals.join('\\n');\n\tif ( lineRest.startsWith('(') ) {\n\t\tconst interpolations_rest = RE.INTERPOLATIONS.exec(lineRest) || throwSyntaxError(where());\n\t\tlineRest = interpolations_rest[2];\n\t\tfor ( const interpolation of interpolations_rest[1].match(RE.INTERPOLATION) ) {\n\t\t\tif ( RE.REGEXP_MODE.test(interpolation) ) {\n\t\t\t\tconst { 1: pattern, 2: flags, 3: Replacer } = RE.PATTERN_FLAGS_REPLACER.exec(interpolation);\n\t\t\t\tconst search = newRegExp(pattern, flags) || throwSyntaxError('Invalid regExp at '+where());\n\t\t\t\tlet replacer;\n\t\t\t\tswitch ( Replacer[0] ) {\n\t\t\t\t\tcase \"'\":\n\t\t\t\t\t\treplacer = Replacer.slice(1, -1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '\"':\n\t\t\t\t\t\treplacer = String(Replacer.slice(1, -1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tconst map = newMap(Replacer, true);\n\t\t\t\t\t\treplacer = $0 => map.has($0) ? map.get($0) : $0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tconst { 1: whole, 2: subs } = RE.WHOLE_AND_SUBS.exec(Replacer);\n\t\t\t\t\t\tconst maps = [null];\n\t\t\t\t\t\tfor ( const sub of subs.match(RE.SUB) ) { maps.push(newMap(sub, true)); }\n\t\t\t\t\t\treplacer = (...args) => whole.replace(RE.DOLLAR, $n => {\n\t\t\t\t\t\t\tif ( $n==='$$' ) { return '$'; }\n\t\t\t\t\t\t\tconst n = $n.slice(1);\n\t\t\t\t\t\t\tconst arg = args[n] || '';\n\t\t\t\t\t\t\tconst map = maps[n];\n\t\t\t\t\t\t\treturn map && map.has(arg) ? map.get(arg) : arg;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstring = string.replace(search, replacer);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst map = newMap(interpolation, false);\n\t\t\t\tlet round = '';\n\t\t\t\touter: for ( let length = string.length, index = 0; index<length; ) {\n\t\t\t\t\tfor ( const { 0: search, 1: replacer } of map ) {\n\t\t\t\t\t\tif ( string.startsWith(search, index) ) {\n\t\t\t\t\t\t\tround += replacer;\n\t\t\t\t\t\t\tindex += search.length;\n\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tround += string[index];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\tstring = round;\n\t\t\t}\n\t\t}\n\t}\n\ttable[finalKey] = string;\n\treturn lineRest;\n}\n\nfunction newMap (interpolation, usedForRegExp) {\n\tconst map = new Map;\n\tconst tokens = interpolation.match(RE.INTERPOLATION_TOKEN);\n\tfor ( let length = tokens.length, index = 0; index<length; ) {\n\t\tlet search = tokens[index++];\n\t\tsearch = search[0]===\"'\" ? search.slice(1, -1) : String(search.slice(1, -1));\n\t\tusedForRegExp || search || throwSyntaxError('Characters to replace can not be empty, which was found at '+where());\n\t\tmap.has(search) && throwSyntaxError('Duplicate '+( usedForRegExp ? 'replacer' : 'characters to replace' )+' at '+where());\n\t\tlet replacer = tokens[index++];\n\t\treplacer = replacer[0]===\"'\" ? replacer.slice(1, -1) : String(replacer.slice(1, -1));\n\t\tmap.set(search, replacer);\n\t}\n\treturn map;\n}\n\nfunction newRegExp (pattern, flags) {\n\ttry { return new RegExp(pattern, flags); }\n\tcatch (error) { return null; }\n}\n\nfunction prepareConstructors () {\n\tif ( typeof customConstructors==='function' ) {\n\t\tif ( customConstructors.length!==2 ) { throw new Error('TOML.parse(,,,xOptions.new.length)'); }\n\t\tFUNCTION.add(customConstructors);\n\t}\n\telse if ( typeof customConstructors==='object' ) {\n\t\tif ( getPrototypeOf(customConstructors)===null ) {\n\t\t\tfor ( const type of getOwnPropertyNames(customConstructors) ) {\n\t\t\t\tif ( typeof customConstructors[type]!=='function' ) {\n\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\tthrow new TypeError('TOML.parse(,,,xOptions.new['+stringify(type)+'])');\n\t\t\t\t}\n\t\t\t\tif ( customConstructors[type].length ) {\n\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\tthrow new Error('TOML.parse(,,,xOptions.new['+stringify(type)+'].length)');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst origin = customConstructors;\n\t\t\tcustomConstructors = create(null);\n\t\t\tfor ( const type of getOwnPropertyNames(origin) ) {\n\t\t\t\tconst customConstructor = origin[type];\n\t\t\t\tif ( typeof customConstructor!=='function' ) {\n\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\tthrow new TypeError('TOML.parse(,,,xOptions.new['+stringify(type)+'])');\n\t\t\t\t}\n\t\t\t\tif ( customConstructors[type].length ) {\n\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\tthrow new Error('TOML.parse(,,,xOptions.new['+stringify(type)+'].length)');\n\t\t\t\t}\n\t\t\t\tcustomConstructors[type] = customConstructor;\n\t\t\t}\n\t\t}\n\t}\n\telse { throw new TypeError('TOML.parse(,,,xOptions.new)'); }\n}\n\nfunction ensureConstructor (type) {\n\tcustomConstructors || throwSyntaxError(where());\n\tFUNCTION.has(customConstructors) || type in customConstructors || throwError(where());\n}\n\nfunction construct (type, value) {\n\treturn FUNCTION.has(customConstructors) ? customConstructors(type, value) : customConstructors[type](value);\n}\n",
			"import version from './version?text';\nimport { Array } from './global.js';\nimport { String, Integer, Float, Boolean, Datetime, Table } from './types.js';\nimport parse from './parser.js';\n\nconst TOML = {\n\tparse,\n\tString,\n\tInteger,\n\tFloat,\n\tBoolean,\n\tDatetime,\n\tArray,\n\tTable,\n\tversion\n};\n\nexport default TOML;\n"
		]
}