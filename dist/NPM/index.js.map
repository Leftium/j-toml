{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","global.js","share/iterator.js","types/Table.js","share/RE-higher.js?<RegExp>","share/RE-never-slow-nor-overflow.js","share/RE.js","types/Datetime.js","types/Float.js","types/Integer.js","share/options.js","types/String.js","parser-extension.js","parser.js","default.js"],
	"names":
		["Error","iterator.throwSyntaxError","iterator.where","RE.SYM_WHITESPACE","RE.PRE_WHITESPACE","RE.DATETIME","RE.FLOAT","RE.FLOAT_NOT_INTEGER","RE.UNDERSCORES","RE.XOB_INTEGER","RE.INTEGER","options.allowLonger","iterator.throwRangeError","options.IntegerMin","options.IntegerMax","iterator.throwTypeError","options.useWhatToJoinMultiLineString","RE.ESCAPED_IN_SINGLE_LINE","RE.ESCAPED_IN_MULTI_LINE","options.enableInterpolationString","RE.DELIMITER_CHECK","iterator.mark","iterator.must","RE.INTERPOLATIONS","RE.INTERPOLATION","RE.REGEXP_MODE","RE.PATTERN_FLAGS_REPLACER","RE.WHOLE_AND_SUBS","RE.SUB","RE.DOLLAR","RE.INTERPOLATION_TOKEN","options.customConstructors","options.FUNCTION","iterator.throwError","options.use","options.TableDepends","iterator.from","RE.BOM","RE.EOL","iterator.rest","iterator.next","options.keepComment","RE.TABLE_DEFINITION_exec","rest","iterator.done","options.clear","options.open","RE.KEYS","RE.KEY_VALUE_PAIR_exec","RE.VALUE_REST","options.enableNull","options.enableNil","options.IntegerDepends","RE.LITERAL_STRING","RE.MULTI_LINE_LITERAL_STRING","RE.CONTROL_CHARACTER_EXCLUDE_TAB","RE.BASIC_STRING_exec","RE.MULTI_LINE_BASIC_STRING_exec_0","RE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test","options.allowInlineTableMultiLineAndTrailingCommaEvenNoComma","RE._VALUE_PAIR","options.asStrings","options.asTables","options.asArrays","options.asBooleans","options.asFloats","options.asDatetimes","options.asNulls","options.asIntegers"],
	"mappings":
		";;AAAA,gBAAe,QAAQ;;yBAAC,zBCAjB,MAAM;CACZ,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,SAAEA,OAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM;CAC9H,MAAM,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE;CAC3B,KAAK,EAAE,EAAE,OAAO,EAAE;CAClB,MAAM,EAAE,EAAE,aAAa,EAAE;CACzB,MAAM,EAAE,EAAE,aAAa,EAAE;CACzB,MAAM,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAE;CACvC,OAAO,EAAE,EAAE,cAAc,EAAE;CAC3B,IAAI,EAAE,EAAE,SAAS,EAAE;CACnB,MAAM,EAAE,EAAE,QAAQ,EAAE;CACpB,GAAG,MAAM;;WAAC,XCRX,MAAM,IAAI,GAAG,EAAE,CAAC;AAChB,IAAI,WAAW,GAAG,IAAI,CAAC;AACvB,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;AACvB,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;;AAEnB,AAAO,MAAM,IAAI,GAAG,KAAK,IAAI;CAC5B,WAAW,GAAG,KAAK,CAAC;CACpB,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;CACrC,SAAS,GAAG,CAAC,CAAC,CAAC;CACf,CAAC;;AAEF,AAAO,MAAM,IAAI,GAAG,MAAM,EAAE,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC;;AAElD,AAAO,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC;;AAEnD,AAAO,MAAM,IAAI,GAAG,MAAM,SAAS,GAAG,aAAa,CAAC;;AAEpD,AAAO,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC;;AAEpC,AAAO,MAAM,IAAI,GAAG,CAAC,OAAO,EAAE,UAAU,KAAK;CAC5C,KAAK,SAAS,GAAG,aAAa,GAAG;EAChC,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,mEAAmE,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;EACzJ,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;;EAE5B,MAAM,KAAK,CAAC;EACZ;CACD,OAAO,WAAW,CAAC,EAAE,SAAS,CAAC,CAAC;CAChC,CAAC;;AAEF,AAAO,MAAM,KAAK,GAAG,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;;AAE/E,AAAO,MAAM,gBAAgB,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE5E,AAAO,MAAM,eAAe,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE1E,AAAO,MAAM,cAAc,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;;AAExE,AAAO,MAAM,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC,IAAIA,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC;;AAEhE,SAAS,MAAM,EAAE,KAAK,EAAE;CACvB,KAAK,WAAW,GAAG,IAAI,GAAG;EACzB,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;EAC5B,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;;EAE/B;CACD,MAAM,KAAK,CAAC;CACZ;;AC9CM,SAAS,KAAK,IAAI,GAAG;AAC5B,AAAO,MAAM,YAAY,GAAG,SAAS,KAAK,IAAI,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;;AAEzE,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;;AAExD,AAAO,MAAM,OAAO,GAAG,KAAK,IAAI,KAAK,YAAY,KAAK,CAAC;;AAEvD,AAAO,MAAM,WAAW,GAAG,IAAI,OAAO,CAAC;AACvC,AAAO,MAAM,UAAU,GAAG,IAAI,OAAO,CAAC;;ACE/B,MAAM,QAAQ,GAAG,mQAAmQ,CAAC;AAC5R,AAIA;AACA,AAAO,MAAM,cAAc,GAAG,SAAS,CAAC;AACxC,AAAO,MAAM,IAAI,GAAG,sCAAsC,CAAC;AAC3D,AAAO,MAAM,UAAU,GAAG,sDAAsD,CAAC;AACjF,AAAO,MAAM,cAAc,GAAG,8CAA8C,CAAC;AAC7E,AAAO,MAAM,yBAAyB,GAAG,8BAA8B,CAAC;AACxE,AAAO,MAAM,6BAA6B,GAAG,0BAA0B,CAAC;AACxE,AAAO,MAAM,qBAAqB,GAAG,0DAA0D,CAAC;AAChG,AAAO,MAAM,cAAc,GAAG,YAAY,CAAC;;AAE3C,AAAO,MAAM,WAAW,GAAG,iCAAiC,CAAC;AAC7D,AAUA;AACA,AAAO,MAAM,GAAG,GAAG,sMAAsM,CAAC;AAC1N,AAAO,MAAM,eAAe,GAAG,MAAM,CAAC;AACtC,AAAO,MAAM,aAAa,GAAG,+uBAA+uB,CAAC;AAC7wB,AAAO,MAAM,cAAc,GAAG,uwBAAuwB,CAAC;AACtyB,AAAO,MAAM,mBAAmB,GAAG,+BAA+B,CAAC;AACnE,AAAO,MAAM,WAAW,GAAG,aAAa,CAAC;AACzC,AAAO,MAAM,sBAAsB,GAAG,yiBAAyiB,CAAC;AAChlB,AAAO,MAAM,cAAc,GAAG,4CAA4C,CAAC;AAC3E,AAAO,MAAM,MAAM,GAAG,oBAAoB,CAAC;;AC5C3C;;AAEA,MAAM,uBAAuB,GAAG,6BAA6B,CAAC;AAC9D,AAAO,SAAS,8BAA8B,EAAE,CAAC,EAAE;CAClD,MAAM,IAAI,EAAE,GAAG,EAAE,MAAM;EACtB,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;EAC5B,MAAM,CAAC,GAAG,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1C,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;EAC9B,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EACzB;CACD;;AAED,MAAM,iCAAiC,GAAG,mFAAmF,CAAC;AAC9H,AAAO,SAAS,sCAAsC,EAAE,CAAC,EAAE;CAC1D,OAAO,CAAC,CAAC,OAAO,CAAC,iCAAiC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;CAC7D;;AAED,MAAM,YAAY,GAAG,qFAAqF,CAAC;AAC3G,AAAO,SAAS,iBAAiB,EAAE,EAAE,EAAE;CACtC,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CACjB,MAAM,IAAI,EAAE,GAAG,EAAE,MAAM;EACtB,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAChC,KAAK,CAAC,GAAG,IAAI,GAAG;GACf,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,IAAIC,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;GAClE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAACC,cAAiB,EAAE,EAAE,CAAC,EAAE,CAAC;GACvD;EACD,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EAC3B;CACD;;AAED,MAAM,QAAQ,GAAG,SAAS,CAAC;AAC3B,MAAM,WAAW,GAAG,gCAAgC,CAAC;AACrD,MAAM,OAAO,GAAG,iBAAiB,CAAC;;AAElC,AAAO,SAAS,qBAAqB,EAAE,CAAC,EAAE;CACzC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CAC7B,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAACC,cAAiB,EAAE,EAAE,CAAC,CAAC;CACvD,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CACtB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC;CACtD,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAIH,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;CACjE,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CAC7B,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAACE,cAAiB,EAAE,EAAE,CAAC,CAAC;CACvD,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAIH,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;CAC3E,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;CACrC;;AAED,MAAM,cAAc,GAAG,iDAAiD,CAAC;AACzE,AAAO,SAAS,mBAAmB,EAAE,CAAC,EAAE;CACvC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CACtB,MAAM,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAID,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;CACjG,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CAC5C;;AAED,SAAS,OAAO,EAAE,CAAC,EAAE;CACpB,MAAM,IAAI,IAAI,GAAG,EAAE,MAAM;EACxB,KAAK,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GACxB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACf,MAAM,IAAI,GAAG,GAAG,GAAG,MAAM;IACxB,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC,GAAG,IAAI,GAAG;KACf,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAID,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;KACjE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACf,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;KAChB,MAAM;KACN;IACD,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IACzB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ;GACD;OACI;GACJ,MAAM,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,IAAID,gBAAyB,CAACC,KAAc,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;GACzH,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;GACxB,IAAI,IAAI,GAAG,CAAC;GACZ;EACD,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE;EAChC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;EACzB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACb;CACD;;ACjFD;;AAEA,AAAO,MAAM,sBAAsB,GAAG,0CAA0C,CAAC;;AAEjF,AAAO,MAAM,WAAW,GAAG,IAAI,CAAC;;AAEhC,AAAO,MAAM,WAAW,GAAG,0EAA0E,CAAC;AACtG,AAAO,MAAM,OAAO,GAAG,0BAA0B,CAAC;;AAElD,AAAO,MAAM,KAAK,GAAG,6EAA6E,CAAC;AACnG,AAAO,MAAM,iBAAiB,GAAG,OAAO,CAAC;AACzC,AAEA;;;AAGA,AAAO,MAAM,GAAG,GAAG,SAAS,CAAC;AAC7B,AAAO,MAAM,GAAG,GAAG,OAAO,CAAC;;AChB3B,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAC9C,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;;AAE1C,AAAO,MAAM,QAAQ,SAAS,IAAI,CAAC;;CAElC,WAAW,CAAC,CAAC,OAAO,EAAE;EACrB,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM,GAAG,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAGG,QAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAIJ,gBAAyB,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAACC,KAAc,EAAE,CAAC,CAAC;EAC7K,KAAK;GACJ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM;KACjB,GAAG,GAAG,GAAG,CAAC,eAAe;QACtB,aAAa,CAAC,MAAM;GACzB,CAAC;EACF,IAAI,CAAC,IAAI;GACR,CAAC,GAAG,kBAAkB;IACrB,CAAC,GAAG,iBAAiB;KACpB,GAAG,GAAG,YAAY;QACf,YAAY,CAAC;EACnB,IAAI,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC;EAC9B,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;EACnC;;;;;CAKD,WAAW,CAAC,GAAG;EACd,KAAK,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE;EACzE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;EACrD;;CAED;;AC9BM,MAAM,KAAK,GAAG,OAAO,IAAI;CAC/B,KAAKI,KAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAIC,iBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;EACnE,OAAO,CAAC,OAAO,CAAC,OAAO,CAACC,WAAc,EAAE,EAAE,CAAC,CAAC;;;;EAI5C;;;;CAIDP,gBAAyB,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAACC,KAAc,EAAE,CAAC,CAAC;CAC5E,CAAC;;ACVK,MAAM,aAAa,GAAG,CAAC,OAAO,KAAK;CACzC,KAAK,OAAO,GAAG,GAAG,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE;CACtE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGO,WAAc,GAAGC,OAAU,GAAG,IAAI,CAAC,OAAO,CAAC;IACpET,gBAAyB,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAACC,KAAc,EAAE,CAAC,CAAC;CACjF,MAAM,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,CAACM,WAAc,EAAE,EAAE,CAAC,CAAC;CACpDG,WAAmB;IAChB,aAAa,CAAC,MAAM,CAAC;IACrBC,eAAwB,CAAC,wEAAwE,CAAC,OAAO,CAAC,WAAW,CAACV,KAAc,EAAE,CAAC,CAAC;CAC3I,OAAO,MAAM,CAAC;CACd,CAAC;;AAEF,AAAO,MAAM,aAAa,GAAG,CAAC,OAAO,KAAK;CACzC,KAAK,OAAO,GAAG,GAAG,IAAI,OAAO,GAAG,IAAI,IAAI,OAAO,GAAG,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;CACvE,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGO,WAAc,GAAGC,OAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAIT,gBAAyB,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAACC,KAAc,EAAE,CAAC,CAAC;CACzJ,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAACM,WAAc,EAAE,EAAE,CAAC,CAAC,CAAC;CAC3DG,WAAmB;IAChB,CAAC,oBAAoB,EAAE,MAAM,IAAI,MAAM,EAAE,oBAAoB;IAC7DC,eAAwB,CAAC,sGAAsG,CAAC,OAAO,CAAC,WAAW,CAACV,KAAc,EAAE,CAAC,CAAC;CACzK,OAAO,MAAM,CAAC;CACd,CAAC;;AAEF,AAAO,MAAM,aAAa,GAAG,CAAC,OAAO,KAAK;CACzC,MAAM,MAAM,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;CACtC,OAAOW,UAAkB,EAAE,MAAM,IAAI,MAAM,EAAEC,UAAkB,GAAG,GAAG,MAAM,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC;CAC1F,CAAC;;ACxBK,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC;AACpC,AAAO,MAAM,MAAM,GAAG,KAAK,IAAI,KAAK,CAAC;AACrC,AAAO,MAAM,EAAE,oBAAoB,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,GAAG,IAAI,KAAK,CAAC,IAAI,OAAO,EAAE;CACvO,GAAG,EAAE,UAAU,IAAI,SAAS,MAAM,EAAE,KAAK,EAAE;EAC1C,KAAK,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG;GAC5B,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM;MAC3BC,cAAuB,CAAC,qCAAqC,CAACb,KAAc,EAAE,CAAC,CAAC;GACnF;OACI,EAAE,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE;EACvC,OAAO,KAAK,CAAC;EACb;CACD,CAAC,CAAC;;AAEH,AAAO,IAAI,4BAA4B,CAAC;AACxC,AAAO,IAAI,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC;AAClD,AAAO,IAAI,YAAY,CAAC;AACxB,AAAO,IAAI,IAAI,CAAC;AAChB,AAAO,IAAI,WAAW,CAAC;AACvB,AAAO,IAAI,WAAW,CAAC;AACvB,AAAO,IAAI,UAAU,CAAC;AACtB,AAAO,IAAI,SAAS,CAAC;AACrB,AAAO,IAAI,oDAAoD,CAAC;AAChE,AAAO,IAAI,yBAAyB,CAAC;AACrC,AAAO,IAAI,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC;AACjG,AAAO,IAAI,kBAAkB,CAAC;;AAE9B,AAAO,SAAS,GAAG,EAAE,2DAA2D,EAAE,oBAAoB,EAAE,gBAAgB,EAAE;CACzH,KAAK,OAAO,2DAA2D,GAAG,QAAQ,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,+BAA+B,CAAC,CAAC,EAAE;CAC9I,KAAK,oBAAoB,GAAG,IAAI,GAAG,EAAE,cAAc,GAAG,aAAa,CAAC,EAAE;MACjE,KAAK,oBAAoB,GAAG,KAAK,GAAG,EAAE,cAAc,GAAG,aAAa,CAAC,EAAE;MACvE;EACJ,KAAK,OAAO,oBAAoB,GAAG,QAAQ,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAC,EAAE;EAClG,KAAK,CAAC,aAAa,CAAC,oBAAoB,CAAC,GAAG,EAAE,MAAM,IAAI,UAAU,CAAC,0BAA0B,CAAC,CAAC,EAAE;EACjG,cAAc,GAAG,aAAa,CAAC;EAC/B,KAAK,oBAAoB,EAAE,CAAC,GAAG;GAC9B,UAAU,GAAG,oBAAoB,CAAC;GAClC,UAAU,GAAG,CAAC,oBAAoB,CAAC;GACnC;OACI;GACJ,UAAU,GAAG,oBAAoB,CAAC;GAClC,UAAU,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC;GACrC;EACD;CACD,4BAA4B,GAAG,2DAA2D,CAAC;CAC3F,IAAI,MAAM,CAAC;CACX,KAAK,gBAAgB,GAAG,IAAI,GAAG;EAC9B,YAAY,GAAG,KAAK,CAAC;EACrB,IAAI,GAAG,WAAW,GAAG,WAAW,GAAG,UAAU,GAAG,SAAS,GAAG,oDAAoD,GAAG,yBAAyB,GAAG,KAAK,CAAC;EACrJ,kBAAkB,GAAG,IAAI,CAAC;EAC1B,MAAM,GAAG,IAAI,CAAC;EACd;MACI;EACJ,YAAY,GAAG,gBAAgB,CAAC,KAAK,GAAG,YAAY,GAAG,KAAK,CAAC;EAC7D,IAAI,GAAG,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;EAC/B,WAAW,GAAG,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC;EACxC,WAAW,GAAG,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;EACtC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;EACrC,SAAS,GAAG,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC;EACnC,oDAAoD,GAAG,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC;EAChF,yBAAyB,GAAG,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC;EACnD,MAAM,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC;EAC/B,kBAAkB,GAAG,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC;EAClD,KAAK,kBAAkB,GAAG,IAAI,GAAG;GAChC,KAAK,OAAO,kBAAkB,GAAG,UAAU,GAAG;IAC7C,KAAK,MAAM,GAAG;KACb,kBAAkB,GAAG,IAAI,CAAC;KAC1B,MAAM,IAAIF,OAAK,CAAC,wCAAwC,CAAC,CAAC;KAC1D;IACD,KAAK,kBAAkB,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,MAAM,IAAIA,OAAK,CAAC,qCAAqC,CAAC,CAAC,EAAE;IAChG,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACjC;QACI,KAAK,OAAO,kBAAkB,GAAG,QAAQ,GAAG;IAChD,KAAK,MAAM,GAAG;KACb,kBAAkB,GAAG,IAAI,CAAC;KAC1B,MAAM,IAAIA,OAAK,CAAC,uCAAuC,CAAC,CAAC;KACzD;IACD,KAAK,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,GAAG;KAChD,MAAM,MAAM,IAAI,IAAI,mBAAmB,CAAC,kBAAkB,CAAC,GAAG;MAC7D,KAAK,OAAO,kBAAkB,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG;OACnD,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;OACzE;MACD,KAAK,kBAAkB,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG;OACtC,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAIA,OAAK,CAAC,8BAA8B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC;OAC5E;MACD;KACD;SACI;KACJ,MAAM,MAAM,GAAG,kBAAkB,CAAC;KAClC,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;KAClC,MAAM,MAAM,IAAI,IAAI,mBAAmB,CAAC,MAAM,CAAC,GAAG;MACjD,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;MACvC,KAAK,OAAO,iBAAiB,GAAG,UAAU,GAAG;OAC5C,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;OACzE;MACD,KAAK,kBAAkB,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG;OACtC,kBAAkB,GAAG,IAAI,CAAC;OAC1B,MAAM,IAAIA,OAAK,CAAC,8BAA8B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC;OAC5E;MACD,kBAAkB,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC;MAC7C;KACD;IACD;QACI,EAAE,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC,EAAE;GAC7D;EACD;CACD,KAAK,MAAM,GAAG;EACb,OAAO,GAAG,oBAAoB,CAAC;EAC/B,SAAS,GAAG,sBAAsB,CAAC;EACnC,QAAQ,GAAG,qBAAqB,CAAC;EACjC,QAAQ,GAAG,qBAAqB,CAAC;EACjC,UAAU,GAAG,uBAAuB,CAAC;EACrC,QAAQ,GAAG,qBAAqB,CAAC;EACjC,WAAW,GAAG,wBAAwB,CAAC;EACvC,UAAU,GAAG,uBAAuB,CAAC;EACrC;MACI,EAAE,OAAO,GAAG,SAAS,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,WAAW,GAAG,UAAU,GAAG,MAAM,CAAC,EAAE;CAC/G;;AAED,AAAO,SAAS,KAAK,IAAI;CACxB,kBAAkB,GAAG,IAAI,CAAC;CAC1B;;AC3HD,MAAM,YAAY,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;;AAErE,MAAM,kBAAkB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;CAClD,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;CACxB,KAAK,EAAE,GAAG,EAAE,OAAO,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE;CACtC,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;CACzC,EAAE,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,IAAI,QAAQ,CAAC,SAAS;IACzDY,eAAwB,CAAC,yBAAyB,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,MAAM,CAACV,KAAc,EAAE,CAAC,CAAC;CAC5G,OAAO,aAAa,CAAC,SAAS,CAAC,CAAC;CAChC,CAAC;;AAEF,MAAM,iBAAiB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK;CACrD,KAAK,EAAE,GAAG,IAAI,GAAG,EAAE,OAAOc,4BAAoC,CAAC,EAAE;CACjE,KAAK,EAAE,GAAG;EACT,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;KACdf,gBAAyB,CAAC,+EAA+E,CAACC,KAAc,EAAE,CAAC,CAAC;EAC/H,OAAO,EAAE,CAAC;EACV;CACD,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;CACxB,KAAK,EAAE,GAAG,EAAE,OAAO,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE;CACtC,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;CACzC,EAAE,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,MAAM,IAAI,QAAQ,CAAC,SAAS;IACzDU,eAAwB,CAAC,yBAAyB,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,MAAM,CAACV,KAAc,EAAE,CAAC,CAAC;CAC5G,OAAO,aAAa,CAAC,SAAS,CAAC,CAAC;CAChC,CAAC;;AAEF,AAAO,MAAM,WAAW,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAACe,sBAAyB,EAAE,kBAAkB,CAAC,CAAC;;AAErG,AAAO,MAAM,oBAAoB,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAACC,qBAAwB,EAAE,iBAAiB,CAAC,CAAC;;AC3BrG,SAAS,yBAAyB,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE;CACtEC,yBAAiC,IAAIlB,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;CACjFkB,eAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAInB,gBAAyB,CAAC,gDAAgD,CAACC,KAAc,EAAE,CAAC,CAAC;CACnI,IAAI,MAAM,CAAC;CACX,IAAI,QAAQ,CAAC;CACb;EACC,MAAM,QAAQ,GAAG,EAAE,CAAC;EACpB,MAAM,MAAM,KAAK,GAAGmB,IAAa,EAAE,MAAM;GACxC,MAAM,OAAO,GAAGC,IAAa,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;GAC7D,KAAK,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG;IACpC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAAClB,cAAiB,EAAE,EAAE,CAAC,CAAC;IAC1E,MAAM;IACN;GACD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GACvB;EACD,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7B;CACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;EAC/B,MAAM,mBAAmB,GAAGmB,cAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAItB,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;EAC5G,QAAQ,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;EAClC,MAAM,MAAM,aAAa,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,KAAK,CAACsB,aAAgB,CAAC,GAAG;GAC7E,KAAKC,WAAc,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG;IACzC,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAGC,sBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5F,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAIzB,gBAAyB,CAAC,oBAAoB,CAACC,KAAc,EAAE,CAAC,CAAC;IAC7G,IAAI,QAAQ,CAAC;IACb,SAAS,QAAQ,CAAC,CAAC,CAAC;KACnB,KAAK,GAAG;MACP,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACjC,MAAM;KACP,KAAK,GAAG;MACP,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9C,MAAM;KACP,KAAK,GAAG;MACP,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;MACnC,QAAQ,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;MAChD,MAAM;KACP,KAAK,GAAG;MACP,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAGyB,cAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC/D,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;MACpB,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,CAACC,GAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;MACzE,QAAQ,GAAG,CAAC,GAAG,IAAI,KAAK,KAAK,CAAC,OAAO,CAACC,MAAS,EAAE,EAAE,IAAI;OACtD,KAAK,EAAE,GAAG,IAAI,GAAG,EAAE,OAAO,GAAG,CAAC,EAAE;OAChC,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OACtB,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;OAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OACpB,OAAO,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;OAChD,CAAC,CAAC;MACH,MAAM;KACP;IACD,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC1C;QACI;IACJ,MAAM,GAAG,GAAG,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACzC,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,KAAK,EAAE,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,IAAI;KACnE,MAAM,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,GAAG,GAAG;MAC/C,KAAK,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG;OACvC,KAAK,IAAI,QAAQ,CAAC;OAClB,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC;OACvB,SAAS,KAAK,CAAC;OACf;MACD;KACD,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;KACvB,EAAE,KAAK,CAAC;KACR;IACD,MAAM,GAAG,KAAK,CAAC;IACf;GACD;EACD;CACD,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;CACzB,OAAO,QAAQ,CAAC;CAChB;;AAED,SAAS,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE;CAC9C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC;CACpB,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,CAACC,mBAAsB,CAAC,CAAC;CAC3D,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,IAAI;EAC5D,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC7B,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAClF,aAAa;KACV,MAAM;KACN7B,gBAAyB,CAAC,6DAA6D,CAACC,KAAc,EAAE,CAAC,CAAC;EAC7G,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;KACZD,gBAAyB,CAAC,YAAY,GAAG,aAAa,GAAG,UAAU,GAAG,uBAAuB,EAAE,CAAC,MAAM,CAACC,KAAc,EAAE,CAAC,CAAC;EAC5H,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC/B,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1F,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EAC1B;CACD,OAAO,GAAG,CAAC;CACX;;AAED,SAAS,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE;CACnC,IAAI,EAAE,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;CAC1C,OAAO,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;CAC9B;;AAED,AAAO,SAAS,iBAAiB,EAAE,IAAI,EAAE;CACxC6B,kBAA0B;IACvB9B,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;CAC/C8B,QAAgB,CAAC,GAAG,CAACD,kBAA0B,CAAC;IAC7C,IAAI,IAAIA,kBAA0B;IAClCE,UAAmB,CAAC/B,KAAc,EAAE,CAAC,CAAC;CACzC;;AAED,AAAO,SAAS,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE;CACvC,OAAO8B,QAAgB,CAAC,GAAG,CAACD,kBAA0B,CAAC,GAAGA,kBAA0B,CAAC,IAAI,EAAE,KAAK,CAAC,GAAGA,kBAA0B,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;CAC5I;;ACtGc,SAAS,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,2DAA2D,EAAE,oBAAoB,GAAG,IAAI,EAAE,gBAAgB,GAAG,IAAI,EAAE;CAC5K,KAAK,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAE;CACtE,KAAK,OAAO,WAAW,GAAG,QAAQ,GAAG,EAAE,MAAM,IAAI,SAAS,CAAC,oBAAoB,CAAC,CAAC,EAAE;CACnF,KAAK,YAAY,GAAG,GAAG,GAAG,EAAE,MAAM,IAAI/B,OAAK,CAAC,sBAAsB,CAAC,CAAC,EAAE;CACtEkC,GAAW,CAAC,2DAA2D,EAAE,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;CACjH,MAAM,SAAS,GAAG,IAAIC,YAAoB,CAAC;CAC3C,IAAI;EACHC,IAAa,CAAC,WAAW,CAAC,OAAO,CAACC,GAAM,EAAE,EAAE,CAAC,CAAC,KAAK,CAACC,GAAM,CAAC,CAAC,CAAC;EAC7D,IAAI,gBAAgB,GAAG,SAAS,CAAC;EACjC,QAAQC,IAAa,EAAE,GAAG;GACzB,MAAM,IAAI,GAAGC,IAAa,EAAE,CAAC,OAAO,CAACpC,cAAiB,EAAE,EAAE,CAAC,CAAC;GAC5D,KAAK,IAAI,GAAG,EAAE,GAAG,CAAG;QACf,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAChC,KAAKqC,WAAmB,GAAG,EAAE,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7E;QACI,KAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAChC,MAAM,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,GAAGC,qBAAwB,CAAC,IAAI,CAAC,CAAC;IACpG,eAAe,GAAG,eAAe,IAAIzC,gBAAyB,CAAC,yDAAyD,CAACC,KAAc,EAAE,CAAC,CAAC;IAC3I,gBAAgB,GAAG,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;IACvE;QACI;IACJ,MAAMyC,OAAI,GAAG,YAAY,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAClD,KAAKA,OAAI,GAAG,EAAE,GAAG,CAAG;SACf,KAAKA,OAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KAChC,KAAKF,WAAmB,GAAG,EAAE,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAGE,OAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KAC7E;SACI,EAAE1C,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC,EAAE;IACrD;GACD;EACD;SACO;EACP0C,IAAa,EAAE,CAAC;EAChBC,KAAa,EAAE,CAAC;EAChB;CACD,OAAO,SAAS,CAAC;CACjB,AACD;AACA,SAAS,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE;CACxD,MAAM,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;CACvC,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;CACnC,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;CACzC,IAAI,SAAS,CAAC;CACd,KAAK,WAAW,GAAG;EAClB,IAAI,aAAa,CAAC;EAClB,KAAK,QAAQ,IAAI,KAAK,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAIZ,UAAmB,CAAC,qDAAqD,CAAC/B,KAAc,EAAE,CAAC,CAAC,EAAE;OACxK,EAAE,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE;EAC9C,aAAa,CAAC,IAAI,CAAC,SAAS,GAAG,IAAIiC,YAAoB,CAAC,CAAC;EACzD;MACI;EACJ,KAAK,QAAQ,IAAI,KAAK,GAAG;GACxBW,IAAY,IAAI,UAAU,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAIb,UAAmB,CAAC,gCAAgC,CAAC/B,KAAc,EAAE,CAAC,CAAC;GACtI,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;GAC7B;OACI,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,SAAS,GAAG,IAAIiC,YAAoB,CAAC,EAAE;EAChE;CACD,KAAKM,WAAmB,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;CACnF,OAAO,SAAS,CAAC;CACjB;;AAED,SAAS,SAAS,EAAE,OAAO,EAAE;CAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAACM,IAAO,CAAC,CAAC;CACpC,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI;EACzC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;EACxB,KAAK,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;OACzD,KAAK,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;GAC5C;EACD;CACD,OAAO,IAAI,CAAC;CACZ;;AAED,SAAS,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE;CACnC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;CACxB,IAAI,KAAK,GAAG,CAAC,CAAC;CACd,QAAQ,KAAK,CAAC,MAAM,GAAG;EACtB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;EAC1B,KAAK,GAAG,IAAI,KAAK,GAAG;GACnB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;GACnB,KAAK,OAAO,CAAC,KAAK,CAAC,GAAG;IACrB,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAId,UAAmB,CAAC,yDAAyD,CAAC/B,KAAc,EAAE,CAAC,CAAC;IAC1H;QACI,KAAK,OAAO,CAAC,KAAK,CAAC,GAAG;IAC1B,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI+B,UAAmB,CAAC,mDAAmD,CAAC/B,KAAc,EAAE,CAAC,CAAC;IACpH,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B;QACI,EAAE+B,UAAmB,CAAC,oDAAoD,CAAC/B,KAAc,EAAE,CAAC,CAAC,EAAE;GACpG;OACI;GACJ,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,IAAIiC,YAAoB,CAAC,CAAC;GAC9D,QAAQ,KAAK,CAAC,MAAM,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAIA,YAAoB,CAAC,CAAC,EAAE;GACnG,OAAO,KAAK,CAAC;GACb;EACD;CACD,OAAO,KAAK,CAAC;CACb;;AAED,SAAS,kBAAkB,EAAE,KAAK,EAAE,IAAI,EAAE;CACzC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;CACxB,IAAI,KAAK,GAAG,CAAC,CAAC;CACd,QAAQ,KAAK,CAAC,MAAM,GAAG;EACtB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;EAC1B,KAAK,GAAG,IAAI,KAAK,GAAG;GACnB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;GACnB,OAAO,CAAC,KAAK,CAAC,IAAIF,UAAmB,CAAC,uDAAuD,CAAC/B,KAAc,EAAE,CAAC,CAAC;GAChH,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI+B,UAAmB,CAAC,4DAA4D,CAAC/B,KAAc,EAAE,CAAC,CAAC;GAC7H;OACI;GACJ,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,IAAIiC,YAAoB,CAAC;GAC9C,QAAQ,KAAK,CAAC,MAAM,GAAG,EAAE,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAIA,YAAoB,CAAC,EAAE;GACnF,OAAO,KAAK,CAAC;GACb;EACD;CACD,OAAO,KAAK,CAAC;CACb;;AAED,SAAS,YAAY,EAAE,eAAe,EAAE,QAAQ,EAAE;CACjD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,GAAGa,mBAAsB,CAAC,QAAQ,CAAC,CAAC;CACnF,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;CAClC,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;CACpC,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;CACnC,MAAM,KAAK,GAAG,kBAAkB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;CAC/D,QAAQ,IAAI,KAAK,IAAIf,UAAmB,CAAC,mCAAmC,CAAC/B,KAAc,EAAE,CAAC,CAAC;CAC/F,SAAS,KAAK,CAAC,CAAC,CAAC;EAChB,KAAK,GAAG;GACP,QAAQ,GAAG,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACvD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACrD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACrD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACrD,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,yBAAyB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GAC7D,MAAM;EACP;GACC,IAAI,OAAO,CAAC;GACZ,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG+C,UAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAIhD,gBAAyB,CAACC,KAAc,EAAE,CAAC,GAAG;GAC3G,KAAK,CAAC,QAAQ,CAAC;IACd,OAAO,GAAG,MAAM,GAAG,IAAI,GAAG,OAAO,GAAG,OAAO,GAAG,KAAK;KAClD,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,CAAC,QAAQ;MAC5E,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,IAAI,OAAO,GAAG,MAAM,GAAG,GAAG;OAC5D,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC;QAC3H,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;SACxHgD,UAAkB,IAAI,OAAO,GAAG,MAAM,IAAIC,SAAiB,IAAI,OAAO,GAAG,KAAK,GAAG,IAAI;UACpFC,cAAsB,CAAC,OAAO,CAAC,CAAC;GACvC,MAAM;EACP;CACD,KAAK,MAAM,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;CACrE,KAAKX,WAAmB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;EACtD,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChD,OAAO,EAAE,CAAC;EACV;CACD,OAAO,QAAQ,CAAC;CAChB;;AAED,SAAS,mBAAmB,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;CACvD,IAAI,CAAC,CAAC;CACN,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG;EACzD,CAAC,GAAGY,cAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAIpD,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;EACnF,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ;CACD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC3B,CAAC,GAAGoD,yBAA4B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC/C,KAAK,CAAC,GAAG;EACRC,6BAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAItD,gBAAyB,CAAC,8FAA8F,CAACC,KAAc,EAAE,CAAC,CAAC;EAC1L,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ;CACD,KAAK,OAAO,GAAG;EACdqD,6BAAgC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAItD,gBAAyB,CAAC,8FAA8F,CAACC,KAAc,EAAE,CAAC,CAAC;EAC7L,OAAO,IAAIc,4BAAoC,CAAC;EAChD;CACD,MAAM,KAAK,GAAGK,IAAa,EAAE,CAAC;CAC9B,YAAY;EACX,MAAM,IAAI,GAAGC,IAAa,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;EACpD,CAAC,GAAGgC,yBAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5C,KAAK,CAAC,GAAG;GACRC,6BAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAItD,gBAAyB,CAAC,8FAA8F,CAACC,KAAc,EAAE,CAAC,CAAC;GAC1L,KAAK,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAC/B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;GACZ;EACD,OAAO,IAAI,IAAI,CAACc,4BAAoC,CAAC;EACrD;CACD;;AAED,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;CACrD,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG;EACzD,MAAM,CAAC,GAAGwC,iBAAoB,CAAC,OAAO,CAAC,CAAC;EACxC,KAAK,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ;CACD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC3B,MAAM,CAAC,GAAGC,8BAAiC,CAAC,OAAO,CAAC,CAAC;CACrD,KAAK,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG;EAC1CC,sCAAyC,CAAC,CAAC,CAAC,IAAIzD,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;EAC5F,KAAK,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;EACjC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAACE,cAAiB,EAAE,EAAE,CAAC,CAAC;EAChE;CACD,KAAK,OAAO,GAAG;EACd,OAAO,IAAI,IAAI,CAAC;EAChBsD,sCAAyC,CAAC,OAAO,CAAC,IAAIzD,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;EAClG;CACD,MAAM,KAAK,GAAGmB,IAAa,EAAE,CAAC;CAC9B,YAAY;EACX,IAAI,IAAI,GAAGC,IAAa,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;EAChD,MAAM,CAAC,GAAGmC,8BAAiC,CAAC,IAAI,CAAC,CAAC;EAClD,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG;GACvCC,sCAAyC,CAAC,CAAC,CAAC,IAAIzD,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;GAC5F,KAAK,CAAC,QAAQ,CAAC,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GAClD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAACE,cAAiB,EAAE,EAAE,CAAC,CAAC;GAC7D;EACD,IAAI,IAAI,IAAI,CAAC;EACbsD,sCAAyC,CAAC,IAAI,CAAC,IAAIzD,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;EAC/F,OAAO,IAAI,IAAI,CAAC;EAChB;CACD;;AAED,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;CACtD,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAIiC,YAAoB,CAAC;CAC/D,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAC7B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAChC,cAAiB,EAAE,EAAE,CAAC,CAAC;CACnD,KAAKwD,oDAA4D,GAAG;EACnE,MAAM,KAAK,GAAGtC,IAAa,EAAE,CAAC;EAC9B,YAAY;GACX,YAAY;IACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;SACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KACpC,KAAKoB,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KACtE;SACI,EAAE,MAAM,EAAE;IACf,QAAQ,GAAGnB,IAAa,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAAClB,cAAiB,EAAE,EAAE,CAAC,CAAC;IAC/E;GACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnF,QAAQ,GAAG,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;GAC/C,YAAY;IACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;SACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KACpC,KAAKsC,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KACtE;SACI,EAAE,MAAM,EAAE;IACf,QAAQ,GAAGnB,IAAa,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAAClB,cAAiB,EAAE,EAAE,CAAC,CAAC;IAC/E;GACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACvF;EACD;MACI;EACJ,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;EACnF,EAAE,QAAQ,GAAG,EAAE,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,MAAMF,gBAAyB,CAAC,uEAAuE,CAACC,KAAc,EAAE,CAAC,CAAC;EACrK,YAAY;GACX,QAAQ,GAAG,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;GAC/C,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACC,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnF,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAC/B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC;IACnD,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAIF,gBAAyB,CAAC,yFAAyF,CAACC,KAAc,EAAE,CAAC,CAAC;IAClK;GACD,EAAE,QAAQ,GAAG,EAAE,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,MAAMD,gBAAyB,CAAC,uEAAuE,CAACC,KAAc,EAAE,CAAC,CAAC;GACrK;EACD;CACD;;AAED,SAAS,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;CACtD,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;CACzC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAC7B,MAAM,KAAK,GAAGmB,IAAa,EAAE,CAAC;CAC9B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAClB,cAAiB,EAAE,EAAE,CAAC,CAAC;CACnD,YAAY;EACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;OACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GACpC,KAAKsC,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;GACtE;OACI,EAAE,MAAM,EAAE;EACf,QAAQ,GAAGnB,IAAa,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAAClB,cAAiB,EAAE,EAAE,CAAC,CAAC;EAC/E;CACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;CACnF,YAAY;EACX,QAAQ,GAAG,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;EAC7C,YAAY;GACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;QACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IACpC,KAAKsC,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IACtE;QACI,EAAE,MAAM,EAAE;GACf,QAAQ,GAAGnB,IAAa,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAAClB,cAAiB,EAAE,EAAE,CAAC,CAAC;GAC/E;EACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;GAC/B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC;GACnD,KAAKsC,WAAmB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IACtD,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrE,QAAQ,GAAG,EAAE,CAAC;IACd;GACD,YAAY;IACX,KAAK,QAAQ,GAAG,EAAE,GAAG,CAAG;SACnB,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;KACpC,KAAKA,WAAmB,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;KACtE;SACI,EAAE,MAAM,EAAE;IACf,QAAQ,GAAGnB,IAAa,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,OAAO,CAAClB,cAAiB,EAAE,EAAE,CAAC,CAAC;IAC/E;GACD,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACD,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnF;OACI;GACJ,KAAK,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,OAAO,CAACA,cAAiB,EAAE,EAAE,CAAC,CAAC,EAAE;GACnFF,gBAAyB,CAACC,KAAc,EAAE,CAAC,CAAC;GAC5C;EACD;CACD;;AAED,SAAS,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE;CACrC,MAAM,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CACzC,IAAI,IAAI,CAAC;CACT,KAAK,MAAM,GAAG;;EAEb,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG0D,WAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI3D,gBAAyB,CAACC,KAAc,EAAE,CAAC,GAAG;EAC5G,iBAAiB,CAAC,IAAI,CAAC,CAAC;EACxB;CACD,MAAM,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;CAClC,SAAS,QAAQ,CAAC,CAAC,CAAC;EACnB,KAAK,GAAG;GACP,QAAQ,GAAG,mBAAmB,CAAC2D,SAAiB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC9E,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAACA,SAAiB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC5E,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAACC,QAAgB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC3E,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,iBAAiB,CAACC,QAAgB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GAC3E,MAAM;EACP,KAAK,GAAG;GACP,QAAQ,GAAG,yBAAyB,CAACF,SAAiB,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;GACpF,MAAM;EACP;GACC,IAAI,OAAO,CAAC;GACZ,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAGZ,UAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAIhD,gBAAyB,CAACC,KAAc,EAAE,CAAC,GAAG;GAC9G,KAAK,OAAO,GAAG,MAAM,GAAG,EAAE8D,UAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;QAC5D,KAAK,OAAO,GAAG,OAAO,GAAG,EAAEA,UAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QACnE,KAAK,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,GAAG,EAAEC,QAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;QACtF,KAAK,OAAO,GAAG,MAAM,GAAG,EAAEA,QAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE;QACpE,KAAK,OAAO,GAAG,KAAK,IAAI,OAAO,GAAG,MAAM,IAAI,OAAO,GAAG,MAAM,GAAG,EAAEA,QAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QACrG,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;IAChHC,WAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACvD;QACI,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG;IACpHD,QAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C;QACI,KAAKf,UAAkB,IAAI,OAAO,GAAG,MAAM,IAAIC,SAAiB,IAAI,OAAO,GAAG,KAAK,GAAG,EAAEgB,OAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;QAC5H,EAAEC,UAAkB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAChB,cAAsB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;GACzE,MAAM;EACP;CACD,KAAK,MAAM,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;CACvE,KAAKX,WAAmB,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG;EACtD,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjD,OAAO,EAAE,CAAC;EACV;CACD,OAAO,QAAQ,CAAC;CAChB;;AChXD,MAAM,IAAI,GAAG;CACZ,KAAK;CACL,OAAO;CACP,IAAI,OAAO,CAAC,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE;CAC/B,CAAC;;;;",
	"sourcesContent":
		[
			"export default '0.5.54';",
			"export const {\n\tWeakSet, WeakMap, SyntaxError, RangeError, TypeError, Error, BigInt, Date, parseInt, Infinity, NaN, Map, RegExp, Proxy, Symbol,\n\tSymbol: { for: Symbol_for },\n\tArray: { isArray },\n\tString: { fromCodePoint },\n\tNumber: { isSafeInteger },\n\tObject: { create, getOwnPropertyNames },\n\tReflect: { getPrototypeOf },\n\tJSON: { stringify },\n\tBuffer: { isBuffer },\n} = global;",
			"import { SyntaxError, RangeError, TypeError, Error } from '../global.js';\n\nconst NONE = [];\nlet sourceLines = NONE;\nlet lastLineIndex = -1;\nlet lineIndex = -1;\n\nexport const from = array => {\n\tsourceLines = array;\n\tlastLineIndex = sourceLines.length-1;\n\tlineIndex = -1;\n};\n\nexport const done = () => { sourceLines = NONE; };\n\nexport const next = () => sourceLines[++lineIndex];\n\nexport const rest = () => lineIndex!==lastLineIndex;\n\nexport const mark = () => lineIndex;\n\nexport const must = (message, startIndex) => {\n\tif ( lineIndex===lastLineIndex ) {\n\t\tconst error = new SyntaxError(message+' is not close until the end of the file, which started from line '+( startIndex+1 )+': '+sourceLines[startIndex]);\n\t\terror.lineIndex = lineIndex;\n\t\t//done();\n\t\tthrow error;\n\t}\n\treturn sourceLines[++lineIndex];\n};\n\nexport const where = () => 'line '+( lineIndex+1 )+': '+sourceLines[lineIndex];\n\nexport const throwSyntaxError = message => throws(new SyntaxError(message));\n\nexport const throwRangeError = message => throws(new RangeError(message));\n\nexport const throwTypeError = message => throws(new TypeError(message));\n\nexport const throwError = message => throws(new Error(message));\n\nfunction throws (error) {\n\tif ( sourceLines!==NONE ) {\n\t\terror.lineIndex = lineIndex;\n\t\terror.lineNumber = lineIndex+1;\n\t\t//done();\n\t}\n\tthrow error;\n}\n",
			"import { create, WeakSet } from '../global.js';\n\nexport function Table () { }\nexport const OrderedTable = function Table () { return orderify(this); };\n\nOrderedTable.prototype = Table.prototype = create(null);\n\nexport const isTable = value => value instanceof Table;\n\nexport const closeTables = new WeakSet;\nexport const openTables = new WeakSet;\n",
			"\n/* types */\n\nconst _29_ = /(?:0[1-9]|1\\d|2[0-9])/;\nconst _30_ = /(?:0[1-9]|[12]\\d|30)/;\nconst _31_ = /(?:0[1-9]|[12]\\d|3[01])/;\nconst _23_ = /(?:[01]\\d|2[0-3])/;\nconst _59_ = /[0-5]\\d/;\nconst YMD = /\\d\\d\\d\\d-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|02-(?:0[1-9]|1\\d|2[0-9]))/;\nconst T = /[T ]/;\nconst HMS = /(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?/;\nconst Z = /Z|[+-](?:[01]\\d|2[0-3]):[0-5]\\d/;\nexport const DATETIME = /^(?:(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?|(\\d\\d\\d\\d-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|02-(?:0[1-9]|1\\d|2[0-9])))(?:([T ])((?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.\\d+)?)(Z|[+-](?:[01]\\d|2[0-3]):[0-5]\\d)?)?)$/;\n\n/* parser */\n\nconst Whitespace = /[ \\t]/;\n\nexport const PRE_WHITESPACE = /^[ \\t]+/;\nexport const KEYS = /[\\w-]+|\"(?:[^\\\\\"]+|\\\\[^])*\"|'[^']*'/g;\nexport const VALUE_REST = /^((?:\\d\\d\\d\\d-\\d\\d-\\d\\d \\d)?[\\w\\-+.:]+)[ \\t]*([^]*)$/;\nexport const LITERAL_STRING = /^'([^'\\x00-\\x08\\x0B-\\x1F\\x7F]*)'[ \\t]*([^]*)/;\nexport const MULTI_LINE_LITERAL_STRING = /^([^]*?)'''(?!')[ \\t]*([^]*)/;\nexport const CONTROL_CHARACTER_EXCLUDE_TAB = /[\\x00-\\x08\\x0B-\\x1F\\x7F]/;\nexport const ESCAPED_IN_MULTI_LINE = /\\n|\\\\(?:([ \\n]+)|([\\\\\"])|([btnfr])|u([^]{4})|U([^]{8}))/g;\nexport const SYM_WHITESPACE = /^[^][ \\t]*/;\n\nexport const _VALUE_PAIR = /^!!([\\w-]*)[ \\t]+([^ \\t#][^]*)$/;\n\n/* parser-extension */\n\nconst String_ = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"/;\nconst KeyValuePairs = /(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*/;\nconst NonEmptyObject = /{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/;\nconst Object = /{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/;\nconst StringOrArray = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+]/;\nconst RegExpContent = /(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+/;\nconst Rule = /\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)/;\n\nexport const SUB = /{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}/g;\nexport const DELIMITER_CHECK = /[^`]/;\nexport const INTERPOLATION = /\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)/g;\nexport const INTERPOLATIONS = /^(?:\\([ \\t]*(?:\\/(?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+\\/[a-z]*[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])[ \\t]*|(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*)\\)[ \\t]*)*[ \\t]*([^]*)$/;\nexport const INTERPOLATION_TOKEN = /'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"/g;\nexport const REGEXP_MODE = /^\\([ \\t]*\\//;\nexport const PATTERN_FLAGS_REPLACER = /\\/((?:[^\\\\[/]+|\\[(?:[^\\\\\\]]+|\\\\[^])*]|\\\\[^])+)\\/([a-z]*)[ \\t]*=[ \\t]*('[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\"|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*}|\\[[ \\t]+(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:{[ \\t]*}|{[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*(?:,[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*=[ \\t]*(?:'[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*)*})[ \\t]*)+])/;\nexport const WHOLE_AND_SUBS = /('[^']*'|\"(?:[^\\\\\"]+|\\\\[^])*\")[ \\t]*([^]*)/;\nexport const DOLLAR = /\\$(?:[1-9]\\d?|\\$)/g;\n",
			"import * as iterator from './iterator.js';\nimport * as RE from './RE-higher.js?<RegExp>';\n\n/* parser */\n\nconst MULTI_LINE_BASIC_STRING = /^(?:[^\\\\\"]+|\\\\[^]|\"\"?(?!\"))/;\nexport function MULTI_LINE_BASIC_STRING_exec_0 (_) {\n\tfor ( let _0 = ''; ; ) {\n\t\tif ( _==='' ) { return _0; }\n\t\tconst $ = MULTI_LINE_BASIC_STRING.exec(_);\n\t\tif ( $===null ) { return _0; }\n\t\t_0 += $[0];\n\t\t_ = _.slice($[0].length);\n\t}\n}\n\nconst ESCAPED_EXCLUDE_CONTROL_CHARACTER = /[^\\\\\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\ \\n]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/g;\nexport function ESCAPED_EXCLUDE_CONTROL_CHARACTER_test (_) {\n\treturn _.replace(ESCAPED_EXCLUDE_CONTROL_CHARACTER, '')==='';\n}\n\nconst BASIC_STRING = /^(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))/;\nexport function BASIC_STRING_exec (_2) {\n\t_2 = _2.slice(1);\n\tfor ( let _1 = ''; ; ) {\n\t\tconst $ = BASIC_STRING.exec(_2);\n\t\tif ( $===null ) {\n\t\t\t_2.startsWith('\"') || iterator.throwSyntaxError(iterator.where());\n\t\t\treturn { 1: _1, 2: _2.replace(RE.SYM_WHITESPACE, '') };\n\t\t}\n\t\t_1 += $[0];\n\t\t_2 = _2.slice($[0].length);\n\t}\n}\n\nconst BARE_KEY = /^[\\w-]+/;\nconst LITERAL_KEY = /^'[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*'/;\nconst DOT_KEY = /^[ \\t]*\\.[ \\t]*/;\n\nexport function TABLE_DEFINITION_exec (_) {\n\tconst _1 = _.charAt(1)==='[';\n\t_ = _.slice(_1 ? 2 : 1).replace(RE.PRE_WHITESPACE, '');\n\tconst _2 = getKeys(_);\n\t_ = _.slice(_2.length).replace(RE.PRE_WHITESPACE, '');\n\t_.startsWith(']') || iterator.throwSyntaxError(iterator.where());\n\tconst _3 = _.charAt(1)===']';\n\t_ = _.slice(_3 ? 2 : 1).replace(RE.PRE_WHITESPACE, '');\n\t_==='' || _.startsWith('#') || iterator.throwSyntaxError(iterator.where());\n\treturn { 1: _1, 2: _2, 3: _3, 4: _ };\n}\n\nconst KEY_VALUE_PAIR = /^[ \\t]*=[ \\t]*(!!([\\w-]*)[ \\t]+)?([^ \\t#][^]*)$/;\nexport function KEY_VALUE_PAIR_exec (_) {\n\tconst _1 = getKeys(_);\n\tconst $ = KEY_VALUE_PAIR.exec(_.slice(_1.length)) || iterator.throwSyntaxError(iterator.where());\n\treturn { 1: _1, 2: $[1], 3: $[2], 4: $[3] };\n}\n\nfunction getKeys (_) {\n\tfor ( let keys = ''; ; ) {\n\t\tif ( _.startsWith('\"') ) {\n\t\t\t_ = _.slice(1);\n\t\t\tfor ( let key = '\"'; ; ) {\n\t\t\t\tconst $ = BASIC_STRING.exec(_);\n\t\t\t\tif ( $===null ) {\n\t\t\t\t\t_.startsWith('\"') || iterator.throwSyntaxError(iterator.where());\n\t\t\t\t\t_ = _.slice(1);\n\t\t\t\t\tkeys += key+'\"';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_ = _.slice($[0].length);\n\t\t\t\tkey += $[0];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst key = ( ( _.startsWith(\"'\") ? LITERAL_KEY : BARE_KEY ).exec(_) || iterator.throwSyntaxError(iterator.where()) )[0];\n\t\t\t_ = _.slice(key.length);\n\t\t\tkeys += key;\n\t\t}\n\t\tconst $ = DOT_KEY.exec(_);\n\t\tif ( $===null ) { return keys; }\n\t\t_ = _.slice($[0].length);\n\t\tkeys += $[0];\n\t}\n}\n",
			"export * from './RE-higher.js?<RegExp>';\nexport * from './RE-never-slow-nor-overflow.js';\n\n/* types */\n\nexport const ESCAPED_IN_SINGLE_LINE = /\\\\(?:([\\\\\"])|([btnfr])|u(.{4})|U(.{8}))/g;\n\nexport const UNDERSCORES = /_/g;\n\nexport const XOB_INTEGER = /^0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|o[0-7]+(?:_[0-7]+)*|b[01]+(?:_[01]+)*$/;\nexport const INTEGER = /^[-+]?[1-9]\\d*(?:_\\d+)*$/;\n\nexport const FLOAT = /^[-+]?(?:0|[1-9]\\d*(?:_\\d+)*)(?:\\.\\d+(?:_\\d+)*)?(?:[eE][-+]?\\d+(?:_\\d+)*)?$/;\nexport const FLOAT_NOT_INTEGER = /[.eE]/;\n\nexport const INDEX = /^(?:[1-9]\\d*|0)$/;\n\n/* parser */\n\nexport const BOM = /^\\uFEFF/;\nexport const EOL = /\\r?\\n/;\n",
			"import { Symbol, Date } from '../global.js';\nimport * as RE from '../share/RE.js';\nimport * as iterator from '../share/iterator.js';\n\nconst literal_cache = Symbol('literal_cache');\nconst value_cache = Symbol('value_cache');\n\nexport class Datetime extends Date {\n\t\n\tconstructor (literal) {\n\t\tconst [hms_ms = '', YMD = '', T = '', HMS_MS = hms_ms, Z = ''] = RE.DATETIME.exec(literal) || iterator.throwSyntaxError('Invalid Datetime '+literal+' at '+iterator.where());\n\t\tsuper(\n\t\t\tZ ? YMD+'T'+HMS_MS+Z :\n\t\t\t\tT ? YMD+'T'+HMS_MS :\n\t\t\t\t\tYMD ? YMD+'T00:00:00.000'\n\t\t\t\t\t\t: '1970-01-01T'+HMS_MS\n\t\t);\n\t\tthis.type =\n\t\t\tZ ? 'Offset Date-Time' :\n\t\t\t\tT ? 'Local Date-Time' :\n\t\t\t\t\tYMD ? 'Local Date'\n\t\t\t\t\t\t: 'Local Time';\n\t\tthis[literal_cache] = literal;\n\t\tthis[value_cache] = this.getTime();\n\t}\n\t\n\t//static isDatetime (value) { return value instanceof Datetime; }\n\t\n\t//toJSON () { return this.toISOString(); }\n\ttoISOString () {\n\t\tif ( this.getTime()===this[value_cache] ) { return this[literal_cache]; }\n\t\tthrow new Error('Datetime value has been modified.');\n\t}\n\t\n}\n",
			"import * as RE from '../share/RE.js';\n//import { Infinity, NaN } from '../global.js';\nimport * as iterator from '../share/iterator.js';\n\nexport const Float = literal => {\n\tif ( RE.FLOAT.test(literal) && RE.FLOAT_NOT_INTEGER.test(literal) ) {\n\t\treturn +literal.replace(RE.UNDERSCORES, '');\n\t\t//const number = +literal.replace(RE.UNDERSCORES, '');\n\t\t//isFinite(number) || iterator.throwRangeError('Float can not be as big as Infinity, like '+literal+' at '+where());\n\t\t//return number;\n\t}\n\t//if ( literal==='inf' || literal==='+inf' ) { return Infinity; }\n\t//if ( literal==='-inf' ) { return -Infinity; }\n\t//if ( literal==='nan' || literal==='+nan' || literal==='-nan' ) { return NaN; }\n\titerator.throwSyntaxError('Invalid Float '+literal+' at '+iterator.where());\n};\n",
			"import * as RE from '../share/RE.js';\nimport * as iterator from '../share/iterator.js';\nimport * as options from '../share/options.js';\nimport { isSafeInteger, BigInt } from '../global.js';\n\nexport const NumberInteger = (literal) => {\n\tif ( literal==='0' || literal==='+0' || literal==='-0' ) { return 0; }\n\t( literal.charAt(0)==='0' ? RE.XOB_INTEGER : RE.INTEGER ).test(literal)\n\t|| iterator.throwSyntaxError('Invalid Integer '+literal+' at '+iterator.where());\n\tconst number = +literal.replace(RE.UNDERSCORES, '');\n\toptions.allowLonger\n\t|| isSafeInteger(number)\n\t|| iterator.throwRangeError('Integer did not use BitInt must be Number.isSafeInteger, not includes '+literal+' meet at '+iterator.where());\n\treturn number;\n};\n\nexport const BigIntInteger = (literal) => {\n\tif ( literal==='0' || literal==='+0' || literal==='-0' ) { return 0n; }\n\t( literal.charAt(0)==='0' ? RE.XOB_INTEGER : RE.INTEGER ).test(literal) || iterator.throwSyntaxError('Invalid Integer '+literal+' at '+iterator.where());\n\tconst bigInt = BigInt(literal.replace(RE.UNDERSCORES, ''));\n\toptions.allowLonger\n\t|| -9223372036854775808n<=bigInt && bigInt<=9223372036854775807n// ( min = -(2n**(64n-1n)) || ~max ) <= long <= ( max = 2n**(64n-1n)-1n || ~min )\n\t|| iterator.throwRangeError('Integer expect 64 bit range (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807), not includes '+literal+' meet at '+iterator.where());\n\treturn bigInt;\n};\n\nexport const DependInteger = (literal) => {\n\tconst bigInt = BigIntInteger(literal);\n\treturn options.IntegerMin<=bigInt && bigInt<=options.IntegerMax ? +( bigInt+'' ) : bigInt;\n};\n",
			"import { WeakSet, create, Error, getOwnPropertyNames, getPrototypeOf, stringify, TypeError, isSafeInteger, RangeError, Proxy, WeakMap } from '../global.js';\nimport { Table, OrderedTable } from '../types/Table.js';\nimport { BigIntInteger, NumberInteger, DependInteger } from '../types/Integer.js';\nimport * as iterator from './iterator.js';\n\nexport const FUNCTION = new WeakSet;\nexport const unType = array => array;\nexport const { asInlineArrayOfNulls, asInlineArrayOfStrings, asInlineArrayOfTables, asInlineArrayOfArrays, asInlineArrayOfBooleans, asInlineArrayOfFloats, asInlineArrayOfDatetimes, asInlineArrayOfIntegers } = new Proxy(new WeakMap, {\n\tget: arrayTypes => function typify (array) {\n\t\tif ( arrayTypes.has(array) ) {\n\t\t\tarrayTypes.get(array)===typify\n\t\t\t|| iterator.throwTypeError('Types in array must be same. Check '+iterator.where());\n\t\t}\n\t\telse { arrayTypes.set(array, typify); }\n\t\treturn array;\n\t}\n});\n\nexport let useWhatToJoinMultiLineString;\nexport let IntegerDepends, IntegerMin, IntegerMax;\nexport let TableDepends;\nexport let open;\nexport let allowLonger;\nexport let keepComment;\nexport let enableNull;\nexport let enableNil;\nexport let allowInlineTableMultiLineAndTrailingCommaEvenNoComma;\nexport let enableInterpolationString;\nexport let asNulls, asStrings, asTables, asArrays, asBooleans, asFloats, asDatetimes, asIntegers;\nexport let customConstructors;\n\nexport function use (useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger, extensionOptions) {\n\tif ( typeof useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines!=='string' ) { throw new TypeError('TOML.parse(,,multiLineJoiner)'); }\n\tif ( useBigInt_forInteger===true ) { IntegerDepends = BigIntInteger; }\n\telse if ( useBigInt_forInteger===false ) { IntegerDepends = NumberInteger; }\n\telse {\n\t\tif ( typeof useBigInt_forInteger!=='number' ) { throw new TypeError('TOML.parse(,,,useBigInt)'); }\n\t\tif ( !isSafeInteger(useBigInt_forInteger) ) { throw new RangeError('TOML.parse(...useBigInt)'); }\n\t\tIntegerDepends = DependInteger;\n\t\tif ( useBigInt_forInteger>=0 ) {\n\t\t\tIntegerMax = useBigInt_forInteger;\n\t\t\tIntegerMin = -useBigInt_forInteger;\n\t\t}\n\t\telse {\n\t\t\tIntegerMin = useBigInt_forInteger;\n\t\t\tIntegerMax = -useBigInt_forInteger-1;\n\t\t}\n\t}\n\tuseWhatToJoinMultiLineString = useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines;\n\tlet typify;\n\tif ( extensionOptions===null ) {\n\t\tTableDepends = Table;\n\t\topen = allowLonger = keepComment = enableNull = enableNil = allowInlineTableMultiLineAndTrailingCommaEvenNoComma = enableInterpolationString = false;\n\t\tcustomConstructors = null;\n\t\ttypify = true;\n\t}\n\telse {\n\t\tTableDepends = extensionOptions.order ? OrderedTable : Table;\n\t\topen = !!extensionOptions.open;\n\t\tallowLonger = !!extensionOptions.longer;\n\t\tkeepComment = !!extensionOptions.hash;\n\t\tenableNull = !!extensionOptions.null;\n\t\tenableNil = !!extensionOptions.nil;\n\t\tallowInlineTableMultiLineAndTrailingCommaEvenNoComma = !!extensionOptions.multi;\n\t\tenableInterpolationString = !!extensionOptions.ins;\n\t\ttypify = !extensionOptions.mix;\n\t\tcustomConstructors = extensionOptions.new || null;\n\t\tif ( customConstructors!==null ) {\n\t\t\tif ( typeof customConstructors==='function' ) {\n\t\t\t\tif ( typify ) {\n\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\tthrow new Error('TOML.parse(,,,,{ mix:false, new(){} })');\n\t\t\t\t}\n\t\t\t\tif ( customConstructors.length!==2 ) { throw new Error('TOML.parse(,,,,xOptions.new.length)'); }\n\t\t\t\tFUNCTION.add(customConstructors);\n\t\t\t}\n\t\t\telse if ( typeof customConstructors==='object' ) {\n\t\t\t\tif ( typify ) {\n\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\tthrow new Error('TOML.parse(,,,,{ mix:false, new:{} })');\n\t\t\t\t}\n\t\t\t\tif ( getPrototypeOf(customConstructors)===null ) {\n\t\t\t\t\tfor ( const type of getOwnPropertyNames(customConstructors) ) {\n\t\t\t\t\t\tif ( typeof customConstructors[type]!=='function' ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new TypeError('TOML.parse(,,,,xOptions.new['+stringify(type)+'])');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( customConstructors[type].length ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new Error('TOML.parse(,,,,xOptions.new['+stringify(type)+'].length)');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst origin = customConstructors;\n\t\t\t\t\tcustomConstructors = create(null);\n\t\t\t\t\tfor ( const type of getOwnPropertyNames(origin) ) {\n\t\t\t\t\t\tconst customConstructor = origin[type];\n\t\t\t\t\t\tif ( typeof customConstructor!=='function' ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new TypeError('TOML.parse(,,,,xOptions.new['+stringify(type)+'])');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( customConstructors[type].length ) {\n\t\t\t\t\t\t\tcustomConstructors = null;\n\t\t\t\t\t\t\tthrow new Error('TOML.parse(,,,,xOptions.new['+stringify(type)+'].length)');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomConstructors[type] = customConstructor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { throw new TypeError('TOML.parse(,,,,xOptions.new)'); }\n\t\t}\n\t}\n\tif ( typify ) {\n\t\tasNulls = asInlineArrayOfNulls;\n\t\tasStrings = asInlineArrayOfStrings;\n\t\tasTables = asInlineArrayOfTables;\n\t\tasArrays = asInlineArrayOfArrays;\n\t\tasBooleans = asInlineArrayOfBooleans;\n\t\tasFloats = asInlineArrayOfFloats;\n\t\tasDatetimes = asInlineArrayOfDatetimes;\n\t\tasIntegers = asInlineArrayOfIntegers;\n\t}\n\telse { asNulls = asStrings = asTables = asArrays = asBooleans = asFloats = asDatetimes = asIntegers = unType; }\n}\n\nexport function clear () {\n\tcustomConstructors = null;\n}\n",
			"import { parseInt, fromCodePoint } from '../global.js';\nimport * as iterator from '../share/iterator.js';\nimport * as options from '../share/options.js';\nimport * as RE from '../share/RE.js';\n\nconst ESCAPE_ALIAS = { b: '\\b', t: '\\t', n: '\\n', f: '\\f', r: '\\r' };\n\nconst unEscapeSingleLine = ($0, $1, $2, $3, $4) => {\n\tif ( $1 ) { return $1; }\n\tif ( $2 ) { return ESCAPE_ALIAS[$2]; }\n\tconst codePoint = parseInt($3 || $4, 16);\n\t( 0xD7FF<codePoint && codePoint<0xE000 || 0x10FFFF<codePoint )\n\t&& iterator.throwRangeError('Invalid Unicode Scalar '+( $3 ? '\\\\u'+$3 : '\\\\U'+$4 )+' at '+iterator.where());\n\treturn fromCodePoint(codePoint);\n};\n\nconst unEscapeMultiLine = ($0, $1, $2, $3, $4, $5) => {\n\tif ( $0==='\\n' ) { return options.useWhatToJoinMultiLineString; }\n\tif ( $1 ) {\n\t\t$1.includes('\\n')\n\t\t|| iterator.throwSyntaxError('Back slash leading whitespaces can only appear at the end of a line, but see '+iterator.where());\n\t\treturn '';\n\t}\n\tif ( $2 ) { return $2; }\n\tif ( $3 ) { return ESCAPE_ALIAS[$3]; }\n\tconst codePoint = parseInt($4 || $5, 16);\n\t( 0xD7FF<codePoint && codePoint<0xE000 || 0x10FFFF<codePoint )\n\t&& iterator.throwRangeError('Invalid Unicode Scalar '+( $4 ? '\\\\u'+$4 : '\\\\U'+$5 )+' at '+iterator.where());\n\treturn fromCodePoint(codePoint);\n};\n\nexport const BasicString = literal => literal.replace(RE.ESCAPED_IN_SINGLE_LINE, unEscapeSingleLine);\n\nexport const MultiLineBasicString = literal => literal.replace(RE.ESCAPED_IN_MULTI_LINE, unEscapeMultiLine);\n",
			"import { Map, RegExp } from './global.js';\nimport * as iterator from './share/iterator.js';\nimport * as options from './share/options.js';\nimport { BasicString } from './types/String.js';\nimport * as RE from './share/RE.js';\n\nexport function assignInterpolationString (table, finalKey, delimiter) {\n\toptions.enableInterpolationString || iterator.throwSyntaxError(iterator.where());\n\tRE.DELIMITER_CHECK.test(delimiter) && iterator.throwSyntaxError('Interpolation String opening tag incorrect at '+iterator.where());\n\tlet string;\n\tlet lineRest;\n\t{\n\t\tconst literals = [];\n\t\tfor ( const start = iterator.mark(); ; ) {\n\t\t\tconst literal = iterator.must('Interpolation String', start);\n\t\t\tif ( literal.startsWith(delimiter) ) {\n\t\t\t\tlineRest = literal.slice(delimiter.length).replace(RE.PRE_WHITESPACE, '');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tliterals.push(literal);\n\t\t}\n\t\tstring = literals.join('\\n');\n\t}\n\tif ( lineRest.startsWith('(') ) {\n\t\tconst interpolations_rest = RE.INTERPOLATIONS.exec(lineRest) || iterator.throwSyntaxError(iterator.where());\n\t\tlineRest = interpolations_rest[2];\n\t\tfor ( const interpolation of interpolations_rest[1].match(RE.INTERPOLATION) ) {\n\t\t\tif ( RE.REGEXP_MODE.test(interpolation) ) {\n\t\t\t\tconst { 1: pattern, 2: flags, 3: Replacer } = RE.PATTERN_FLAGS_REPLACER.exec(interpolation);\n\t\t\t\tconst search = newRegExp(pattern, flags) || iterator.throwSyntaxError('Invalid regExp at '+iterator.where());\n\t\t\t\tlet replacer;\n\t\t\t\tswitch ( Replacer[0] ) {\n\t\t\t\t\tcase \"'\":\n\t\t\t\t\t\treplacer = Replacer.slice(1, -1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '\"':\n\t\t\t\t\t\treplacer = BasicString(Replacer.slice(1, -1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tconst map = newMap(Replacer, true);\n\t\t\t\t\t\treplacer = $0 => map.has($0) ? map.get($0) : $0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tconst { 1: whole, 2: subs } = RE.WHOLE_AND_SUBS.exec(Replacer);\n\t\t\t\t\t\tconst maps = [null];\n\t\t\t\t\t\tfor ( const sub of subs.match(RE.SUB) ) { maps.push(newMap(sub, true)); }\n\t\t\t\t\t\treplacer = (...args) => whole.replace(RE.DOLLAR, $n => {\n\t\t\t\t\t\t\tif ( $n==='$$' ) { return '$'; }\n\t\t\t\t\t\t\tconst n = $n.slice(1);\n\t\t\t\t\t\t\tconst arg = args[n] || '';\n\t\t\t\t\t\t\tconst map = maps[n];\n\t\t\t\t\t\t\treturn map && map.has(arg) ? map.get(arg) : arg;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstring = string.replace(search, replacer);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst map = newMap(interpolation, false);\n\t\t\t\tlet round = '';\n\t\t\t\touter: for ( let length = string.length, index = 0; index<length; ) {\n\t\t\t\t\tfor ( const { 0: search, 1: replacer } of map ) {\n\t\t\t\t\t\tif ( string.startsWith(search, index) ) {\n\t\t\t\t\t\t\tround += replacer;\n\t\t\t\t\t\t\tindex += search.length;\n\t\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tround += string[index];\n\t\t\t\t\t++index;\n\t\t\t\t}\n\t\t\t\tstring = round;\n\t\t\t}\n\t\t}\n\t}\n\ttable[finalKey] = string;\n\treturn lineRest;\n}\n\nfunction newMap (interpolation, usedForRegExp) {\n\tconst map = new Map;\n\tconst tokens = interpolation.match(RE.INTERPOLATION_TOKEN);\n\tfor ( let length = tokens.length, index = 0; index<length; ) {\n\t\tlet search = tokens[index++];\n\t\tsearch = search[0]===\"'\" ? search.slice(1, -1) : BasicString(search.slice(1, -1));\n\t\tusedForRegExp\n\t\t|| search\n\t\t|| iterator.throwSyntaxError('Characters to replace can not be empty, which was found at '+iterator.where());\n\t\tmap.has(search)\n\t\t&& iterator.throwSyntaxError('Duplicate '+( usedForRegExp ? 'replacer' : 'characters to replace' )+' at '+iterator.where());\n\t\tlet replacer = tokens[index++];\n\t\treplacer = replacer[0]===\"'\" ? replacer.slice(1, -1) : BasicString(replacer.slice(1, -1));\n\t\tmap.set(search, replacer);\n\t}\n\treturn map;\n}\n\nfunction newRegExp (pattern, flags) {\n\ttry { return new RegExp(pattern, flags); }\n\tcatch (error) { return null; }\n}\n\nexport function ensureConstructor (type) {\n\toptions.customConstructors\n\t|| iterator.throwSyntaxError(iterator.where());\n\toptions.FUNCTION.has(options.customConstructors)\n\t|| type in options.customConstructors\n\t|| iterator.throwError(iterator.where());\n}\n\nexport function construct (type, value) {\n\treturn options.FUNCTION.has(options.customConstructors) ? options.customConstructors(type, value) : options.customConstructors[type](value);\n}\n",
			"import { Error, TypeError, Infinity, NaN, isArray, Symbol_for, isBuffer, Symbol } from './global.js';\nimport * as iterator from './share/iterator.js';\nimport { isTable, closeTables, openTables } from './types/Table.js';\nimport { Datetime } from './types/Datetime.js';\nimport { Float } from './types/Float.js';\nimport { BasicString, MultiLineBasicString } from './types/String.js';\nimport * as options from './share/options.js';\nimport * as RE from './share/RE.js';\nimport { assignInterpolationString, ensureConstructor, construct } from './parser-extension.js';\n\nexport default function parse (toml_source, toml_version, useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger = true, extensionOptions = null) {\n\tif ( isBuffer(toml_source) ) { toml_source = toml_source.toString(); }\n\tif ( typeof toml_source!=='string' ) { throw new TypeError('TOML.parse(source)'); }\n\tif ( toml_version!==0.5 ) { throw new Error('TOML.parse(,version)'); }\n\toptions.use(useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger, extensionOptions);\n\tconst rootTable = new options.TableDepends;\n\ttry {\n\t\titerator.from(toml_source.replace(RE.BOM, '').split(RE.EOL));\n\t\tlet lastSectionTable = rootTable;\n\t\twhile ( iterator.rest() ) {\n\t\t\tconst line = iterator.next().replace(RE.PRE_WHITESPACE, '');\n\t\t\tif ( line==='' ) { }\n\t\t\telse if ( line.startsWith('#') ) {\n\t\t\t\tif ( options.keepComment ) { lastSectionTable[Symbol('#')] = line.slice(1); }\n\t\t\t}\n\t\t\telse if ( line.startsWith('[') ) {\n\t\t\t\tconst { 1: $_asArrayItem$$, 2: keys, 3: $$asArrayItem$_, 4: hash } = RE.TABLE_DEFINITION_exec(line);\n\t\t\t\t$_asArrayItem$$===$$asArrayItem$_ || iterator.throwSyntaxError('Square brackets of table define statement not match at '+iterator.where());\n\t\t\t\tlastSectionTable = appendTable(rootTable, keys, $_asArrayItem$$, hash);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst rest = assignInline(lastSectionTable, line);\n\t\t\t\tif ( rest==='' ) { }\n\t\t\t\telse if ( rest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { lastSectionTable[Symbol('#')] = rest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { iterator.throwSyntaxError(iterator.where()); }\n\t\t\t}\n\t\t}\n\t}\n\tfinally {\n\t\titerator.done();\n\t\toptions.clear();\n\t}\n\treturn rootTable;\n};\n\nfunction appendTable (table, key_key, asArrayItem, hash) {\n\tconst leadingKeys = parseKeys(key_key);\n\tconst finalKey = leadingKeys.pop();\n\ttable = prepareTable(table, leadingKeys);\n\tlet lastTable;\n\tif ( asArrayItem ) {\n\t\tlet arrayOfTables;\n\t\tif ( finalKey in table ) { closeTables.has(arrayOfTables = table[finalKey]) && iterator.throwError('Trying to push Table to non-ArrayOfTables value at '+iterator.where()); }\n\t\telse { arrayOfTables = table[finalKey] = []; }\n\t\tarrayOfTables.push(lastTable = new options.TableDepends);\n\t}\n\telse {\n\t\tif ( finalKey in table ) {\n\t\t\toptions.open && openTables.has(lastTable = table[finalKey]) || iterator.throwError('Duplicate Table definition at '+iterator.where());\n\t\t\topenTables.delete(lastTable);\n\t\t}\n\t\telse { table[finalKey] = lastTable = new options.TableDepends; }\n\t}\n\tif ( options.keepComment && hash ) { table[Symbol_for(finalKey)] = hash.slice(1); }\n\treturn lastTable;\n}\n\nfunction parseKeys (key_key) {\n\tconst keys = key_key.match(RE.KEYS);\n\tfor ( let index = keys.length; index--; ) {\n\t\tconst key = keys[index];\n\t\tif ( key.startsWith(\"'\") ) { keys[index] = key.slice(1, -1); }\n\t\telse if ( key.startsWith('\"') ) {\n\t\t\tkeys[index] = BasicString(key.slice(1, -1));\n\t\t}\n\t}\n\treturn keys;\n}\n\nfunction prepareTable (table, keys) {\n\tconst { length } = keys;\n\tlet index = 0;\n\twhile ( index<length ) {\n\t\tconst key = keys[index++];\n\t\tif ( key in table ) {\n\t\t\ttable = table[key];\n\t\t\tif ( isTable(table) ) {\n\t\t\t\tcloseTables.has(table) && iterator.throwError('Trying to define table through static Inline Object at '+iterator.where());\n\t\t\t}\n\t\t\telse if ( isArray(table) ) {\n\t\t\t\tcloseTables.has(table) && iterator.throwError('Trying to append value to static Inline Array at '+iterator.where());\n\t\t\t\ttable = table[table.length-1];\n\t\t\t}\n\t\t\telse { iterator.throwError('Trying to define table through non-Table value at '+iterator.where()); }\n\t\t}\n\t\telse {\n\t\t\topenTables.add(table = table[key] = new options.TableDepends);\n\t\t\twhile ( index<length ) { openTables.add(table = table[keys[index++]] = new options.TableDepends); }\n\t\t\treturn table;\n\t\t}\n\t}\n\treturn table;\n}\n\nfunction prepareInlineTable (table, keys) {\n\tconst { length } = keys;\n\tlet index = 0;\n\twhile ( index<length ) {\n\t\tconst key = keys[index++];\n\t\tif ( key in table ) {\n\t\t\ttable = table[key];\n\t\t\tisTable(table) || iterator.throwError('Trying to assign property through non-Table value at '+iterator.where());\n\t\t\tcloseTables.has(table) && iterator.throwError('Trying to assign property through static Inline Object at '+iterator.where());\n\t\t}\n\t\telse {\n\t\t\ttable = table[key] = new options.TableDepends;\n\t\t\twhile ( index<length ) { table = table[keys[index++]] = new options.TableDepends; }\n\t\t\treturn table;\n\t\t}\n\t}\n\treturn table;\n}\n\nfunction assignInline (lastInlineTable, lineRest) {\n\tconst { 1: left, 2: custom, 3: type, 4: right } = RE.KEY_VALUE_PAIR_exec(lineRest);\n\tcustom && ensureConstructor(type);\n\tconst leadingKeys = parseKeys(left);\n\tconst finalKey = leadingKeys.pop();\n\tconst table = prepareInlineTable(lastInlineTable, leadingKeys);\n\tfinalKey in table && iterator.throwError('Duplicate property definition at '+iterator.where());\n\tswitch ( right[0] ) {\n\t\tcase \"'\":\n\t\t\tlineRest = assignLiteralString(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '\"':\n\t\t\tlineRest = assignBasicString(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '{':\n\t\t\tlineRest = assignInlineTable(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '[':\n\t\t\tlineRest = assignInlineArray(table, finalKey, right);\n\t\t\tbreak;\n\t\tcase '`':\n\t\t\tlineRest = assignInterpolationString(table, finalKey, right);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tlet literal;\n\t\t\t( { 1: literal, 2: lineRest } = RE.VALUE_REST.exec(right) || iterator.throwSyntaxError(iterator.where()) );\n\t\t\ttable[finalKey] =\n\t\t\t\tliteral==='true' ? true : literal==='false' ? false :\n\t\t\t\t\tliteral==='inf' || literal==='+inf' ? Infinity : literal==='-inf' ? -Infinity :\n\t\t\t\t\t\tliteral==='nan' || literal==='+nan' || literal==='-nan' ? NaN :\n\t\t\t\t\t\t\tliteral.includes(':') || literal.indexOf('-')!==literal.lastIndexOf('-') && !literal.startsWith('-') ? new Datetime(literal) :\n\t\t\t\t\t\t\t\tliteral.includes('.') || ( literal.includes('e') || literal.includes('E') ) && !literal.startsWith('0x') ? Float(literal) :\n\t\t\t\t\t\t\t\t\toptions.enableNull && literal==='null' || options.enableNil && literal==='nil' ? null :\n\t\t\t\t\t\t\t\t\t\toptions.IntegerDepends(literal);\n\t\t\tbreak;\n\t}\n\tif ( custom ) { table[finalKey] = construct(type, table[finalKey]); }\n\tif ( options.keepComment && lineRest.startsWith('#') ) {\n\t\ttable[Symbol_for(finalKey)] = lineRest.slice(1);\n\t\treturn '';\n\t}\n\treturn lineRest;\n}\n\nfunction assignLiteralString (table, finalKey, literal) {\n\tlet $;\n\tif ( literal.charAt(1)!==\"'\" || literal.charAt(2)!==\"'\" ) {\n\t\t$ = RE.LITERAL_STRING.exec(literal) || iterator.throwSyntaxError(iterator.where());\n\t\ttable[finalKey] = $[1];\n\t\treturn $[2];\n\t}\n\tliteral = literal.slice(3);\n\t$ = RE.MULTI_LINE_LITERAL_STRING.exec(literal);\n\tif ( $ ) {\n\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test($[1]) && iterator.throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+iterator.where());\n\t\ttable[finalKey] = $[1];\n\t\treturn $[2];\n\t}\n\tif ( literal ) {\n\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test(literal) && iterator.throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+iterator.where());\n\t\tliteral += options.useWhatToJoinMultiLineString;\n\t}\n\tconst start = iterator.mark();\n\tfor ( ; ; ) {\n\t\tconst line = iterator.must('Literal String', start);\n\t\t$ = RE.MULTI_LINE_LITERAL_STRING.exec(line);\n\t\tif ( $ ) {\n\t\t\tRE.CONTROL_CHARACTER_EXCLUDE_TAB.test($[1]) && iterator.throwSyntaxError('Control characters other than tab are not permitted in a Literal String, which was found at '+iterator.where());\n\t\t\ttable[finalKey] = literal+$[1];\n\t\t\treturn $[2];\n\t\t}\n\t\tliteral += line+options.useWhatToJoinMultiLineString;\n\t}\n}\n\nfunction assignBasicString (table, finalKey, literal) {\n\tif ( literal.charAt(1)!=='\"' || literal.charAt(2)!=='\"' ) {\n\t\tconst $ = RE.BASIC_STRING_exec(literal);\n\t\ttable[finalKey] = BasicString($[1]);\n\t\treturn $[2];\n\t}\n\tliteral = literal.slice(3);\n\tconst $ = RE.MULTI_LINE_BASIC_STRING_exec_0(literal);\n\tif ( literal.startsWith('\"\"\"', $.length) ) {\n\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test($) || iterator.throwSyntaxError(iterator.where());\n\t\ttable[finalKey] = BasicString($);\n\t\treturn literal.slice($.length+3).replace(RE.PRE_WHITESPACE, '');\n\t}\n\tif ( literal ) {\n\t\tliteral += '\\n';\n\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test(literal) || iterator.throwSyntaxError(iterator.where());\n\t}\n\tconst start = iterator.mark();\n\tfor ( ; ; ) {\n\t\tlet line = iterator.must('Basic String', start);\n\t\tconst $ = RE.MULTI_LINE_BASIC_STRING_exec_0(line);\n\t\tif ( line.startsWith('\"\"\"', $.length) ) {\n\t\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test($) || iterator.throwSyntaxError(iterator.where());\n\t\t\ttable[finalKey] = MultiLineBasicString(literal+$);\n\t\t\treturn line.slice($.length+3).replace(RE.PRE_WHITESPACE, '');\n\t\t}\n\t\tline += '\\n';\n\t\tRE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test(line) || iterator.throwSyntaxError(iterator.where());\n\t\tliteral += line;\n\t}\n}\n\nfunction assignInlineTable (table, finalKey, lineRest) {\n\tconst inlineTable = table[finalKey] = new options.TableDepends;\n\tcloseTables.add(inlineTable);\n\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\tif ( options.allowInlineTableMultiLineAndTrailingCommaEvenNoComma ) {\n\t\tconst start = iterator.mark();\n\t\tfor ( ; ; ) {\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineRest==='' ) { }\n\t\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { break; }\n\t\t\t\tlineRest = iterator.must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tlineRest = assignInline(inlineTable, lineRest);\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineRest==='' ) { }\n\t\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { break; }\n\t\t\t\tlineRest = iterator.must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith(',') ) { lineRest = lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t}\n\t}\n\telse {\n\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t( lineRest==='' || lineRest.startsWith('#') ) && iterator.throwSyntaxError('Inline Table is intended to appear on a single line, which broken at '+iterator.where());\n\t\tfor ( ; ; ) {\n\t\t\tlineRest = assignInline(inlineTable, lineRest);\n\t\t\tif ( lineRest.startsWith('}') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\tif ( lineRest.startsWith(',') ) {\n\t\t\t\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\t\t\t\tlineRest.startsWith('}') && iterator.throwSyntaxError('The last property of an Inline Table can not have a trailing comma, which was found at '+iterator.where());\n\t\t\t}\n\t\t\t( lineRest==='' || lineRest.startsWith('#') ) && iterator.throwSyntaxError('Inline Table is intended to appear on a single line, which broken at '+iterator.where());\n\t\t}\n\t}\n}\n\nfunction assignInlineArray (table, finalKey, lineRest) {\n\tconst inlineArray = table[finalKey] = [];\n\tcloseTables.add(inlineArray);\n\tconst start = iterator.mark();\n\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\tfor ( ; ; ) {\n\t\tif ( lineRest==='' ) { }\n\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t}\n\t\telse { break; }\n\t\tlineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t}\n\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\tfor ( ; ; ) {\n\t\tlineRest = pushInline(inlineArray, lineRest);\n\t\tfor ( ; ; ) {\n\t\t\tif ( lineRest==='' ) { }\n\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t}\n\t\t\telse { break; }\n\t\t\tlineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t\t}\n\t\tif ( lineRest.startsWith(',') ) {\n\t\t\tlineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n\t\t\tif ( options.keepComment && lineRest.startsWith('#') ) {\n\t\t\t\tinlineArray[Symbol_for(inlineArray.length-1+'')] = lineRest.slice(1);\n\t\t\t\tlineRest = '';\n\t\t\t}\n\t\t\tfor ( ; ; ) {\n\t\t\t\tif ( lineRest==='' ) { }\n\t\t\t\telse if ( lineRest.startsWith('#') ) {\n\t\t\t\t\tif ( options.keepComment ) { table[Symbol('#')] = lineRest.slice(1); }\n\t\t\t\t}\n\t\t\t\telse { break; }\n\t\t\t\tlineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n\t\t\t}\n\t\t\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t}\n\t\telse {\n\t\t\tif ( lineRest.startsWith(']') ) { return lineRest.replace(RE.SYM_WHITESPACE, ''); }\n\t\t\titerator.throwSyntaxError(iterator.where());\n\t\t}\n\t}\n}\n\nfunction pushInline (array, lineRest) {\n\tconst custom = lineRest.startsWith('!!');\n\tlet type;\n\tif ( custom ) {\n\t\t//options.typify && iterator.throwSyntaxError('Only mixable arrays could contain custom type. Check '+iterator.where());\n\t\t( { 1: type, 2: lineRest } = RE._VALUE_PAIR.exec(lineRest) || iterator.throwSyntaxError(iterator.where()) );\n\t\tensureConstructor(type);\n\t}\n\tconst lastIndex = ''+array.length;\n\tswitch ( lineRest[0] ) {\n\t\tcase \"'\":\n\t\t\tlineRest = assignLiteralString(options.asStrings(array), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '\"':\n\t\t\tlineRest = assignBasicString(options.asStrings(array), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '{':\n\t\t\tlineRest = assignInlineTable(options.asTables(array), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '[':\n\t\t\tlineRest = assignInlineArray(options.asArrays(array), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tcase '`':\n\t\t\tlineRest = assignInterpolationString(options.asStrings(array), lastIndex, lineRest);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tlet literal;\n\t\t\t( { 1: literal, 2: lineRest } = RE.VALUE_REST.exec(lineRest) || iterator.throwSyntaxError(iterator.where()) );\n\t\t\tif ( literal==='true' ) { options.asBooleans(array).push(true); }\n\t\t\telse if ( literal==='false' ) { options.asBooleans(array).push(false); }\n\t\t\telse if ( literal==='inf' || literal==='+inf' ) { options.asFloats(array).push(Infinity); }\n\t\t\telse if ( literal==='-inf' ) { options.asFloats(array).push(-Infinity); }\n\t\t\telse if ( literal==='nan' || literal==='+nan' || literal==='-nan' ) { options.asFloats(array).push(NaN); }\n\t\t\telse if ( literal.includes(':') || literal.indexOf('-')!==literal.lastIndexOf('-') && !literal.startsWith('-') ) {\n\t\t\t\toptions.asDatetimes(array).push(new Datetime(literal));\n\t\t\t}\n\t\t\telse if ( literal.includes('.') || ( literal.includes('e') || literal.includes('E') ) && !literal.startsWith('0x') ) {\n\t\t\t\toptions.asFloats(array).push(Float(literal));\n\t\t\t}\n\t\t\telse if ( options.enableNull && literal==='null' || options.enableNil && literal==='nil' ) { options.asNulls(array).push(null); }\n\t\t\telse { options.asIntegers(array).push(options.IntegerDepends(literal)); }\n\t\t\tbreak;\n\t}\n\tif ( custom ) { array[lastIndex] = construct(type, array[lastIndex]); }\n\tif ( options.keepComment && lineRest.startsWith('#') ) {\n\t\tarray[Symbol_for(lastIndex)] = lineRest.slice(1);\n\t\treturn '';\n\t}\n\treturn lineRest;\n}\n",
			"import version from './version?text';\nimport parse from './parser.js';\n\nconst TOML = {\n\tparse,\n\tversion,\n\tget default () { return this; }\n};\n\nexport default TOML;\n"
		]
}