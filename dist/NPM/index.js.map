{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","share/RE/native.ts","../../j-regexp/dist/ESM/j-regexp!meta.js","../../j-regexp/src/export.ts","../../j-regexp/dist/ESM/j-regexp!.js","share/RE/nested (readable).ts","share/RE/optimized (avoid overflow or lost).ts","share/iterator.ts","../../j-orderify/dist/ESM/j-orderify!meta.js","../../j-orderify/src/export.ts","../../j-orderify/dist/ESM/j-orderify!.js","types/Table.ts","types/Integer.ts","share/options.ts","types/Datetime.ts","types/Float.ts","types/String.ts","parse/on-the-spot.ts","parse/x-feature.ts","parse/level-loop.ts","parse.ts","default.ts"],
	"names":
		["iterator.throws","iterator.where","RE.SYM_WHITESPACE","RE.PRE_WHITESPACE","RE.TAG_REST","RE.KEY_VALUE_PAIR","RE.EOL","RE.XOB_INTEGER","RE.INTEGER","RE.UNDERSCORES","options.allowLonger","options.IntegerMin","options.IntegerMax","iterator.done","RE.DATETIME","RE.FLOAT","RE.FLOAT_NOT_INTEGER","options.useWhatToJoinMultiLineString","RE.ESCAPED_IN_SINGLE_LINE","RE.ESCAPED_IN_MULTI_LINE","options.collect","options.TableDepends","options.open","RE.KEYS","RE.LITERAL_STRING","RE.MULTI_LINE_LITERAL_STRING","iterator.mark","iterator.must","RE.CONTROL_CHARACTER_EXCLUDE_TAB","RE.BASIC_STRING_exec","RE.MULTI_LINE_BASIC_STRING_exec_0","RE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test","options.enableInterpolationString","iterator.rest","iterator.next","RE.TABLE_DEFINITION_exec_groups","iterator.stacks_length","iterator.stacks_pop","RE.KEY_VALUE_PAIR_exec_groups","iterator.stacks_push","RE.VALUE_REST","options.enableNull","options.IntegerDepends","RE._VALUE_PAIR","options.asStrings","options.asTables","options.asArrays","options.asBooleans","options.asFloats","options.asDatetimes","options.asNulls","options.asIntegers","options.allowInlineTableMultiLineAndTrailingCommaEvenNoComma","iterator.stacks_insertBeforeLast","iterator.could","RE.BOM","RE.NON_SCALAR","options.use","iterator.todo","options.process","options.clear"],
	"mappings":
		"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",
	"sourcesContent":
		[
			"export default '0.5.69';",
			"/* types */\nexport const ESCAPED_IN_SINGLE_LINE = /\\\\(?:([\\\\\"])|([btnfr])|u(.{4})|U(.{8}))/g;\nexport const UNDERSCORES = /_/g;\nexport const XOB_INTEGER = /^0x[0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|o[0-7]+(?:_[0-7]+)*|b[01]+(?:_[01]+)*$/;\nexport const INTEGER = /^[-+]?[1-9]\\d*(?:_\\d+)*$/;\nexport const FLOAT = /^[-+]?(?:0|[1-9]\\d*(?:_\\d+)*)(?:\\.\\d+(?:_\\d+)*)?(?:[eE][-+]?\\d+(?:_\\d+)*)?$/;\nexport const FLOAT_NOT_INTEGER = /[.eE]/;\n/* parse */\nexport const NON_SCALAR = /[\\uD800-\\uDFFF]/u; // \\u{10FFFF}- > \\uFFFD\nexport const BOM = /^\\uFEFF/;\nexport const EOL = /\\r?\\n/;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxXQUFXO0FBRVgsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsMENBQTBDLENBQUM7QUFFakYsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQztBQUVoQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsMEVBQTBFLENBQUM7QUFDdEcsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLDBCQUEwQixDQUFDO0FBRWxELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyw2RUFBNkUsQ0FBQztBQUNuRyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUM7QUFFekMsV0FBVztBQUVYLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxrQkFBa0IsQ0FBQyxDQUFBLHVCQUF1QjtBQUNwRSxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDO0FBQzdCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIHR5cGVzICovXG5cbmV4cG9ydCBjb25zdCBFU0NBUEVEX0lOX1NJTkdMRV9MSU5FID0gL1xcXFwoPzooW1xcXFxcIl0pfChbYnRuZnJdKXx1KC57NH0pfFUoLns4fSkpL2c7XG5cbmV4cG9ydCBjb25zdCBVTkRFUlNDT1JFUyA9IC9fL2c7XG5cbmV4cG9ydCBjb25zdCBYT0JfSU5URUdFUiA9IC9eMHhbMC05QS1GYS1mXSsoPzpfWzAtOUEtRmEtZl0rKSp8b1swLTddKyg/Ol9bMC03XSspKnxiWzAxXSsoPzpfWzAxXSspKiQvO1xuZXhwb3J0IGNvbnN0IElOVEVHRVIgPSAvXlstK10/WzEtOV1cXGQqKD86X1xcZCspKiQvO1xuXG5leHBvcnQgY29uc3QgRkxPQVQgPSAvXlstK10/KD86MHxbMS05XVxcZCooPzpfXFxkKykqKSg/OlxcLlxcZCsoPzpfXFxkKykqKT8oPzpbZUVdWy0rXT9cXGQrKD86X1xcZCspKik/JC87XG5leHBvcnQgY29uc3QgRkxPQVRfTk9UX0lOVEVHRVIgPSAvWy5lRV0vO1xuXG4vKiBwYXJzZSAqL1xuXG5leHBvcnQgY29uc3QgTk9OX1NDQUxBUiA9IC9bXFx1RDgwMC1cXHVERkZGXS91Oy8vIFxcdXsxMEZGRkZ9LSA+IFxcdUZGRkRcbmV4cG9ydCBjb25zdCBCT00gPSAvXlxcdUZFRkYvO1xuZXhwb3J0IGNvbnN0IEVPTCA9IC9cXHI/XFxuLztcbiJdfQ==",
			"/*!\n * 模块名称：@ltd/j-regexp\n * 模块功能：可读性更好的正则表达式创建方式。\n   　　　　　More readable way for creating RegExp.\n * 模块版本：1.0.0\n * 许可条款：LGPL-3.0\n * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)\n * 问题反馈：https://GitHub.com/LongTengDao/j-regexp/issues\n * 项目主页：https://GitHub.com/LongTengDao/j-regexp/\n */",
			"import version from './version?text';\nexport { version };\nimport RegExp from '.RegExp';\nimport slice from '.Array.prototype.slice';\nvar NT = /[\\n\\t]/g;\nfunction Source(raw, substitutions) {\n    var source = raw[0];\n    for (var length = substitutions.length, index = 0; index < length;) {\n        var substitution = substitutions[index];\n        source += (typeof substitution === 'string' ? substitution : substitution.source) + raw[++index];\n    }\n    return source.replace(NT, '');\n}\nfunction newRegExp(template) {\n    return RegExp(Source(template.raw, slice.call(arguments, 1)));\n}\nexport { newRegExp };\nexport function NewRegExp(flags) {\n    return function newRegExp(template) {\n        return RegExp(Source(template.raw, slice.call(arguments, 1)), flags);\n    };\n}\nvar jRegExp = {\n    newRegExp: newRegExp,\n    NewRegExp: NewRegExp,\n    version: version\n};\njRegExp['default'] = jRegExp;\nexport default jRegExp;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cG9ydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE9BQU8sTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUM7QUFFbkIsT0FBTyxNQUFNLE1BQU0sU0FBUyxDQUFDO0FBQzdCLE9BQU8sS0FBSyxNQUFNLHdCQUF3QixDQUFDO0FBRTNDLElBQUksRUFBRSxHQUFHLFNBQVMsQ0FBQztBQUVuQixTQUFTLE1BQU0sQ0FBRSxHQUFHLEVBQUUsYUFBYTtJQUNsQyxJQUFJLE1BQU0sR0FBVyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUIsS0FBTSxJQUFJLE1BQU0sR0FBVyxhQUFhLENBQUMsTUFBTSxFQUFFLEtBQUssR0FBVyxDQUFDLEVBQUUsS0FBSyxHQUFDLE1BQU0sR0FBSTtRQUNuRixJQUFJLFlBQVksR0FBb0IsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pELE1BQU0sSUFBSSxDQUFFLE9BQU8sWUFBWSxLQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFFLEdBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDL0Y7SUFDRCxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQy9CLENBQUM7QUFHRCxTQUFTLFNBQVMsQ0FBRSxRQUE4QjtJQUNqRCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0QsQ0FBQztBQUNELE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQztBQUVyQixNQUFNLFVBQVUsU0FBUyxDQUFFLEtBQWE7SUFDdkMsT0FBTyxTQUFTLFNBQVMsQ0FBRSxRQUE4QjtRQUN4RCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3RFLENBQUMsQ0FBQztBQUNILENBQUM7QUFFRCxJQUFJLE9BQU8sR0FBRztJQUNiLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLE9BQU8sRUFBRSxPQUFPO0NBQ2hCLENBQUM7QUFDRixPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsT0FBTyxDQUFDO0FBQzdCLGVBQWUsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZlcnNpb24gZnJvbSAnLi92ZXJzaW9uP3RleHQnO1xuZXhwb3J0IHsgdmVyc2lvbiB9O1xuXG5pbXBvcnQgUmVnRXhwIGZyb20gJy5SZWdFeHAnO1xuaW1wb3J0IHNsaWNlIGZyb20gJy5BcnJheS5wcm90b3R5cGUuc2xpY2UnO1xuXG52YXIgTlQgPSAvW1xcblxcdF0vZztcblxuZnVuY3Rpb24gU291cmNlIChyYXcsIHN1YnN0aXR1dGlvbnMpIDpzdHJpbmcge1xuXHR2YXIgc291cmNlIDpzdHJpbmcgPSByYXdbMF07XG5cdGZvciAoIHZhciBsZW5ndGggOm51bWJlciA9IHN1YnN0aXR1dGlvbnMubGVuZ3RoLCBpbmRleCA6bnVtYmVyID0gMDsgaW5kZXg8bGVuZ3RoOyApIHtcblx0XHR2YXIgc3Vic3RpdHV0aW9uIDpzdHJpbmcgfCBSZWdFeHAgPSBzdWJzdGl0dXRpb25zW2luZGV4XTtcblx0XHRzb3VyY2UgKz0gKCB0eXBlb2Ygc3Vic3RpdHV0aW9uPT09J3N0cmluZycgPyBzdWJzdGl0dXRpb24gOiBzdWJzdGl0dXRpb24uc291cmNlICkrcmF3WysraW5kZXhdO1xuXHR9XG5cdHJldHVybiBzb3VyY2UucmVwbGFjZShOVCwgJycpO1xufVxuXG5mdW5jdGlvbiBuZXdSZWdFeHAgKHRlbXBsYXRlIDpUZW1wbGF0ZVN0cmluZ3NBcnJheSwgLi4uc3Vic3RpdHV0aW9ucyA6KCBzdHJpbmcgfCBSZWdFeHAgKVtdKSA6UmVnRXhwO1xuZnVuY3Rpb24gbmV3UmVnRXhwICh0ZW1wbGF0ZSA6VGVtcGxhdGVTdHJpbmdzQXJyYXkpIDpSZWdFeHAge1xuXHRyZXR1cm4gUmVnRXhwKFNvdXJjZSh0ZW1wbGF0ZS5yYXcsIHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSkpO1xufVxuZXhwb3J0IHsgbmV3UmVnRXhwIH07XG5cbmV4cG9ydCBmdW5jdGlvbiBOZXdSZWdFeHAgKGZsYWdzIDpzdHJpbmcpIDp0eXBlb2YgbmV3UmVnRXhwIHtcblx0cmV0dXJuIGZ1bmN0aW9uIG5ld1JlZ0V4cCAodGVtcGxhdGUgOlRlbXBsYXRlU3RyaW5nc0FycmF5KSA6UmVnRXhwIHtcblx0XHRyZXR1cm4gUmVnRXhwKFNvdXJjZSh0ZW1wbGF0ZS5yYXcsIHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSksIGZsYWdzKTtcblx0fTtcbn1cblxudmFyIGpSZWdFeHAgPSB7XG5cdG5ld1JlZ0V4cDogbmV3UmVnRXhwLFxuXHROZXdSZWdFeHA6IE5ld1JlZ0V4cCxcblx0dmVyc2lvbjogdmVyc2lvblxufTtcbmpSZWdFeHBbJ2RlZmF1bHQnXSA9IGpSZWdFeHA7XG5leHBvcnQgZGVmYXVsdCBqUmVnRXhwO1xuIl19",
			"﻿import './j-regexp!meta.js';\nexport * from '../../src/export';\n/*¡ @ltd/j-regexp */",
			"import { newRegExp } from '@ltd/j-regexp';\n/* types */\nconst _29_ = /(?:0[1-9]|1\\d|2[0-9])/;\nconst _30_ = /(?:0[1-9]|[12]\\d|30)/;\nconst _31_ = /(?:0[1-9]|[12]\\d|3[01])/;\nconst _23_ = /(?:[01]\\d|2[0-3])/;\nconst _59_ = /[0-5]\\d/;\nconst YMD = newRegExp `\n\t\\d\\d\\d\\d-\n\t(?:\n\t\t(?:0[13578]|1[02])-${_31_}\n\t|\n\t\t(?:0[469]|11)-${_30_}\n\t|\n\t\t02-${_29_}\n\t)`;\nconst T = /[T ]/;\nconst HMS = newRegExp `\n\t${_23_}:${_59_}:${_59_}(?:\\.\\d+)?`;\nconst Z = newRegExp `\n\t\tZ\n\t|\n\t\t[+-]${_23_}:${_59_}`;\nexport const DATETIME = newRegExp `\n\t^\n\t(?:\n\t\t${HMS}\n\t|\n\t\t(${YMD})\n\t\t(?:\n\t\t\t(${T})\n\t\t\t(${HMS})\n\t\t\t(${Z})?\n\t\t)?\n\t)\n\t$`;\n/* parse */\nconst Whitespace = /[ \\t]/;\nexport const PRE_WHITESPACE = newRegExp `\n\t^${Whitespace}+`;\nexport const KEYS = /[\\w-]+|\"(?:[^\\\\\"]+|\\\\[^])*\"|'[^']*'/g;\nexport const VALUE_REST = newRegExp `\n\t^\n\t(\n\t\t(?:\\d\\d\\d\\d-\\d\\d-\\d\\d \\d)?\n\t\t[\\w\\-+.:]+\n\t)\n\t${Whitespace}*\n\t([^]*)\n\t$`;\nexport const LITERAL_STRING = newRegExp `\n\t^\n\t'([^'\\x00-\\x08\\x0B-\\x1F\\x7F]*)'\n\t${Whitespace}*\n\t([^]*)`;\nexport const MULTI_LINE_LITERAL_STRING = newRegExp `\n\t^\n\t([^]*?)\n\t'''\n\t${Whitespace}*\n\t([^]*)`;\nexport const CONTROL_CHARACTER_EXCLUDE_TAB = /[\\x00-\\x08\\x0B-\\x1F\\x7F]/;\nexport const ESCAPED_IN_MULTI_LINE = /\\n|\\\\(?:([ \\n]+)|([\\\\\"])|([btnfr])|u([^]{4})|U([^]{8}))/g;\nexport const SYM_WHITESPACE = newRegExp `\n\t^\n\t[^]\n\t${Whitespace}*`;\nconst Tag = /[^()\\\\\"'`\\r\\n\\u2028\\u2029]+/;\nexport const KEY_VALUE_PAIR = newRegExp `\n\t^\n\t${Whitespace}*\n\t(?:\n\t\t\\((${Tag})\\)\n\t\t${Whitespace}*\n\t)?\n\t=\n\t${Whitespace}*\n\t(?:\n\t\t\\((${Tag})\\)\n\t\t${Whitespace}*\n\t)?\n\t(\n\t\t[^ \\t#]\n\t\t[^]*\n\t)\n\t$`;\nexport const _VALUE_PAIR = newRegExp `\n\t^\n\t\\((${Tag})\\)\n\t${Whitespace}*\n\t([^ \\t#][^]*)\n\t$`;\nexport const TAG_REST = newRegExp `\n\t^\n\t\\((${Tag})\\)\n\t${Whitespace}*\n\t([^]*)\n\t$`;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5lc3RlZCAocmVhZGFibGUpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsV0FBVztBQUVYLE1BQU0sSUFBSSxHQUFHLHVCQUF1QixDQUFDO0FBQ3JDLE1BQU0sSUFBSSxHQUFHLHNCQUFzQixDQUFDO0FBQ3BDLE1BQU0sSUFBSSxHQUFHLHlCQUF5QixDQUFDO0FBQ3ZDLE1BQU0sSUFBSSxHQUFHLG1CQUFtQixDQUFDO0FBQ2pDLE1BQU0sSUFBSSxHQUFHLFNBQVMsQ0FBQztBQUV2QixNQUFNLEdBQUcsR0FBRyxTQUFTLENBQUE7Ozt1QkFHRSxJQUFJOztrQkFFVCxJQUFJOztPQUVmLElBQUk7R0FDUixDQUFDO0FBRUosTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDO0FBRWpCLE1BQU0sR0FBRyxHQUFHLFNBQVMsQ0FBQTtHQUNsQixJQUFJLElBQUksSUFBSSxJQUFJLElBQUksWUFBWSxDQUFDO0FBRXBDLE1BQU0sQ0FBQyxHQUFHLFNBQVMsQ0FBQTs7O1FBR1gsSUFBSSxJQUFJLElBQUksRUFBRSxDQUFDO0FBRXZCLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUE7OztJQUc3QixHQUFHOztLQUVGLEdBQUc7O01BRUYsQ0FBQztNQUNELEdBQUc7TUFDSCxDQUFDOzs7R0FHSixDQUFDO0FBRUosV0FBVztBQUVYLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQztBQUUzQixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFBO0lBQ25DLFVBQVUsR0FBRyxDQUFDO0FBRWxCLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxzQ0FBc0MsQ0FBQztBQUUzRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFBOzs7Ozs7R0FNaEMsVUFBVTs7R0FFVixDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQTs7O0dBR3BDLFVBQVU7UUFDTCxDQUFDO0FBRVQsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsU0FBUyxDQUFBOzs7O0dBSS9DLFVBQVU7UUFDTCxDQUFDO0FBRVQsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQUcsMEJBQTBCLENBQUM7QUFFeEUsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsMERBQTBELENBQUM7QUFFaEcsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQTs7O0dBR3BDLFVBQVUsR0FBRyxDQUFDO0FBR2pCLE1BQU0sR0FBRyxHQUFHLDZCQUE2QixDQUFDO0FBRTFDLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxTQUFTLENBQUE7O0dBRXBDLFVBQVU7O09BRU4sR0FBRztJQUNOLFVBQVU7OztHQUdYLFVBQVU7O09BRU4sR0FBRztJQUNOLFVBQVU7Ozs7OztHQU1YLENBQUM7QUFFSixNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFBOztNQUU5QixHQUFHO0dBQ04sVUFBVTs7R0FFVixDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLFNBQVMsQ0FBQTs7TUFFM0IsR0FBRztHQUNOLFVBQVU7O0dBRVYsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5ld1JlZ0V4cCB9IGZyb20gJ0BsdGQvai1yZWdleHAnO1xuXG4vKiB0eXBlcyAqL1xuXG5jb25zdCBfMjlfID0gLyg/OjBbMS05XXwxXFxkfDJbMC05XSkvO1xuY29uc3QgXzMwXyA9IC8oPzowWzEtOV18WzEyXVxcZHwzMCkvO1xuY29uc3QgXzMxXyA9IC8oPzowWzEtOV18WzEyXVxcZHwzWzAxXSkvO1xuY29uc3QgXzIzXyA9IC8oPzpbMDFdXFxkfDJbMC0zXSkvO1xuY29uc3QgXzU5XyA9IC9bMC01XVxcZC87XG5cbmNvbnN0IFlNRCA9IG5ld1JlZ0V4cGBcblx0XFxkXFxkXFxkXFxkLVxuXHQoPzpcblx0XHQoPzowWzEzNTc4XXwxWzAyXSktJHtfMzFffVxuXHR8XG5cdFx0KD86MFs0NjldfDExKS0ke18zMF99XG5cdHxcblx0XHQwMi0ke18yOV99XG5cdClgO1xuXG5jb25zdCBUID0gL1tUIF0vO1xuXG5jb25zdCBITVMgPSBuZXdSZWdFeHBgXG5cdCR7XzIzX306JHtfNTlffToke181OV99KD86XFwuXFxkKyk/YDtcblxuY29uc3QgWiA9IG5ld1JlZ0V4cGBcblx0XHRaXG5cdHxcblx0XHRbKy1dJHtfMjNffToke181OV99YDtcblxuZXhwb3J0IGNvbnN0IERBVEVUSU1FID0gbmV3UmVnRXhwYFxuXHReXG5cdCg/OlxuXHRcdCR7SE1TfVxuXHR8XG5cdFx0KCR7WU1EfSlcblx0XHQoPzpcblx0XHRcdCgke1R9KVxuXHRcdFx0KCR7SE1TfSlcblx0XHRcdCgke1p9KT9cblx0XHQpP1xuXHQpXG5cdCRgO1xuXG4vKiBwYXJzZSAqL1xuXG5jb25zdCBXaGl0ZXNwYWNlID0gL1sgXFx0XS87XG5cbmV4cG9ydCBjb25zdCBQUkVfV0hJVEVTUEFDRSA9IG5ld1JlZ0V4cGBcblx0XiR7V2hpdGVzcGFjZX0rYDtcblxuZXhwb3J0IGNvbnN0IEtFWVMgPSAvW1xcdy1dK3xcIig/OlteXFxcXFwiXSt8XFxcXFteXSkqXCJ8J1teJ10qJy9nO1xuXG5leHBvcnQgY29uc3QgVkFMVUVfUkVTVCA9IG5ld1JlZ0V4cGBcblx0XlxuXHQoXG5cdFx0KD86XFxkXFxkXFxkXFxkLVxcZFxcZC1cXGRcXGQgXFxkKT9cblx0XHRbXFx3XFwtKy46XStcblx0KVxuXHQke1doaXRlc3BhY2V9KlxuXHQoW15dKilcblx0JGA7XG5cbmV4cG9ydCBjb25zdCBMSVRFUkFMX1NUUklORyA9IG5ld1JlZ0V4cGBcblx0XlxuXHQnKFteJ1xceDAwLVxceDA4XFx4MEItXFx4MUZcXHg3Rl0qKSdcblx0JHtXaGl0ZXNwYWNlfSpcblx0KFteXSopYDtcblxuZXhwb3J0IGNvbnN0IE1VTFRJX0xJTkVfTElURVJBTF9TVFJJTkcgPSBuZXdSZWdFeHBgXG5cdF5cblx0KFteXSo/KVxuXHQnJydcblx0JHtXaGl0ZXNwYWNlfSpcblx0KFteXSopYDtcblxuZXhwb3J0IGNvbnN0IENPTlRST0xfQ0hBUkFDVEVSX0VYQ0xVREVfVEFCID0gL1tcXHgwMC1cXHgwOFxceDBCLVxceDFGXFx4N0ZdLztcblxuZXhwb3J0IGNvbnN0IEVTQ0FQRURfSU5fTVVMVElfTElORSA9IC9cXG58XFxcXCg/OihbIFxcbl0rKXwoW1xcXFxcIl0pfChbYnRuZnJdKXx1KFteXXs0fSl8VShbXl17OH0pKS9nO1xuXG5leHBvcnQgY29uc3QgU1lNX1dISVRFU1BBQ0UgPSBuZXdSZWdFeHBgXG5cdF5cblx0W15dXG5cdCR7V2hpdGVzcGFjZX0qYDtcblxuXG5jb25zdCBUYWcgPSAvW14oKVxcXFxcIidgXFxyXFxuXFx1MjAyOFxcdTIwMjldKy87XG5cbmV4cG9ydCBjb25zdCBLRVlfVkFMVUVfUEFJUiA9IG5ld1JlZ0V4cGBcblx0XlxuXHQke1doaXRlc3BhY2V9KlxuXHQoPzpcblx0XHRcXCgoJHtUYWd9KVxcKVxuXHRcdCR7V2hpdGVzcGFjZX0qXG5cdCk/XG5cdD1cblx0JHtXaGl0ZXNwYWNlfSpcblx0KD86XG5cdFx0XFwoKCR7VGFnfSlcXClcblx0XHQke1doaXRlc3BhY2V9KlxuXHQpP1xuXHQoXG5cdFx0W14gXFx0I11cblx0XHRbXl0qXG5cdClcblx0JGA7XG5cbmV4cG9ydCBjb25zdCBfVkFMVUVfUEFJUiA9IG5ld1JlZ0V4cGBcblx0XlxuXHRcXCgoJHtUYWd9KVxcKVxuXHQke1doaXRlc3BhY2V9KlxuXHQoW14gXFx0I11bXl0qKVxuXHQkYDtcblxuZXhwb3J0IGNvbnN0IFRBR19SRVNUID0gbmV3UmVnRXhwYFxuXHReXG5cdFxcKCgke1RhZ30pXFwpXG5cdCR7V2hpdGVzcGFjZX0qXG5cdChbXl0qKVxuXHQkYDtcbiJdfQ==",
			"import SyntaxError from '.SyntaxError';\nimport * as iterator from '../iterator';\nimport * as RE from './nested (readable)';\n/* parser */\nconst MULTI_LINE_BASIC_STRING = /^(?:[^\\\\\"]+|\\\\[^]|\"\"?(?!\"))/;\nexport function MULTI_LINE_BASIC_STRING_exec_0(_) {\n    for (let _0 = '';;) {\n        if (_ === '') {\n            return _0;\n        }\n        const $ = MULTI_LINE_BASIC_STRING.exec(_);\n        if ($ === null) {\n            return _0;\n        }\n        _0 += $[0];\n        _ = _.slice($[0].length);\n    }\n}\nconst ESCAPED_EXCLUDE_CONTROL_CHARACTER = /[^\\\\\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\ \\n]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/g;\nexport function ESCAPED_EXCLUDE_CONTROL_CHARACTER_test(_) {\n    return _.replace(ESCAPED_EXCLUDE_CONTROL_CHARACTER, '') === '';\n}\nconst BASIC_STRING = /^(?:[^\\\\\"\\x00-\\x09\\x0B-\\x1F\\x7F]+|\\\\(?:[btnfr\"\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8}))/;\nexport function BASIC_STRING_exec(_2) {\n    _2 = _2.slice(1);\n    for (let _1 = '';;) {\n        const $ = BASIC_STRING.exec(_2);\n        if ($ === null) {\n            _2.startsWith('\"') || iterator.throws(SyntaxError(iterator.where()));\n            return { 1: _1, 2: _2.replace(RE.SYM_WHITESPACE, '') };\n        }\n        _1 += $[0];\n        _2 = _2.slice($[0].length);\n    }\n}\nconst BARE_KEY = /^[\\w-]+/;\nconst LITERAL_KEY = /^'[^'\\x00-\\x08\\x0B-\\x1F\\x7F]*'/;\nconst DOT_KEY = /^[ \\t]*\\.[ \\t]*/;\nexport function TABLE_DEFINITION_exec_groups(_) {\n    const $_asArrayItem$$ = _.charAt(1) === '[';\n    _ = _.slice($_asArrayItem$$ ? 2 : 1).replace(RE.PRE_WHITESPACE, '');\n    const keys = getKeys(_);\n    _ = _.slice(keys.length).replace(RE.PRE_WHITESPACE, '');\n    let tagInner = '';\n    if (_.startsWith('(')) {\n        ({ 1: tagInner, 2: _ } = RE.TAG_REST.exec(_) || iterator.throws(SyntaxError(iterator.where())));\n    }\n    _.startsWith(']') || iterator.throws(SyntaxError(iterator.where()));\n    const $$asArrayItem$_ = _.charAt(1) === ']';\n    _ = _.slice($$asArrayItem$_ ? 2 : 1).replace(RE.PRE_WHITESPACE, '');\n    let tagOuter = '';\n    if (_.startsWith('(')) {\n        ({ 1: tagOuter, 2: _ } = RE.TAG_REST.exec(_) || iterator.throws(SyntaxError(iterator.where())));\n    }\n    _ === '' || _.startsWith('#') || iterator.throws(SyntaxError(iterator.where()));\n    return { $_asArrayItem$$, keys, tagInner, $$asArrayItem$_, tagOuter };\n}\nexport function KEY_VALUE_PAIR_exec_groups(_) {\n    const _1 = getKeys(_);\n    const $ = RE.KEY_VALUE_PAIR.exec(_.slice(_1.length)) || iterator.throws(SyntaxError(iterator.where()));\n    return { left: _1, tagLeft: $[1] || '', tagRight: $[2] || '', right: $[3] };\n}\nfunction getKeys(_) {\n    for (let keys = '';;) {\n        if (_.startsWith('\"')) {\n            _ = _.slice(1);\n            for (let key = '\"';;) {\n                const $ = BASIC_STRING.exec(_);\n                if ($ === null) {\n                    _.startsWith('\"') || iterator.throws(SyntaxError(iterator.where()));\n                    _ = _.slice(1);\n                    keys += key + '\"';\n                    break;\n                }\n                _ = _.slice($[0].length);\n                key += $[0];\n            }\n        }\n        else {\n            const key = ((_.startsWith('\\'') ? LITERAL_KEY : BARE_KEY).exec(_) || iterator.throws(SyntaxError(iterator.where())))[0];\n            _ = _.slice(key.length);\n            keys += key;\n        }\n        const $ = DOT_KEY.exec(_);\n        if ($ === null) {\n            return keys;\n        }\n        _ = _.slice($[0].length);\n        keys += $[0];\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
			"import SyntaxError from '.SyntaxError';\nimport Error from '.Error';\n//import * as options from './options';\nimport * as RE from './RE';\nconst NONE = [];\nlet sourceLines = NONE;\nlet lastLineIndex = -1;\nlet lineIndex = -1;\nfunction noop(lineRest) { return ''; }\nnoop.previous = noop;\nexport let stacks_length = 0;\nlet last = noop;\nexport function could() {\n    if (sourceLines !== NONE) {\n        throw Error('Inner error: parsing in parsing.');\n    }\n}\nexport function todo(source) {\n    sourceLines = source.split(RE.EOL);\n    lastLineIndex = sourceLines.length - 1;\n    lineIndex = -1;\n    stacks_length = 0;\n    last = noop;\n}\nexport const next = () => sourceLines[++lineIndex];\nexport const rest = () => lineIndex !== lastLineIndex;\nexport const mark = () => lineIndex;\nexport function must(message, startIndex) {\n    lineIndex === lastLineIndex\n        && throws(new SyntaxError(message + ' is not close until the end of the file, which started from line ' + (startIndex + 1) + ': ' + sourceLines[startIndex]));\n    return sourceLines[++lineIndex];\n}\nexport const where = () => 'line ' + (lineIndex + 1) + ': ' + sourceLines[lineIndex];\nexport function done() {\n    sourceLines = NONE;\n    last = noop;\n}\nexport function stacks_pop() {\n    const item = last;\n    last = last.previous;\n    --stacks_length;\n    return item;\n}\nexport function stacks_push(item) {\n    item.previous = last;\n    last = item;\n    ++stacks_length;\n}\nexport function stacks_insertBeforeLast(item) {\n    item.previous = last.previous;\n    last.previous = item;\n    ++stacks_length;\n}\nexport function throws(error) {\n    if (sourceLines !== NONE) {\n        error.lineIndex = lineIndex;\n        error.lineNumber = lineIndex + 1;\n        //done();\n        //options.clear();\n    }\n    throw error;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLEVBQUUsYUFBYSxDQUFDO0FBQ2pCLENBQUM7QUFHRCxNQUFNLFVBQVUsTUFBTSxDQUFFLEtBQW9CO0lBQzNDLElBQUssV0FBVyxLQUFHLElBQUksRUFBRztRQUN6QixLQUFLLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUM1QixLQUFLLENBQUMsVUFBVSxHQUFHLFNBQVMsR0FBQyxDQUFDLENBQUM7UUFDL0IsU0FBUztRQUNULGtCQUFrQjtLQUNsQjtJQUNELE1BQU0sS0FBSyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTeW50YXhFcnJvciBmcm9tICcuU3ludGF4RXJyb3InO1xuaW1wb3J0IEVycm9yIGZyb20gJy5FcnJvcic7XG4vL2ltcG9ydCAqIGFzIG9wdGlvbnMgZnJvbSAnLi9vcHRpb25zJztcbmltcG9ydCAqIGFzIFJFIGZyb20gJy4vUkUnO1xuXG5cbmNvbnN0IE5PTkUgOnN0cmluZ1tdID0gW107XG5sZXQgc291cmNlTGluZXMgOnN0cmluZ1tdID0gTk9ORTtcbmxldCBsYXN0TGluZUluZGV4IDpudW1iZXIgPSAtMTtcbmxldCBsaW5lSW5kZXggOm51bWJlciA9IC0xO1xuXG5mdW5jdGlvbiBub29wIChsaW5lUmVzdCA6c3RyaW5nKSA6c3RyaW5nIHsgcmV0dXJuICcnOyB9XG5ub29wLnByZXZpb3VzID0gbm9vcDtcblxuZXhwb3J0IGxldCBzdGFja3NfbGVuZ3RoID0gMDtcbmxldCBsYXN0IDp0eXBlb2Ygbm9vcCA9IG5vb3A7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNvdWxkICgpIDp2b2lkIHtcblx0aWYgKCBzb3VyY2VMaW5lcyE9PU5PTkUgKSB7IHRocm93IEVycm9yKCdJbm5lciBlcnJvcjogcGFyc2luZyBpbiBwYXJzaW5nLicpOyB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2RvIChzb3VyY2UgOnN0cmluZykgOnZvaWQge1xuXHRzb3VyY2VMaW5lcyA9IHNvdXJjZS5zcGxpdChSRS5FT0wpO1xuXHRsYXN0TGluZUluZGV4ID0gc291cmNlTGluZXMubGVuZ3RoLTE7XG5cdGxpbmVJbmRleCA9IC0xO1xuXHRzdGFja3NfbGVuZ3RoID0gMDtcblx0bGFzdCA9IG5vb3A7XG59XG5cbmV4cG9ydCBjb25zdCBuZXh0ID0gKCkgOnN0cmluZyA9PiBzb3VyY2VMaW5lc1srK2xpbmVJbmRleF07XG5cbmV4cG9ydCBjb25zdCByZXN0ID0gKCkgOmJvb2xlYW4gPT4gbGluZUluZGV4IT09bGFzdExpbmVJbmRleDtcblxuZXhwb3J0IGNvbnN0IG1hcmsgPSAoKSA6bnVtYmVyID0+IGxpbmVJbmRleDtcblxuZXhwb3J0IGZ1bmN0aW9uIG11c3QgKG1lc3NhZ2UgOnN0cmluZywgc3RhcnRJbmRleCA6bnVtYmVyKSA6c3RyaW5nIHtcblx0bGluZUluZGV4PT09bGFzdExpbmVJbmRleFxuXHQmJiB0aHJvd3MobmV3IFN5bnRheEVycm9yKG1lc3NhZ2UrJyBpcyBub3QgY2xvc2UgdW50aWwgdGhlIGVuZCBvZiB0aGUgZmlsZSwgd2hpY2ggc3RhcnRlZCBmcm9tIGxpbmUgJysoIHN0YXJ0SW5kZXgrMSApKyc6ICcrc291cmNlTGluZXNbc3RhcnRJbmRleF0pKTtcblx0cmV0dXJuIHNvdXJjZUxpbmVzWysrbGluZUluZGV4XTtcbn1cblxuZXhwb3J0IGNvbnN0IHdoZXJlID0gKCkgOnN0cmluZyA9PiAnbGluZSAnKyggbGluZUluZGV4KzEgKSsnOiAnK3NvdXJjZUxpbmVzW2xpbmVJbmRleF07XG5cbmV4cG9ydCBmdW5jdGlvbiBkb25lICgpIDp2b2lkIHtcblx0c291cmNlTGluZXMgPSBOT05FO1xuXHRsYXN0ID0gbm9vcDtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gc3RhY2tzX3BvcCAoKSA6dHlwZW9mIG5vb3Age1xuXHRjb25zdCBpdGVtIDp0eXBlb2Ygbm9vcCA9IGxhc3Q7XG5cdGxhc3QgPSBsYXN0LnByZXZpb3VzO1xuXHQtLXN0YWNrc19sZW5ndGg7XG5cdHJldHVybiBpdGVtO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RhY2tzX3B1c2ggKGl0ZW0gOnR5cGVvZiBub29wKSA6dm9pZCB7XG5cdGl0ZW0ucHJldmlvdXMgPSBsYXN0O1xuXHRsYXN0ID0gaXRlbTtcblx0KytzdGFja3NfbGVuZ3RoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RhY2tzX2luc2VydEJlZm9yZUxhc3QgKGl0ZW0gOnR5cGVvZiBub29wKSB7XG5cdGl0ZW0ucHJldmlvdXMgPSBsYXN0LnByZXZpb3VzO1xuXHRsYXN0LnByZXZpb3VzID0gaXRlbTtcblx0KytzdGFja3NfbGVuZ3RoO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiB0aHJvd3MgKGVycm9yIDpGcmllbmRseUVycm9yKSA6bmV2ZXIge1xuXHRpZiAoIHNvdXJjZUxpbmVzIT09Tk9ORSApIHtcblx0XHRlcnJvci5saW5lSW5kZXggPSBsaW5lSW5kZXg7XG5cdFx0ZXJyb3IubGluZU51bWJlciA9IGxpbmVJbmRleCsxO1xuXHRcdC8vZG9uZSgpO1xuXHRcdC8vb3B0aW9ucy5jbGVhcigpO1xuXHR9XG5cdHRocm93IGVycm9yO1xufVxuXG5kZWNsYXJlIGNsYXNzIEZyaWVuZGx5RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG5cdGxpbmVJbmRleD8gOm51bWJlcjtcblx0bGluZU51bWJlcj8gOm51bWJlcjtcbn1cbiJdfQ==",
			"/*!\n * 模块名称：@ltd/j-orderify\n * 模块功能：返回一个能保证给定对象的属性按此后添加顺序排列的 proxy，即使键名是 symbol，或整数 string。\n   　　　　　Return a proxy for given object, which can guarantee own keys are in setting order, even if the key name is symbol or int string.\n * 模块版本：2.5.0\n * 许可条款：LGPL-3.0\n * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)\n * 问题反馈：https://GitHub.com/LongTengDao/j-orderify/issues\n * 项目主页：https://GitHub.com/LongTengDao/j-orderify/\n */",
			"import version from './version?text';\nexport { version };\nimport WeakMap from '.WeakMap';\nimport Object from '.Object';\nimport create from '.Object.create';\nimport Set from '.Set';\nimport Proxy from '.Proxy';\nimport defineProperty from '.Reflect.defineProperty';\nimport deleteProperty from '.Reflect.deleteProperty';\nimport ownKeys from '.Reflect.ownKeys';\nconst ownKeysKeepers = new WeakMap;\nconst handlers = create(null, {\n    defineProperty: {\n        value(target, key, descriptor) {\n            if (defineProperty(target, key, descriptor)) {\n                ownKeysKeepers.get(target).add(key);\n                return true;\n            }\n            return false;\n        }\n    },\n    deleteProperty: {\n        value(target, key) {\n            if (deleteProperty(target, key)) {\n                ownKeysKeepers.get(target).delete(key);\n                return true;\n            }\n            return false;\n        }\n    },\n    ownKeys: {\n        value(target) {\n            return [...ownKeysKeepers.get(target)];\n        }\n    },\n});\nexport const orderify = (object) => {\n    ownKeysKeepers.set(object, new Set(ownKeys(object)));\n    return new Proxy(object, handlers);\n};\nexport class Orderified extends null {\n    constructor() {\n        const object = create(prototype);\n        ownKeysKeepers.set(object, new Set);\n        return new Proxy(object, handlers);\n    }\n}\nconst prototype = /*#__PURE__*/ function () {\n    delete Orderified.prototype.constructor;\n    Object.freeze(Orderified.prototype);\n    return Orderified.prototype;\n}();\nexport default {\n    version,\n    orderify,\n    Orderified,\n    get default() { return this; },\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cG9ydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE9BQU8sTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUM7QUFFbkIsT0FBTyxPQUFPLE1BQU0sVUFBVSxDQUFDO0FBQy9CLE9BQU8sTUFBTSxNQUFNLFNBQVMsQ0FBQztBQUM3QixPQUFPLE1BQU0sTUFBTSxnQkFBZ0IsQ0FBQztBQUNwQyxPQUFPLEdBQUcsTUFBTSxNQUFNLENBQUM7QUFDdkIsT0FBTyxLQUFLLE1BQU0sUUFBUSxDQUFDO0FBQzNCLE9BQU8sY0FBYyxNQUFNLHlCQUF5QixDQUFDO0FBQ3JELE9BQU8sY0FBYyxNQUFNLHlCQUF5QixDQUFDO0FBQ3JELE9BQU8sT0FBTyxNQUFNLGtCQUFrQixDQUFDO0FBRXZDLE1BQU0sY0FBYyxHQUFHLElBQUksT0FBTyxDQUFDO0FBRW5DLE1BQU0sUUFBUSxHQUFXLE1BQU0sQ0FBQyxJQUFJLEVBQUU7SUFDckMsY0FBYyxFQUFFO1FBQ2YsS0FBSyxDQUFFLE1BQWMsRUFBRSxHQUFvQixFQUFFLFVBQThCO1lBQzFFLElBQUssY0FBYyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsVUFBVSxDQUFDLEVBQUc7Z0JBQzlDLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNwQyxPQUFPLElBQUksQ0FBQzthQUNaO1lBQ0QsT0FBTyxLQUFLLENBQUM7UUFDZCxDQUFDO0tBQ0Q7SUFDRCxjQUFjLEVBQUU7UUFDZixLQUFLLENBQUUsTUFBYyxFQUFFLEdBQW9CO1lBQzFDLElBQUssY0FBYyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsRUFBRztnQkFDbEMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3ZDLE9BQU8sSUFBSSxDQUFDO2FBQ1o7WUFDRCxPQUFPLEtBQUssQ0FBQztRQUNkLENBQUM7S0FDRDtJQUNELE9BQU8sRUFBRTtRQUNSLEtBQUssQ0FBRSxNQUFjO1lBQ3BCLE9BQU8sQ0FBQyxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUN4QyxDQUFDO0tBQ0Q7Q0FDRCxDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxNQUFjLEVBQVUsRUFBRTtJQUNsRCxjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JELE9BQU8sSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3BDLENBQUMsQ0FBQztBQUVGLE1BQU0sT0FBTyxVQUFXLFNBQVEsSUFBSTtJQUNuQztRQUNDLE1BQU0sTUFBTSxHQUFlLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM3QyxjQUFjLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7Q0FDRDtBQUVELE1BQU0sU0FBUyxHQUFHLGFBQWEsQ0FBQztJQUMvQixPQUFPLFVBQVUsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDO0lBQ3hDLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3BDLE9BQU8sVUFBVSxDQUFDLFNBQVMsQ0FBQztBQUM3QixDQUFDLEVBQUUsQ0FBQztBQUVKLGVBQWU7SUFDZCxPQUFPO0lBQ1AsUUFBUTtJQUNSLFVBQVU7SUFDVixJQUFJLE9BQU8sS0FBTSxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUM7Q0FDL0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2ZXJzaW9uIGZyb20gJy4vdmVyc2lvbj90ZXh0JztcbmV4cG9ydCB7IHZlcnNpb24gfTtcblxuaW1wb3J0IFdlYWtNYXAgZnJvbSAnLldlYWtNYXAnO1xuaW1wb3J0IE9iamVjdCBmcm9tICcuT2JqZWN0JztcbmltcG9ydCBjcmVhdGUgZnJvbSAnLk9iamVjdC5jcmVhdGUnO1xuaW1wb3J0IFNldCBmcm9tICcuU2V0JztcbmltcG9ydCBQcm94eSBmcm9tICcuUHJveHknO1xuaW1wb3J0IGRlZmluZVByb3BlcnR5IGZyb20gJy5SZWZsZWN0LmRlZmluZVByb3BlcnR5JztcbmltcG9ydCBkZWxldGVQcm9wZXJ0eSBmcm9tICcuUmVmbGVjdC5kZWxldGVQcm9wZXJ0eSc7XG5pbXBvcnQgb3duS2V5cyBmcm9tICcuUmVmbGVjdC5vd25LZXlzJztcblxuY29uc3Qgb3duS2V5c0tlZXBlcnMgPSBuZXcgV2Vha01hcDtcblxuY29uc3QgaGFuZGxlcnMgOm9iamVjdCA9IGNyZWF0ZShudWxsLCB7XG5cdGRlZmluZVByb3BlcnR5OiB7XG5cdFx0dmFsdWUgKHRhcmdldCA6b2JqZWN0LCBrZXkgOnN0cmluZyB8IHN5bWJvbCwgZGVzY3JpcHRvciA6UHJvcGVydHlEZXNjcmlwdG9yKSB7XG5cdFx0XHRpZiAoIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBkZXNjcmlwdG9yKSApIHtcblx0XHRcdFx0b3duS2V5c0tlZXBlcnMuZ2V0KHRhcmdldCkuYWRkKGtleSk7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fSxcblx0ZGVsZXRlUHJvcGVydHk6IHtcblx0XHR2YWx1ZSAodGFyZ2V0IDpvYmplY3QsIGtleSA6c3RyaW5nIHwgc3ltYm9sKSB7XG5cdFx0XHRpZiAoIGRlbGV0ZVByb3BlcnR5KHRhcmdldCwga2V5KSApIHtcblx0XHRcdFx0b3duS2V5c0tlZXBlcnMuZ2V0KHRhcmdldCkuZGVsZXRlKGtleSk7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fSxcblx0b3duS2V5czoge1xuXHRcdHZhbHVlICh0YXJnZXQgOm9iamVjdCkgOiggc3RyaW5nIHwgc3ltYm9sIClbXSB7XG5cdFx0XHRyZXR1cm4gWy4uLm93bktleXNLZWVwZXJzLmdldCh0YXJnZXQpXTtcblx0XHR9XG5cdH0sXG59KTtcblxuZXhwb3J0IGNvbnN0IG9yZGVyaWZ5ID0gKG9iamVjdCA6b2JqZWN0KSA6b2JqZWN0ID0+IHtcblx0b3duS2V5c0tlZXBlcnMuc2V0KG9iamVjdCwgbmV3IFNldChvd25LZXlzKG9iamVjdCkpKTtcblx0cmV0dXJuIG5ldyBQcm94eShvYmplY3QsIGhhbmRsZXJzKTtcbn07XG5cbmV4cG9ydCBjbGFzcyBPcmRlcmlmaWVkIGV4dGVuZHMgbnVsbCB7XG5cdGNvbnN0cnVjdG9yICgpIHtcblx0XHRjb25zdCBvYmplY3QgOk9yZGVyaWZpZWQgPSBjcmVhdGUocHJvdG90eXBlKTtcblx0XHRvd25LZXlzS2VlcGVycy5zZXQob2JqZWN0LCBuZXcgU2V0KTtcblx0XHRyZXR1cm4gbmV3IFByb3h5KG9iamVjdCwgaGFuZGxlcnMpO1xuXHR9XG59XG5cbmNvbnN0IHByb3RvdHlwZSA9IC8qI19fUFVSRV9fKi8gZnVuY3Rpb24gKCkge1xuXHRkZWxldGUgT3JkZXJpZmllZC5wcm90b3R5cGUuY29uc3RydWN0b3I7XG5cdE9iamVjdC5mcmVlemUoT3JkZXJpZmllZC5wcm90b3R5cGUpO1xuXHRyZXR1cm4gT3JkZXJpZmllZC5wcm90b3R5cGU7XG59KCk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcblx0dmVyc2lvbixcblx0b3JkZXJpZnksXG5cdE9yZGVyaWZpZWQsXG5cdGdldCBkZWZhdWx0ICgpIHsgcmV0dXJuIHRoaXM7IH0sXG59O1xuIl19",
			"﻿import './j-orderify!meta.js';\nexport * from '../../src/export';\n/*¡ @ltd/j-orderify */",
			"import { orderify } from '@ltd/j-orderify';\nimport create from '.Object.create';\nexport function Table() { }\nexport const OrderedTable = function Table() { return orderify(this); };\nOrderedTable.prototype = Table.prototype = create(null);\nexport const isTable = (value) => value instanceof Table;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLE1BQU0sTUFBTSxnQkFBZ0IsQ0FBQztBQUVwQyxNQUFNLFVBQVUsS0FBSyxLQUFZLENBQUM7QUFDbEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFNBQVMsS0FBSyxLQUEwQixPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUc3RixZQUFZLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRXhELE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxDQUFDLEtBQVUsRUFBVyxFQUFFLENBQUMsS0FBSyxZQUFZLEtBQUssQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9yZGVyaWZ5IH0gZnJvbSAnQGx0ZC9qLW9yZGVyaWZ5JztcbmltcG9ydCBjcmVhdGUgZnJvbSAnLk9iamVjdC5jcmVhdGUnO1xuXG5leHBvcnQgZnVuY3Rpb24gVGFibGUgKCkgOnZvaWQgeyB9XG5leHBvcnQgY29uc3QgT3JkZXJlZFRhYmxlID0gZnVuY3Rpb24gVGFibGUgKHRoaXMgOm9iamVjdCkgOm9iamVjdCB7IHJldHVybiBvcmRlcmlmeSh0aGlzKTsgfTtcbmV4cG9ydCB0eXBlIFRhYmxlID0gdHlwZW9mIFRhYmxlIHwgdHlwZW9mIE9yZGVyZWRUYWJsZTtcblxuT3JkZXJlZFRhYmxlLnByb3RvdHlwZSA9IFRhYmxlLnByb3RvdHlwZSA9IGNyZWF0ZShudWxsKTtcblxuZXhwb3J0IGNvbnN0IGlzVGFibGUgPSAodmFsdWUgOmFueSkgOmJvb2xlYW4gPT4gdmFsdWUgaW5zdGFuY2VvZiBUYWJsZTtcbiJdfQ==",
			"import SyntaxError from '.SyntaxError';\nimport RangeError from '.RangeError';\nimport * as RE from '../share/RE';\nimport * as iterator from '../share/iterator';\nimport * as options from '../share/options';\nimport isSafeInteger from '.Number.isSafeInteger';\nimport BigInt from '.BigInt';\nexport const NumberInteger = (literal) => {\n    if (literal === '0' || literal === '+0' || literal === '-0') {\n        return 0;\n    }\n    (literal.charAt(0) === '0' ? RE.XOB_INTEGER : RE.INTEGER).test(literal)\n        || iterator.throws(SyntaxError('Invalid Integer ' + literal + ' at ' + iterator.where()));\n    const number = +literal.replace(RE.UNDERSCORES, '');\n    options.allowLonger\n        || isSafeInteger(number)\n        || iterator.throws(RangeError('Integer did not use BitInt must be Number.isSafeInteger, not includes ' + literal + ' meet at ' + iterator.where()));\n    return number;\n};\nexport const BigIntInteger = (literal) => {\n    if (literal === '0' || literal === '+0' || literal === '-0') {\n        return 0n;\n    }\n    (literal.charAt(0) === '0' ? RE.XOB_INTEGER : RE.INTEGER).test(literal) || iterator.throws(SyntaxError('Invalid Integer ' + literal + ' at ' + iterator.where()));\n    const bigInt = BigInt(literal.replace(RE.UNDERSCORES, ''));\n    options.allowLonger\n        || -9223372036854775808n <= bigInt && bigInt <= 9223372036854775807n // ( min = -(2n**(64n-1n)) || ~max ) <= long <= ( max = 2n**(64n-1n)-1n || ~min )\n        || iterator.throws(RangeError('Integer expect 64 bit range (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807), not includes ' + literal + ' meet at ' + iterator.where()));\n    return bigInt;\n};\nexport const DependInteger = (literal) => {\n    const bigInt = BigIntInteger(literal);\n    return options.IntegerMin <= bigInt && bigInt <= options.IntegerMax ? +(bigInt + '') : bigInt;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBRSxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUUsTUFBTSxHQUFDLEVBQUUsQ0FBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFDM0YsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN5bnRheEVycm9yIGZyb20gJy5TeW50YXhFcnJvcic7XG5pbXBvcnQgUmFuZ2VFcnJvciBmcm9tICcuUmFuZ2VFcnJvcic7XG5pbXBvcnQgKiBhcyBSRSBmcm9tICcuLi9zaGFyZS9SRSc7XG5pbXBvcnQgKiBhcyBpdGVyYXRvciBmcm9tICcuLi9zaGFyZS9pdGVyYXRvcic7XG5pbXBvcnQgKiBhcyBvcHRpb25zIGZyb20gJy4uL3NoYXJlL29wdGlvbnMnO1xuaW1wb3J0IGlzU2FmZUludGVnZXIgZnJvbSAnLk51bWJlci5pc1NhZmVJbnRlZ2VyJztcbmltcG9ydCBCaWdJbnQgZnJvbSAnLkJpZ0ludCc7XG5cbmV4cG9ydCBjb25zdCBOdW1iZXJJbnRlZ2VyID0gKGxpdGVyYWwgOnN0cmluZykgOm51bWJlciA9PiB7XG5cdGlmICggbGl0ZXJhbD09PScwJyB8fCBsaXRlcmFsPT09JyswJyB8fCBsaXRlcmFsPT09Jy0wJyApIHsgcmV0dXJuIDA7IH1cblx0KCBsaXRlcmFsLmNoYXJBdCgwKT09PScwJyA/IFJFLlhPQl9JTlRFR0VSIDogUkUuSU5URUdFUiApLnRlc3QobGl0ZXJhbClcblx0fHwgaXRlcmF0b3IudGhyb3dzKFN5bnRheEVycm9yKCdJbnZhbGlkIEludGVnZXIgJytsaXRlcmFsKycgYXQgJytpdGVyYXRvci53aGVyZSgpKSk7XG5cdGNvbnN0IG51bWJlciA9ICtsaXRlcmFsLnJlcGxhY2UoUkUuVU5ERVJTQ09SRVMsICcnKTtcblx0b3B0aW9ucy5hbGxvd0xvbmdlclxuXHR8fCBpc1NhZmVJbnRlZ2VyKG51bWJlcilcblx0fHwgaXRlcmF0b3IudGhyb3dzKFJhbmdlRXJyb3IoJ0ludGVnZXIgZGlkIG5vdCB1c2UgQml0SW50IG11c3QgYmUgTnVtYmVyLmlzU2FmZUludGVnZXIsIG5vdCBpbmNsdWRlcyAnK2xpdGVyYWwrJyBtZWV0IGF0ICcraXRlcmF0b3Iud2hlcmUoKSkpO1xuXHRyZXR1cm4gbnVtYmVyO1xufTtcblxuZXhwb3J0IGNvbnN0IEJpZ0ludEludGVnZXIgPSAobGl0ZXJhbCA6c3RyaW5nKSA6YmlnaW50ID0+IHtcblx0aWYgKCBsaXRlcmFsPT09JzAnIHx8IGxpdGVyYWw9PT0nKzAnIHx8IGxpdGVyYWw9PT0nLTAnICkgeyByZXR1cm4gMG47IH1cblx0KCBsaXRlcmFsLmNoYXJBdCgwKT09PScwJyA/IFJFLlhPQl9JTlRFR0VSIDogUkUuSU5URUdFUiApLnRlc3QobGl0ZXJhbCkgfHwgaXRlcmF0b3IudGhyb3dzKFN5bnRheEVycm9yKCdJbnZhbGlkIEludGVnZXIgJytsaXRlcmFsKycgYXQgJytpdGVyYXRvci53aGVyZSgpKSk7XG5cdGNvbnN0IGJpZ0ludCA6YmlnaW50ID0gQmlnSW50KGxpdGVyYWwucmVwbGFjZShSRS5VTkRFUlNDT1JFUywgJycpKTtcblx0b3B0aW9ucy5hbGxvd0xvbmdlclxuXHR8fCAtOTIyMzM3MjAzNjg1NDc3NTgwOG48PWJpZ0ludCAmJiBiaWdJbnQ8PTkyMjMzNzIwMzY4NTQ3NzU4MDduLy8gKCBtaW4gPSAtKDJuKiooNjRuLTFuKSkgfHwgfm1heCApIDw9IGxvbmcgPD0gKCBtYXggPSAybioqKDY0bi0xbiktMW4gfHwgfm1pbiApXG5cdHx8IGl0ZXJhdG9yLnRocm93cyhSYW5nZUVycm9yKCdJbnRlZ2VyIGV4cGVjdCA2NCBiaXQgcmFuZ2UgKC05LDIyMywzNzIsMDM2LDg1NCw3NzUsODA4IHRvIDksMjIzLDM3MiwwMzYsODU0LDc3NSw4MDcpLCBub3QgaW5jbHVkZXMgJytsaXRlcmFsKycgbWVldCBhdCAnK2l0ZXJhdG9yLndoZXJlKCkpKTtcblx0cmV0dXJuIGJpZ0ludDtcbn07XG5cbmV4cG9ydCBjb25zdCBEZXBlbmRJbnRlZ2VyID0gKGxpdGVyYWwgOnN0cmluZykgPT4ge1xuXHRjb25zdCBiaWdJbnQgOmJpZ2ludCA9IEJpZ0ludEludGVnZXIobGl0ZXJhbCk7XG5cdHJldHVybiBvcHRpb25zLkludGVnZXJNaW48PWJpZ0ludCAmJiBiaWdJbnQ8PW9wdGlvbnMuSW50ZWdlck1heCA/ICsoIGJpZ0ludCsnJyApIDogYmlnSW50O1xufTtcbiJdfQ==",
			"import SyntaxError from '.SyntaxError';\nimport RangeError from '.RangeError';\nimport TypeError from '.TypeError';\nimport Error from '.Error';\nimport isSafeInteger from '.Number.isSafeInteger';\nimport Proxy from '.Proxy';\nimport WeakMap from '.WeakMap';\nimport { Table, OrderedTable } from '../types/Table';\nimport { BigIntInteger, NumberInteger, DependInteger } from '../types/Integer';\nimport * as iterator from './iterator';\n/* options */\nexport let useWhatToJoinMultiLineString;\nexport let IntegerDepends, IntegerMin, IntegerMax;\n/* xOptions */\nexport let TableDepends;\nexport let open;\nexport let allowLonger;\nexport let enableNull;\nexport let allowInlineTableMultiLineAndTrailingCommaEvenNoComma;\nexport let enableInterpolationString;\nexport let asNulls, asStrings, asTables, asArrays, asBooleans, asFloats, asDatetimes, asIntegers;\nlet processor;\n/* xOptions.mix */\nexport const unType = (array) => array;\nexport const { asInlineArrayOfNulls, asInlineArrayOfStrings, asInlineArrayOfTables, asInlineArrayOfArrays, asInlineArrayOfBooleans, asInlineArrayOfFloats, asInlineArrayOfDatetimes, asInlineArrayOfIntegers, } = new Proxy(new WeakMap, {\n    get: (arrayTypes) => function typify(array) {\n        if (arrayTypes.has(array)) {\n            arrayTypes.get(array) === typify\n                || iterator.throws(TypeError('Types in array must be same. Check ' + iterator.where()));\n        }\n        else {\n            arrayTypes.set(array, typify);\n        }\n        return array;\n    }\n});\nlet collection = [];\nfunction collect_on(each) { collection.push(each); }\nfunction collect_off(each) { throw iterator.throws(SyntaxError(iterator.where())); }\nexport let collect = collect_off;\nexport function process() {\n    let index = collection.length;\n    if (index) {\n        iterator.done();\n        const process = processor;\n        const queue = collection;\n        processor = null;\n        collection = [];\n        while (index--) {\n            process(queue.pop());\n        }\n    }\n}\n/* use & clear */\nexport function clear() {\n    processor = null;\n    collection.length = 0;\n}\nexport function use(useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger, extensionOptions) {\n    if (typeof useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines !== 'string') {\n        throw new TypeError('TOML.parse(,,multiLineJoiner)');\n    }\n    if (useBigInt_forInteger === true) {\n        IntegerDepends = BigIntInteger;\n    }\n    else if (useBigInt_forInteger === false) {\n        IntegerDepends = NumberInteger;\n    }\n    else {\n        if (typeof useBigInt_forInteger !== 'number') {\n            throw new TypeError('TOML.parse(,,,useBigInt)');\n        }\n        if (!isSafeInteger(useBigInt_forInteger)) {\n            throw new RangeError('TOML.parse(...useBigInt)');\n        }\n        IntegerDepends = DependInteger;\n        if (useBigInt_forInteger >= 0) {\n            IntegerMax = useBigInt_forInteger;\n            IntegerMin = -useBigInt_forInteger;\n        }\n        else {\n            IntegerMin = useBigInt_forInteger;\n            IntegerMax = -useBigInt_forInteger - 1;\n        }\n    }\n    useWhatToJoinMultiLineString = useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines;\n    let typify;\n    if (extensionOptions === null) {\n        TableDepends = Table;\n        open = allowLonger = enableNull = allowInlineTableMultiLineAndTrailingCommaEvenNoComma = enableInterpolationString = false;\n        processor = null;\n        typify = true;\n    }\n    else {\n        TableDepends = extensionOptions.order ? OrderedTable : Table;\n        open = !!extensionOptions.open;\n        allowLonger = !!extensionOptions.longer;\n        enableNull = !!extensionOptions.null;\n        allowInlineTableMultiLineAndTrailingCommaEvenNoComma = !!extensionOptions.multi;\n        enableInterpolationString = !!extensionOptions.ins;\n        typify = !extensionOptions.mix;\n        processor = extensionOptions.new || null;\n        if (processor) {\n            if (typeof processor !== 'function') {\n                throw new TypeError('TOML.parse(,,,,xOptions.tag)');\n            }\n            if (typify) {\n                throw new Error('TOML.parse(,,,,xOptions) xOptions.tag needs xOptions.mix to be true');\n            }\n            collect = collect_on;\n        }\n        else {\n            collect = collect_off;\n        }\n    }\n    if (typify) {\n        asNulls = asInlineArrayOfNulls;\n        asStrings = asInlineArrayOfStrings;\n        asTables = asInlineArrayOfTables;\n        asArrays = asInlineArrayOfArrays;\n        asBooleans = asInlineArrayOfBooleans;\n        asFloats = asInlineArrayOfFloats;\n        asDatetimes = asInlineArrayOfDatetimes;\n        asIntegers = asInlineArrayOfIntegers;\n    }\n    else {\n        asNulls = asStrings = asTables = asArrays = asBooleans = asFloats = asDatetimes = asIntegers = unType;\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxxRUFBcUUsQ0FBQyxDQUFDO2FBQUU7WUFDekcsT0FBTyxHQUFHLFVBQVUsQ0FBQztTQUNyQjthQUNJO1lBQUUsT0FBTyxHQUFHLFdBQVcsQ0FBQztTQUFFO0tBQy9CO0lBQ0QsSUFBSyxNQUFNLEVBQUc7UUFDYixPQUFPLEdBQUcsb0JBQW9CLENBQUM7UUFDL0IsU0FBUyxHQUFHLHNCQUFzQixDQUFDO1FBQ25DLFFBQVEsR0FBRyxxQkFBcUIsQ0FBQztRQUNqQyxRQUFRLEdBQUcscUJBQXFCLENBQUM7UUFDakMsVUFBVSxHQUFHLHVCQUF1QixDQUFDO1FBQ3JDLFFBQVEsR0FBRyxxQkFBcUIsQ0FBQztRQUNqQyxXQUFXLEdBQUcsd0JBQXdCLENBQUM7UUFDdkMsVUFBVSxHQUFHLHVCQUF1QixDQUFDO0tBQ3JDO1NBQ0k7UUFBRSxPQUFPLEdBQUcsU0FBUyxHQUFHLFFBQVEsR0FBRyxRQUFRLEdBQUcsVUFBVSxHQUFHLFFBQVEsR0FBRyxXQUFXLEdBQUcsVUFBVSxHQUFHLE1BQU0sQ0FBQztLQUFFO0FBQ2hILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ludGF4RXJyb3IgZnJvbSAnLlN5bnRheEVycm9yJztcbmltcG9ydCBSYW5nZUVycm9yIGZyb20gJy5SYW5nZUVycm9yJztcbmltcG9ydCBUeXBlRXJyb3IgZnJvbSAnLlR5cGVFcnJvcic7XG5pbXBvcnQgRXJyb3IgZnJvbSAnLkVycm9yJztcbmltcG9ydCBpc1NhZmVJbnRlZ2VyIGZyb20gJy5OdW1iZXIuaXNTYWZlSW50ZWdlcic7XG5pbXBvcnQgUHJveHkgZnJvbSAnLlByb3h5JztcbmltcG9ydCBXZWFrTWFwIGZyb20gJy5XZWFrTWFwJztcbmltcG9ydCB7IFRhYmxlLCBPcmRlcmVkVGFibGUgfSBmcm9tICcuLi90eXBlcy9UYWJsZSc7XG5pbXBvcnQgeyBCaWdJbnRJbnRlZ2VyLCBOdW1iZXJJbnRlZ2VyLCBEZXBlbmRJbnRlZ2VyIH0gZnJvbSAnLi4vdHlwZXMvSW50ZWdlcic7XG5pbXBvcnQgKiBhcyBpdGVyYXRvciBmcm9tICcuL2l0ZXJhdG9yJztcblxuLyogb3B0aW9ucyAqL1xuXG5leHBvcnQgbGV0IHVzZVdoYXRUb0pvaW5NdWx0aUxpbmVTdHJpbmcgOnN0cmluZztcbmV4cG9ydCBsZXQgSW50ZWdlckRlcGVuZHMgOkZ1bmN0aW9uLCBJbnRlZ2VyTWluIDpudW1iZXIsIEludGVnZXJNYXggOm51bWJlcjtcblxuLyogeE9wdGlvbnMgKi9cblxuZXhwb3J0IGxldCBUYWJsZURlcGVuZHMgOlRhYmxlO1xuZXhwb3J0IGxldCBvcGVuIDpib29sZWFuO1xuZXhwb3J0IGxldCBhbGxvd0xvbmdlciA6Ym9vbGVhbjtcbmV4cG9ydCBsZXQgZW5hYmxlTnVsbCA6Ym9vbGVhbjtcbmV4cG9ydCBsZXQgYWxsb3dJbmxpbmVUYWJsZU11bHRpTGluZUFuZFRyYWlsaW5nQ29tbWFFdmVuTm9Db21tYSA6Ym9vbGVhbjtcbmV4cG9ydCBsZXQgZW5hYmxlSW50ZXJwb2xhdGlvblN0cmluZyA6Ym9vbGVhbjtcbmV4cG9ydCBsZXQgYXNOdWxscyA6RnVuY3Rpb24sIGFzU3RyaW5ncyA6RnVuY3Rpb24sIGFzVGFibGVzIDpGdW5jdGlvbiwgYXNBcnJheXMgOkZ1bmN0aW9uLCBhc0Jvb2xlYW5zIDpGdW5jdGlvbiwgYXNGbG9hdHMgOkZ1bmN0aW9uLCBhc0RhdGV0aW1lcyA6RnVuY3Rpb24sIGFzSW50ZWdlcnMgOkZ1bmN0aW9uO1xubGV0IHByb2Nlc3NvciA6RnVuY3Rpb24gfCBudWxsO1xuXG4vKiB4T3B0aW9ucy5taXggKi9cblxuZXhwb3J0IGNvbnN0IHVuVHlwZSA9IChhcnJheSA6YW55W10pIDphbnlbXSA9PiBhcnJheTtcbmV4cG9ydCBjb25zdCB7XG5cdGFzSW5saW5lQXJyYXlPZk51bGxzLFxuXHRhc0lubGluZUFycmF5T2ZTdHJpbmdzLFxuXHRhc0lubGluZUFycmF5T2ZUYWJsZXMsXG5cdGFzSW5saW5lQXJyYXlPZkFycmF5cyxcblx0YXNJbmxpbmVBcnJheU9mQm9vbGVhbnMsXG5cdGFzSW5saW5lQXJyYXlPZkZsb2F0cyxcblx0YXNJbmxpbmVBcnJheU9mRGF0ZXRpbWVzLFxuXHRhc0lubGluZUFycmF5T2ZJbnRlZ2Vycyxcbn0gPSA8eyBbZWFjaCA6c3RyaW5nXSA6KGFycmF5IDphbnlbXSkgPT4gYW55W10gfT48b2JqZWN0Pm5ldyBQcm94eShuZXcgV2Vha01hcCwge1xuXHRnZXQ6IChhcnJheVR5cGVzKSA9PiBmdW5jdGlvbiB0eXBpZnkgKGFycmF5IDphbnlbXSkgOmFueVtdIHtcblx0XHRpZiAoIGFycmF5VHlwZXMuaGFzKGFycmF5KSApIHtcblx0XHRcdGFycmF5VHlwZXMuZ2V0KGFycmF5KT09PXR5cGlmeVxuXHRcdFx0fHwgaXRlcmF0b3IudGhyb3dzKFR5cGVFcnJvcignVHlwZXMgaW4gYXJyYXkgbXVzdCBiZSBzYW1lLiBDaGVjayAnK2l0ZXJhdG9yLndoZXJlKCkpKTtcblx0XHR9XG5cdFx0ZWxzZSB7IGFycmF5VHlwZXMuc2V0KGFycmF5LCB0eXBpZnkpOyB9XG5cdFx0cmV0dXJuIGFycmF5O1xuXHR9XG59KTtcblxuLyogeE9wdGlvbnMubmV3ICovXG5cbnR5cGUgZWFjaCA9IHsgdGFibGUgOm9iamVjdCwga2V5IDpzdHJpbmcsIHRhZyA6c3RyaW5nIH0gfCB7IGFycmF5IDphbnlbXSwgaW5kZXggOm51bWJlciwgdGFnIDpzdHJpbmcgfSB8IHsgdGFibGUgOm9iamVjdCwga2V5IDpzdHJpbmcsIGFycmF5IDpvYmplY3RbXSwgaW5kZXggOm51bWJlciwgdGFnIDpzdHJpbmcgfTtcbmxldCBjb2xsZWN0aW9uIDplYWNoW10gPSBbXTtcbmZ1bmN0aW9uIGNvbGxlY3Rfb24gKGVhY2ggOmVhY2gpIDp2b2lkIHsgY29sbGVjdGlvbi5wdXNoKGVhY2gpOyB9XG5mdW5jdGlvbiBjb2xsZWN0X29mZiAoZWFjaCA6ZWFjaCkgOm5ldmVyIHsgdGhyb3cgaXRlcmF0b3IudGhyb3dzKFN5bnRheEVycm9yKGl0ZXJhdG9yLndoZXJlKCkpKTsgfVxuZXhwb3J0IGxldCBjb2xsZWN0IDp0eXBlb2YgY29sbGVjdF9vZmYgfCB0eXBlb2YgY29sbGVjdF9vbiA9IGNvbGxlY3Rfb2ZmO1xuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3MgKCkge1xuXHRsZXQgaW5kZXggPSBjb2xsZWN0aW9uLmxlbmd0aDtcblx0aWYgKCBpbmRleCApIHtcblx0XHRpdGVyYXRvci5kb25lKCk7XG5cdFx0Y29uc3QgcHJvY2VzcyA9IDxGdW5jdGlvbj5wcm9jZXNzb3I7XG5cdFx0Y29uc3QgcXVldWUgPSBjb2xsZWN0aW9uO1xuXHRcdHByb2Nlc3NvciA9IG51bGw7XG5cdFx0Y29sbGVjdGlvbiA9IFtdO1xuXHRcdHdoaWxlICggaW5kZXgtLSApIHsgcHJvY2Vzcyg8ZWFjaD5xdWV1ZS5wb3AoKSk7IH1cblx0fVxufVxuXG4vKiB1c2UgJiBjbGVhciAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY2xlYXIgKCkgOnZvaWQge1xuXHRwcm9jZXNzb3IgPSBudWxsO1xuXHRjb2xsZWN0aW9uLmxlbmd0aCA9IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2UgKHVzZVdoYXRUb0pvaW5NdWx0aUxpbmVTdHJpbmdfbm90VXNpbmdGb3JTcGxpdFRoZVNvdXJjZUxpbmVzIDpzdHJpbmcsIHVzZUJpZ0ludF9mb3JJbnRlZ2VyIDpib29sZWFuIHwgbnVtYmVyLCBleHRlbnNpb25PcHRpb25zKSA6dm9pZCB7XG5cdGlmICggdHlwZW9mIDx1bmtub3duPnVzZVdoYXRUb0pvaW5NdWx0aUxpbmVTdHJpbmdfbm90VXNpbmdGb3JTcGxpdFRoZVNvdXJjZUxpbmVzIT09J3N0cmluZycgKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ1RPTUwucGFyc2UoLCxtdWx0aUxpbmVKb2luZXIpJyk7IH1cblx0aWYgKCB1c2VCaWdJbnRfZm9ySW50ZWdlcj09PXRydWUgKSB7IEludGVnZXJEZXBlbmRzID0gQmlnSW50SW50ZWdlcjsgfVxuXHRlbHNlIGlmICggdXNlQmlnSW50X2ZvckludGVnZXI9PT1mYWxzZSApIHsgSW50ZWdlckRlcGVuZHMgPSBOdW1iZXJJbnRlZ2VyOyB9XG5cdGVsc2Uge1xuXHRcdGlmICggdHlwZW9mIHVzZUJpZ0ludF9mb3JJbnRlZ2VyIT09J251bWJlcicgKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ1RPTUwucGFyc2UoLCwsdXNlQmlnSW50KScpOyB9XG5cdFx0aWYgKCAhaXNTYWZlSW50ZWdlcih1c2VCaWdJbnRfZm9ySW50ZWdlcikgKSB7IHRocm93IG5ldyBSYW5nZUVycm9yKCdUT01MLnBhcnNlKC4uLnVzZUJpZ0ludCknKTsgfVxuXHRcdEludGVnZXJEZXBlbmRzID0gRGVwZW5kSW50ZWdlcjtcblx0XHRpZiAoIHVzZUJpZ0ludF9mb3JJbnRlZ2VyPj0wICkge1xuXHRcdFx0SW50ZWdlck1heCA9IHVzZUJpZ0ludF9mb3JJbnRlZ2VyO1xuXHRcdFx0SW50ZWdlck1pbiA9IC11c2VCaWdJbnRfZm9ySW50ZWdlcjtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHRJbnRlZ2VyTWluID0gdXNlQmlnSW50X2ZvckludGVnZXI7XG5cdFx0XHRJbnRlZ2VyTWF4ID0gLXVzZUJpZ0ludF9mb3JJbnRlZ2VyLTE7XG5cdFx0fVxuXHR9XG5cdHVzZVdoYXRUb0pvaW5NdWx0aUxpbmVTdHJpbmcgPSB1c2VXaGF0VG9Kb2luTXVsdGlMaW5lU3RyaW5nX25vdFVzaW5nRm9yU3BsaXRUaGVTb3VyY2VMaW5lcztcblx0bGV0IHR5cGlmeSA6Ym9vbGVhbjtcblx0aWYgKCBleHRlbnNpb25PcHRpb25zPT09bnVsbCApIHtcblx0XHRUYWJsZURlcGVuZHMgPSBUYWJsZTtcblx0XHRvcGVuID0gYWxsb3dMb25nZXIgPSBlbmFibGVOdWxsID0gYWxsb3dJbmxpbmVUYWJsZU11bHRpTGluZUFuZFRyYWlsaW5nQ29tbWFFdmVuTm9Db21tYSA9IGVuYWJsZUludGVycG9sYXRpb25TdHJpbmcgPSBmYWxzZTtcblx0XHRwcm9jZXNzb3IgPSBudWxsO1xuXHRcdHR5cGlmeSA9IHRydWU7XG5cdH1cblx0ZWxzZSB7XG5cdFx0VGFibGVEZXBlbmRzID0gZXh0ZW5zaW9uT3B0aW9ucy5vcmRlciA/IE9yZGVyZWRUYWJsZSA6IFRhYmxlO1xuXHRcdG9wZW4gPSAhIWV4dGVuc2lvbk9wdGlvbnMub3Blbjtcblx0XHRhbGxvd0xvbmdlciA9ICEhZXh0ZW5zaW9uT3B0aW9ucy5sb25nZXI7XG5cdFx0ZW5hYmxlTnVsbCA9ICEhZXh0ZW5zaW9uT3B0aW9ucy5udWxsO1xuXHRcdGFsbG93SW5saW5lVGFibGVNdWx0aUxpbmVBbmRUcmFpbGluZ0NvbW1hRXZlbk5vQ29tbWEgPSAhIWV4dGVuc2lvbk9wdGlvbnMubXVsdGk7XG5cdFx0ZW5hYmxlSW50ZXJwb2xhdGlvblN0cmluZyA9ICEhZXh0ZW5zaW9uT3B0aW9ucy5pbnM7XG5cdFx0dHlwaWZ5ID0gIWV4dGVuc2lvbk9wdGlvbnMubWl4O1xuXHRcdHByb2Nlc3NvciA9IGV4dGVuc2lvbk9wdGlvbnMubmV3IHx8IG51bGw7XG5cdFx0aWYgKCBwcm9jZXNzb3IgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBwcm9jZXNzb3IhPT0nZnVuY3Rpb24nICkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdUT01MLnBhcnNlKCwsLCx4T3B0aW9ucy50YWcpJyk7IH1cblx0XHRcdGlmICggdHlwaWZ5ICkgeyB0aHJvdyBuZXcgRXJyb3IoJ1RPTUwucGFyc2UoLCwsLHhPcHRpb25zKSB4T3B0aW9ucy50YWcgbmVlZHMgeE9wdGlvbnMubWl4IHRvIGJlIHRydWUnKTsgfVxuXHRcdFx0Y29sbGVjdCA9IGNvbGxlY3Rfb247XG5cdFx0fVxuXHRcdGVsc2UgeyBjb2xsZWN0ID0gY29sbGVjdF9vZmY7IH1cblx0fVxuXHRpZiAoIHR5cGlmeSApIHtcblx0XHRhc051bGxzID0gYXNJbmxpbmVBcnJheU9mTnVsbHM7XG5cdFx0YXNTdHJpbmdzID0gYXNJbmxpbmVBcnJheU9mU3RyaW5ncztcblx0XHRhc1RhYmxlcyA9IGFzSW5saW5lQXJyYXlPZlRhYmxlcztcblx0XHRhc0FycmF5cyA9IGFzSW5saW5lQXJyYXlPZkFycmF5cztcblx0XHRhc0Jvb2xlYW5zID0gYXNJbmxpbmVBcnJheU9mQm9vbGVhbnM7XG5cdFx0YXNGbG9hdHMgPSBhc0lubGluZUFycmF5T2ZGbG9hdHM7XG5cdFx0YXNEYXRldGltZXMgPSBhc0lubGluZUFycmF5T2ZEYXRldGltZXM7XG5cdFx0YXNJbnRlZ2VycyA9IGFzSW5saW5lQXJyYXlPZkludGVnZXJzO1xuXHR9XG5cdGVsc2UgeyBhc051bGxzID0gYXNTdHJpbmdzID0gYXNUYWJsZXMgPSBhc0FycmF5cyA9IGFzQm9vbGVhbnMgPSBhc0Zsb2F0cyA9IGFzRGF0ZXRpbWVzID0gYXNJbnRlZ2VycyA9IHVuVHlwZTsgfVxufVxuIl19",
			"import SyntaxError from '.SyntaxError';\nimport Error from '.Error';\nimport Symbol from '.Symbol';\nimport Date from '.Date';\nimport * as RE from '../share/RE';\nimport * as iterator from '../share/iterator';\nconst literal_cache = Symbol('literal_cache');\nconst value_cache = Symbol('value_cache');\nexport class Datetime extends Date {\n    constructor(literal) {\n        // @ts-ignore\n        const { 0: hms_ms = '', 1: YMD = '', 2: T = '', 3: HMS_MS = hms_ms, 4: Z = '' } = RE.DATETIME.exec(literal) || iterator.throws(SyntaxError('Invalid Datetime ' + literal + ' at ' + iterator.where()));\n        super(Z ? YMD + 'T' + HMS_MS + Z :\n            T ? YMD + 'T' + HMS_MS :\n                YMD ? YMD + 'T00:00:00.000'\n                    : '1970-01-01T' + HMS_MS);\n        this.type =\n            Z ? 'Offset Date-Time' :\n                T ? 'Local Date-Time' :\n                    YMD ? 'Local Date'\n                        : 'Local Time';\n        this[literal_cache] = literal;\n        this[value_cache] = this.getTime();\n    }\n    //static isDatetime (value :any) :boolean { return value instanceof Datetime; }\n    //toJSON (this :Datetime) :string { return this.toISOString(); }\n    toISOString() {\n        if (this.getTime() === this[value_cache]) {\n            return this[literal_cache];\n        }\n        throw new Error('Datetime value has been modified.');\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGV0aW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sV0FBVyxNQUFNLGNBQWMsQ0FBQztBQUN2QyxPQUFPLEtBQUssTUFBTSxRQUFRLENBQUM7QUFDM0IsT0FBTyxNQUFNLE1BQU0sU0FBUyxDQUFDO0FBQzdCLE9BQU8sSUFBSSxNQUFNLE9BQU8sQ0FBQztBQUN6QixPQUFPLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsQyxPQUFPLEtBQUssUUFBUSxNQUFNLG1CQUFtQixDQUFDO0FBRTlDLE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUM5QyxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7QUFFMUMsTUFBTSxPQUFPLFFBQVMsU0FBUSxJQUFJO0lBSWpDLFlBQWEsT0FBZTtRQUMzQixhQUFhO1FBQ2IsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxNQUFNLEdBQUcsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLEdBQW9CLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLG1CQUFtQixHQUFDLE9BQU8sR0FBQyxNQUFNLEdBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNsTixLQUFLLENBQ0osQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUMsR0FBRyxHQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQixDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBQyxHQUFHLEdBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ25CLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFDLGVBQWU7b0JBQ3hCLENBQUMsQ0FBQyxhQUFhLEdBQUMsTUFBTSxDQUN6QixDQUFDO1FBQ0YsSUFBSSxDQUFDLElBQUk7WUFDUixDQUFDLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQztvQkFDdEIsR0FBRyxDQUFDLENBQUMsQ0FBQyxZQUFZO3dCQUNqQixDQUFDLENBQUMsWUFBWSxDQUFDO1FBQ25CLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxPQUFPLENBQUM7UUFDOUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRUQsK0VBQStFO0lBRS9FLGdFQUFnRTtJQUNoRSxXQUFXO1FBQ1YsSUFBSyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFHO1lBQUUsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7U0FBRTtRQUN6RSxNQUFNLElBQUksS0FBSyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7SUFDdEQsQ0FBQztDQUVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN5bnRheEVycm9yIGZyb20gJy5TeW50YXhFcnJvcic7XG5pbXBvcnQgRXJyb3IgZnJvbSAnLkVycm9yJztcbmltcG9ydCBTeW1ib2wgZnJvbSAnLlN5bWJvbCc7XG5pbXBvcnQgRGF0ZSBmcm9tICcuRGF0ZSc7XG5pbXBvcnQgKiBhcyBSRSBmcm9tICcuLi9zaGFyZS9SRSc7XG5pbXBvcnQgKiBhcyBpdGVyYXRvciBmcm9tICcuLi9zaGFyZS9pdGVyYXRvcic7XG5cbmNvbnN0IGxpdGVyYWxfY2FjaGUgPSBTeW1ib2woJ2xpdGVyYWxfY2FjaGUnKTtcbmNvbnN0IHZhbHVlX2NhY2hlID0gU3ltYm9sKCd2YWx1ZV9jYWNoZScpO1xuXG5leHBvcnQgY2xhc3MgRGF0ZXRpbWUgZXh0ZW5kcyBEYXRlIHtcblx0XG5cdHR5cGUgOnN0cmluZztcblx0XG5cdGNvbnN0cnVjdG9yIChsaXRlcmFsIDpzdHJpbmcpIHtcblx0XHQvLyBAdHMtaWdub3JlXG5cdFx0Y29uc3QgeyAwOiBobXNfbXMgPSAnJywgMTogWU1EID0gJycsIDI6IFQgPSAnJywgMzogSE1TX01TID0gaG1zX21zLCA0OiBaID0gJycgfSA6UmVnRXhwRXhlY0FycmF5ID0gUkUuREFURVRJTUUuZXhlYyhsaXRlcmFsKSB8fCBpdGVyYXRvci50aHJvd3MoU3ludGF4RXJyb3IoJ0ludmFsaWQgRGF0ZXRpbWUgJytsaXRlcmFsKycgYXQgJytpdGVyYXRvci53aGVyZSgpKSk7XG5cdFx0c3VwZXIoXG5cdFx0XHRaID8gWU1EKydUJytITVNfTVMrWiA6XG5cdFx0XHRcdFQgPyBZTUQrJ1QnK0hNU19NUyA6XG5cdFx0XHRcdFx0WU1EID8gWU1EKydUMDA6MDA6MDAuMDAwJ1xuXHRcdFx0XHRcdFx0OiAnMTk3MC0wMS0wMVQnK0hNU19NU1xuXHRcdCk7XG5cdFx0dGhpcy50eXBlID1cblx0XHRcdFogPyAnT2Zmc2V0IERhdGUtVGltZScgOlxuXHRcdFx0XHRUID8gJ0xvY2FsIERhdGUtVGltZScgOlxuXHRcdFx0XHRcdFlNRCA/ICdMb2NhbCBEYXRlJ1xuXHRcdFx0XHRcdFx0OiAnTG9jYWwgVGltZSc7XG5cdFx0dGhpc1tsaXRlcmFsX2NhY2hlXSA9IGxpdGVyYWw7XG5cdFx0dGhpc1t2YWx1ZV9jYWNoZV0gPSB0aGlzLmdldFRpbWUoKTtcblx0fVxuXHRcblx0Ly9zdGF0aWMgaXNEYXRldGltZSAodmFsdWUgOmFueSkgOmJvb2xlYW4geyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBEYXRldGltZTsgfVxuXHRcblx0Ly90b0pTT04gKHRoaXMgOkRhdGV0aW1lKSA6c3RyaW5nIHsgcmV0dXJuIHRoaXMudG9JU09TdHJpbmcoKTsgfVxuXHR0b0lTT1N0cmluZyAodGhpcyA6RGF0ZXRpbWUpIDpzdHJpbmcge1xuXHRcdGlmICggdGhpcy5nZXRUaW1lKCk9PT10aGlzW3ZhbHVlX2NhY2hlXSApIHsgcmV0dXJuIHRoaXNbbGl0ZXJhbF9jYWNoZV07IH1cblx0XHR0aHJvdyBuZXcgRXJyb3IoJ0RhdGV0aW1lIHZhbHVlIGhhcyBiZWVuIG1vZGlmaWVkLicpO1xuXHR9XG5cdFxufVxuIl19",
			"import SyntaxError from '.SyntaxError';\nimport * as RE from '../share/RE';\n//import Infinity, NaN from '.Infinity'+'.NaN';\nimport * as iterator from '../share/iterator';\n// @ts-ignore\nexport const Float = (literal) => {\n    if (RE.FLOAT.test(literal) && RE.FLOAT_NOT_INTEGER.test(literal)) {\n        return +literal.replace(RE.UNDERSCORES, '');\n        //const number = +literal.replace(RE.UNDERSCORES, '');\n        //isFinite(number) || iterator.throws(RangeError('Float can not be as big as Infinity, like '+literal+' at '+where()));\n        //return number;\n    }\n    //if ( literal==='inf' || literal==='+inf' ) { return Infinity; }\n    //if ( literal==='-inf' ) { return -Infinity; }\n    //if ( literal==='nan' || literal==='+nan' || literal==='-nan' ) { return NaN; }\n    iterator.throws(SyntaxError('Invalid Float ' + literal + ' at ' + iterator.where()));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZsb2F0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sV0FBVyxNQUFNLGNBQWMsQ0FBQztBQUN2QyxPQUFPLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsQywrQ0FBK0M7QUFDL0MsT0FBTyxLQUFLLFFBQVEsTUFBTSxtQkFBbUIsQ0FBQztBQUU5QyxhQUFhO0FBQ2IsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLENBQUMsT0FBZSxFQUFVLEVBQUU7SUFDaEQsSUFBSyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFHO1FBQ25FLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDNUMsc0RBQXNEO1FBQ3RELHVIQUF1SDtRQUN2SCxnQkFBZ0I7S0FDaEI7SUFDRCxpRUFBaUU7SUFDakUsK0NBQStDO0lBQy9DLGdGQUFnRjtJQUNoRixRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsR0FBQyxPQUFPLEdBQUMsTUFBTSxHQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDaEYsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN5bnRheEVycm9yIGZyb20gJy5TeW50YXhFcnJvcic7XG5pbXBvcnQgKiBhcyBSRSBmcm9tICcuLi9zaGFyZS9SRSc7XG4vL2ltcG9ydCBJbmZpbml0eSwgTmFOIGZyb20gJy5JbmZpbml0eScrJy5OYU4nO1xuaW1wb3J0ICogYXMgaXRlcmF0b3IgZnJvbSAnLi4vc2hhcmUvaXRlcmF0b3InO1xuXG4vLyBAdHMtaWdub3JlXG5leHBvcnQgY29uc3QgRmxvYXQgPSAobGl0ZXJhbCA6c3RyaW5nKSA6bnVtYmVyID0+IHtcblx0aWYgKCBSRS5GTE9BVC50ZXN0KGxpdGVyYWwpICYmIFJFLkZMT0FUX05PVF9JTlRFR0VSLnRlc3QobGl0ZXJhbCkgKSB7XG5cdFx0cmV0dXJuICtsaXRlcmFsLnJlcGxhY2UoUkUuVU5ERVJTQ09SRVMsICcnKTtcblx0XHQvL2NvbnN0IG51bWJlciA9ICtsaXRlcmFsLnJlcGxhY2UoUkUuVU5ERVJTQ09SRVMsICcnKTtcblx0XHQvL2lzRmluaXRlKG51bWJlcikgfHwgaXRlcmF0b3IudGhyb3dzKFJhbmdlRXJyb3IoJ0Zsb2F0IGNhbiBub3QgYmUgYXMgYmlnIGFzIEluZmluaXR5LCBsaWtlICcrbGl0ZXJhbCsnIGF0ICcrd2hlcmUoKSkpO1xuXHRcdC8vcmV0dXJuIG51bWJlcjtcblx0fVxuXHQvL2lmICggbGl0ZXJhbD09PSdpbmYnIHx8IGxpdGVyYWw9PT0nK2luZicgKSB7IHJldHVybiBJbmZpbml0eTsgfVxuXHQvL2lmICggbGl0ZXJhbD09PSctaW5mJyApIHsgcmV0dXJuIC1JbmZpbml0eTsgfVxuXHQvL2lmICggbGl0ZXJhbD09PSduYW4nIHx8IGxpdGVyYWw9PT0nK25hbicgfHwgbGl0ZXJhbD09PSctbmFuJyApIHsgcmV0dXJuIE5hTjsgfVxuXHRpdGVyYXRvci50aHJvd3MoU3ludGF4RXJyb3IoJ0ludmFsaWQgRmxvYXQgJytsaXRlcmFsKycgYXQgJytpdGVyYXRvci53aGVyZSgpKSk7XG59O1xuIl19",
			"import SyntaxError from '.SyntaxError';\nimport RangeError from '.RangeError';\nimport parseInt from '.parseInt';\nimport fromCodePoint from '.String.fromCodePoint';\nimport * as iterator from '../share/iterator';\nimport * as options from '../share/options';\nimport * as RE from '../share/RE';\nconst ESCAPE_ALIAS = { b: '\\b', t: '\\t', n: '\\n', f: '\\f', r: '\\r' };\nconst unEscapeSingleLine = (match, p1, p2, p3, p4) => {\n    if (p1) {\n        return p1;\n    }\n    if (p2) {\n        return ESCAPE_ALIAS[p2];\n    }\n    const codePoint = parseInt(p3 || p4, 16);\n    (0xD7FF < codePoint && codePoint < 0xE000 || 0x10FFFF < codePoint)\n        && iterator.throws(RangeError('Invalid Unicode Scalar ' + (p3 ? '\\\\u' + p3 : '\\\\U' + p4) + ' at ' + iterator.where()));\n    return fromCodePoint(codePoint);\n};\nconst unEscapeMultiLine = (match, p1, p2, p3, p4, p5) => {\n    if (match === '\\n') {\n        return options.useWhatToJoinMultiLineString;\n    }\n    if (p1) {\n        p1.includes('\\n')\n            || iterator.throws(SyntaxError('Back slash leading whitespaces can only appear at the end of a line, but see ' + iterator.where()));\n        return '';\n    }\n    if (p2) {\n        return p2;\n    }\n    if (p3) {\n        return ESCAPE_ALIAS[p3];\n    }\n    const codePoint = parseInt(p4 || p5, 16);\n    (0xD7FF < codePoint && codePoint < 0xE000 || 0x10FFFF < codePoint)\n        && iterator.throws(RangeError('Invalid Unicode Scalar ' + (p4 ? '\\\\u' + p4 : '\\\\U' + p5) + ' at ' + iterator.where()));\n    return fromCodePoint(codePoint);\n};\nexport const BasicString = (literal) => literal.replace(RE.ESCAPED_IN_SINGLE_LINE, unEscapeSingleLine);\nexport const MultiLineBasicString = (literal) => literal.replace(RE.ESCAPED_IN_MULTI_LINE, unEscapeMultiLine);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFHLENBQUMsT0FBZSxFQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBRXZILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLENBQUMsT0FBZSxFQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxxQkFBcUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN5bnRheEVycm9yIGZyb20gJy5TeW50YXhFcnJvcic7XG5pbXBvcnQgUmFuZ2VFcnJvciBmcm9tICcuUmFuZ2VFcnJvcic7XG5pbXBvcnQgcGFyc2VJbnQgZnJvbSAnLnBhcnNlSW50JztcbmltcG9ydCBmcm9tQ29kZVBvaW50IGZyb20gJy5TdHJpbmcuZnJvbUNvZGVQb2ludCc7XG5pbXBvcnQgKiBhcyBpdGVyYXRvciBmcm9tICcuLi9zaGFyZS9pdGVyYXRvcic7XG5pbXBvcnQgKiBhcyBvcHRpb25zIGZyb20gJy4uL3NoYXJlL29wdGlvbnMnO1xuaW1wb3J0ICogYXMgUkUgZnJvbSAnLi4vc2hhcmUvUkUnO1xuXG5jb25zdCBFU0NBUEVfQUxJQVMgPSB7IGI6ICdcXGInLCB0OiAnXFx0JywgbjogJ1xcbicsIGY6ICdcXGYnLCByOiAnXFxyJyB9O1xuXG50eXBlIHAgPSBzdHJpbmcgfCB1bmRlZmluZWQ7XG50eXBlIGJ0bmZyID0gJ2InIHwgJ2InIHwgJ24nIHwgJ2YnIHwgJ3InIHwgdW5kZWZpbmVkO1xuXG5jb25zdCB1bkVzY2FwZVNpbmdsZUxpbmUgPSAobWF0Y2ggOnN0cmluZywgcDEgOidcIicgfCB1bmRlZmluZWQsIHAyIDpidG5mciwgcDMgOnAsIHA0IDpwKSA6c3RyaW5nID0+IHtcblx0aWYgKCBwMSApIHsgcmV0dXJuIHAxOyB9XG5cdGlmICggcDIgKSB7IHJldHVybiBFU0NBUEVfQUxJQVNbcDJdOyB9XG5cdGNvbnN0IGNvZGVQb2ludCA6bnVtYmVyID0gcGFyc2VJbnQocDMgfHwgPHN0cmluZz5wNCwgMTYpO1xuXHQoIDB4RDdGRjxjb2RlUG9pbnQgJiYgY29kZVBvaW50PDB4RTAwMCB8fCAweDEwRkZGRjxjb2RlUG9pbnQgKVxuXHQmJiBpdGVyYXRvci50aHJvd3MoUmFuZ2VFcnJvcignSW52YWxpZCBVbmljb2RlIFNjYWxhciAnKyggcDMgPyAnXFxcXHUnK3AzIDogJ1xcXFxVJytwNCApKycgYXQgJytpdGVyYXRvci53aGVyZSgpKSk7XG5cdHJldHVybiBmcm9tQ29kZVBvaW50KGNvZGVQb2ludCk7XG59O1xuXG5jb25zdCB1bkVzY2FwZU11bHRpTGluZSA9IChtYXRjaCA6c3RyaW5nLCBwMSA6J1xcbicgfCB1bmRlZmluZWQsIHAyIDonXCInLCBwMyA6YnRuZnIsIHA0IDpwLCBwNSA6cCkgOnN0cmluZyA9PiB7XG5cdGlmICggbWF0Y2g9PT0nXFxuJyApIHsgcmV0dXJuIG9wdGlvbnMudXNlV2hhdFRvSm9pbk11bHRpTGluZVN0cmluZzsgfVxuXHRpZiAoIHAxICkge1xuXHRcdHAxLmluY2x1ZGVzKCdcXG4nKVxuXHRcdHx8IGl0ZXJhdG9yLnRocm93cyhTeW50YXhFcnJvcignQmFjayBzbGFzaCBsZWFkaW5nIHdoaXRlc3BhY2VzIGNhbiBvbmx5IGFwcGVhciBhdCB0aGUgZW5kIG9mIGEgbGluZSwgYnV0IHNlZSAnK2l0ZXJhdG9yLndoZXJlKCkpKTtcblx0XHRyZXR1cm4gJyc7XG5cdH1cblx0aWYgKCBwMiApIHsgcmV0dXJuIHAyOyB9XG5cdGlmICggcDMgKSB7IHJldHVybiBFU0NBUEVfQUxJQVNbcDNdOyB9XG5cdGNvbnN0IGNvZGVQb2ludCA6bnVtYmVyID0gcGFyc2VJbnQocDQgfHwgPHN0cmluZz5wNSwgMTYpO1xuXHQoIDB4RDdGRjxjb2RlUG9pbnQgJiYgY29kZVBvaW50PDB4RTAwMCB8fCAweDEwRkZGRjxjb2RlUG9pbnQgKVxuXHQmJiBpdGVyYXRvci50aHJvd3MoUmFuZ2VFcnJvcignSW52YWxpZCBVbmljb2RlIFNjYWxhciAnKyggcDQgPyAnXFxcXHUnK3A0IDogJ1xcXFxVJytwNSApKycgYXQgJytpdGVyYXRvci53aGVyZSgpKSk7XG5cdHJldHVybiBmcm9tQ29kZVBvaW50KGNvZGVQb2ludCk7XG59O1xuXG5leHBvcnQgY29uc3QgQmFzaWNTdHJpbmcgPSAobGl0ZXJhbCA6c3RyaW5nKSA6c3RyaW5nID0+IGxpdGVyYWwucmVwbGFjZShSRS5FU0NBUEVEX0lOX1NJTkdMRV9MSU5FLCB1bkVzY2FwZVNpbmdsZUxpbmUpO1xuXG5leHBvcnQgY29uc3QgTXVsdGlMaW5lQmFzaWNTdHJpbmcgPSAobGl0ZXJhbCA6c3RyaW5nKSA6c3RyaW5nID0+IGxpdGVyYWwucmVwbGFjZShSRS5FU0NBUEVEX0lOX01VTFRJX0xJTkUsIHVuRXNjYXBlTXVsdGlMaW5lKTtcbiJdfQ==",
			"import SyntaxError from '.SyntaxError';\nimport Error from '.Error';\nimport isArray from '.Array.isArray';\nimport WeakSet from '.WeakSet';\nimport * as iterator from '../share/iterator';\nimport { isTable } from '../types/Table';\nimport { BasicString, MultiLineBasicString } from '../types/String';\nimport * as options from '../share/options';\nimport * as RE from '../share/RE';\nexport const sealedInline = new WeakSet;\nconst openTables = new WeakSet;\nexport function appendTable(table, key_key, asArrayItem, tag) {\n    const leadingKeys = parseKeys(key_key);\n    const finalKey = leadingKeys.pop();\n    table = prepareTable(table, leadingKeys);\n    let lastTable;\n    if (asArrayItem) {\n        let arrayOfTables;\n        if (finalKey in table) {\n            sealedInline.has(arrayOfTables = table[finalKey]) && iterator.throws(Error('Trying to push Table to non-ArrayOfTables value at ' + iterator.where()));\n        }\n        else {\n            arrayOfTables = table[finalKey] = [];\n        }\n        tag && options.collect({ table, key: finalKey, array: arrayOfTables, index: arrayOfTables.length, tag });\n        arrayOfTables.push(lastTable = new options.TableDepends);\n    }\n    else {\n        if (finalKey in table) {\n            options.open && openTables.has(lastTable = table[finalKey]) || iterator.throws(Error('Duplicate Table definition at ' + iterator.where()));\n            openTables.delete(lastTable);\n        }\n        else {\n            table[finalKey] = lastTable = new options.TableDepends;\n        }\n        tag && options.collect({ table, key: finalKey, tag });\n    }\n    return lastTable;\n}\nexport function parseKeys(key_key) {\n    const keys = key_key.match(RE.KEYS);\n    for (let index = keys.length; index--;) {\n        const key = keys[index];\n        if (key.startsWith('\\'')) {\n            keys[index] = key.slice(1, -1);\n        }\n        else if (key.startsWith('\"')) {\n            keys[index] = BasicString(key.slice(1, -1));\n        }\n    }\n    return keys;\n}\nfunction prepareTable(table, keys) {\n    const { length } = keys;\n    let index = 0;\n    while (index < length) {\n        const key = keys[index++];\n        if (key in table) {\n            table = table[key];\n            if (isTable(table)) {\n                sealedInline.has(table) && iterator.throws(Error('Trying to define table through static Inline Object at ' + iterator.where()));\n            }\n            else if (isArray(table)) {\n                sealedInline.has(table) && iterator.throws(Error('Trying to append value to static Inline Array at ' + iterator.where()));\n                // @ts-ignore\n                table = table[table.length - 1];\n            }\n            else {\n                iterator.throws(Error('Trying to define table through non-Table value at ' + iterator.where()));\n            }\n        }\n        else {\n            openTables.add(table = table[key] = new options.TableDepends);\n            while (index < length) {\n                openTables.add(table = table[keys[index++]] = new options.TableDepends);\n            }\n            return table;\n        }\n    }\n    return table;\n}\nexport function prepareInlineTable(table, keys) {\n    const { length } = keys;\n    let index = 0;\n    while (index < length) {\n        const key = keys[index++];\n        if (key in table) {\n            table = table[key];\n            isTable(table) || iterator.throws(Error('Trying to assign property through non-Table value at ' + iterator.where()));\n            sealedInline.has(table) && iterator.throws(Error('Trying to assign property through static Inline Object at ' + iterator.where()));\n        }\n        else {\n            table = table[key] = new options.TableDepends;\n            while (index < length) {\n                table = table[keys[index++]] = new options.TableDepends;\n            }\n            return table;\n        }\n    }\n    return table;\n}\nexport function assignLiteralString(table, finalKey, literal) {\n    let $;\n    if (literal.charAt(1) !== '\\'' || literal.charAt(2) !== '\\'') {\n        $ = RE.LITERAL_STRING.exec(literal) || iterator.throws(SyntaxError(iterator.where()));\n        table[finalKey] = $[1];\n        return $[2];\n    }\n    literal = literal.slice(3);\n    $ = RE.MULTI_LINE_LITERAL_STRING.exec(literal);\n    if ($) {\n        table[finalKey] = checkLiteralString($[1]);\n        return $[2];\n    }\n    if (literal) {\n        checkLiteralString(literal);\n        literal += options.useWhatToJoinMultiLineString;\n    }\n    const start = iterator.mark();\n    for (;;) {\n        const line = iterator.must('Literal String', start);\n        $ = RE.MULTI_LINE_LITERAL_STRING.exec(line);\n        if ($) {\n            table[finalKey] = literal + checkLiteralString($[1]);\n            return $[2];\n        }\n        literal += line + options.useWhatToJoinMultiLineString;\n    }\n}\nfunction checkLiteralString(literal) {\n    RE.CONTROL_CHARACTER_EXCLUDE_TAB.test(literal) && iterator.throws(SyntaxError('Control characters other than tab are not permitted in a Multi-Line Literal String, which was found at ' + iterator.where()));\n    return literal;\n}\nexport function assignBasicString(table, finalKey, literal) {\n    if (literal.charAt(1) !== '\"' || literal.charAt(2) !== '\"') {\n        const $ = RE.BASIC_STRING_exec(literal);\n        table[finalKey] = BasicString($[1]);\n        return $[2];\n    }\n    literal = literal.slice(3);\n    const $ = RE.MULTI_LINE_BASIC_STRING_exec_0(literal);\n    if (literal.startsWith('\"\"\"', $.length)) {\n        RE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test($) || iterator.throws(SyntaxError(iterator.where()));\n        table[finalKey] = BasicString($);\n        return literal.slice($.length + 3).replace(RE.PRE_WHITESPACE, '');\n    }\n    if (literal) {\n        literal += '\\n';\n        RE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test(literal) || iterator.throws(SyntaxError(iterator.where()));\n    }\n    const start = iterator.mark();\n    for (;;) {\n        let line = iterator.must('Basic String', start);\n        const $ = RE.MULTI_LINE_BASIC_STRING_exec_0(line);\n        if (line.startsWith('\"\"\"', $.length)) {\n            RE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test($) || iterator.throws(SyntaxError(iterator.where()));\n            table[finalKey] = MultiLineBasicString(literal + $);\n            return line.slice($.length + 3).replace(RE.PRE_WHITESPACE, '');\n        }\n        line += '\\n';\n        RE.ESCAPED_EXCLUDE_CONTROL_CHARACTER_test(line) || iterator.throws(SyntaxError(iterator.where()));\n        literal += line;\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
			"import SyntaxError from '.SyntaxError';\nimport * as iterator from '../share/iterator';\nimport * as options from '../share/options';\nimport * as RE from '../share/RE';\nconst DELIMITER_CHECK = /[^`]/;\nexport function assignInterpolationString(table, finalKey, delimiter) {\n    options.enableInterpolationString || iterator.throws(SyntaxError(iterator.where()));\n    DELIMITER_CHECK.test(delimiter) && iterator.throws(SyntaxError('Interpolation String opening tag incorrect at ' + iterator.where()));\n    let string;\n    let lineRest;\n    {\n        const literals = [];\n        for (const start = iterator.mark();;) {\n            const literal = iterator.must('Interpolation String', start);\n            if (literal.startsWith(delimiter)) {\n                lineRest = literal.slice(delimiter.length).replace(RE.PRE_WHITESPACE, '');\n                break;\n            }\n            literals.push(literal);\n        }\n        string = literals.join('\\n');\n    }\n    table[finalKey] = string;\n    return lineRest;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIngtZmVhdHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFdBQVcsTUFBTSxjQUFjLENBQUM7QUFDdkMsT0FBTyxLQUFLLFFBQVEsTUFBTSxtQkFBbUIsQ0FBQztBQUM5QyxPQUFPLEtBQUssT0FBTyxNQUFNLGtCQUFrQixDQUFDO0FBQzVDLE9BQU8sS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRWxDLE1BQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQztBQUUvQixNQUFNLFVBQVUseUJBQXlCLENBQUUsS0FBYSxFQUFFLFFBQWdCLEVBQUUsU0FBaUI7SUFDNUYsT0FBTyxDQUFDLHlCQUF5QixJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEYsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxnREFBZ0QsR0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ25JLElBQUksTUFBYyxDQUFDO0lBQ25CLElBQUksUUFBZ0IsQ0FBQztJQUNyQjtRQUNDLE1BQU0sUUFBUSxHQUFhLEVBQUUsQ0FBQztRQUM5QixLQUFNLE1BQU0sS0FBSyxHQUFXLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBTTtZQUNoRCxNQUFNLE9BQU8sR0FBVyxRQUFRLENBQUMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3JFLElBQUssT0FBTyxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsRUFBRztnQkFDcEMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUMxRSxNQUFNO2FBQ047WUFDRCxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3ZCO1FBQ0QsTUFBTSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDN0I7SUFDRCxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLE9BQU8sUUFBUSxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ludGF4RXJyb3IgZnJvbSAnLlN5bnRheEVycm9yJztcbmltcG9ydCAqIGFzIGl0ZXJhdG9yIGZyb20gJy4uL3NoYXJlL2l0ZXJhdG9yJztcbmltcG9ydCAqIGFzIG9wdGlvbnMgZnJvbSAnLi4vc2hhcmUvb3B0aW9ucyc7XG5pbXBvcnQgKiBhcyBSRSBmcm9tICcuLi9zaGFyZS9SRSc7XG5cbmNvbnN0IERFTElNSVRFUl9DSEVDSyA9IC9bXmBdLztcblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2lnbkludGVycG9sYXRpb25TdHJpbmcgKHRhYmxlIDpvYmplY3QsIGZpbmFsS2V5IDpzdHJpbmcsIGRlbGltaXRlciA6c3RyaW5nKSA6c3RyaW5nIHtcblx0b3B0aW9ucy5lbmFibGVJbnRlcnBvbGF0aW9uU3RyaW5nIHx8IGl0ZXJhdG9yLnRocm93cyhTeW50YXhFcnJvcihpdGVyYXRvci53aGVyZSgpKSk7XG5cdERFTElNSVRFUl9DSEVDSy50ZXN0KGRlbGltaXRlcikgJiYgaXRlcmF0b3IudGhyb3dzKFN5bnRheEVycm9yKCdJbnRlcnBvbGF0aW9uIFN0cmluZyBvcGVuaW5nIHRhZyBpbmNvcnJlY3QgYXQgJytpdGVyYXRvci53aGVyZSgpKSk7XG5cdGxldCBzdHJpbmcgOnN0cmluZztcblx0bGV0IGxpbmVSZXN0IDpzdHJpbmc7XG5cdHtcblx0XHRjb25zdCBsaXRlcmFscyA6c3RyaW5nW10gPSBbXTtcblx0XHRmb3IgKCBjb25zdCBzdGFydCA6bnVtYmVyID0gaXRlcmF0b3IubWFyaygpOyA7ICkge1xuXHRcdFx0Y29uc3QgbGl0ZXJhbCA6c3RyaW5nID0gaXRlcmF0b3IubXVzdCgnSW50ZXJwb2xhdGlvbiBTdHJpbmcnLCBzdGFydCk7XG5cdFx0XHRpZiAoIGxpdGVyYWwuc3RhcnRzV2l0aChkZWxpbWl0ZXIpICkge1xuXHRcdFx0XHRsaW5lUmVzdCA9IGxpdGVyYWwuc2xpY2UoZGVsaW1pdGVyLmxlbmd0aCkucmVwbGFjZShSRS5QUkVfV0hJVEVTUEFDRSwgJycpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGxpdGVyYWxzLnB1c2gobGl0ZXJhbCk7XG5cdFx0fVxuXHRcdHN0cmluZyA9IGxpdGVyYWxzLmpvaW4oJ1xcbicpO1xuXHR9XG5cdHRhYmxlW2ZpbmFsS2V5XSA9IHN0cmluZztcblx0cmV0dXJuIGxpbmVSZXN0O1xufVxuIl19",
			"import SyntaxError from '.SyntaxError';\nimport Error from '.Error';\nimport Infinity from '.Infinity';\nimport NaN from '.NaN';\nimport * as iterator from '../share/iterator';\nimport { Datetime } from '../types/Datetime';\nimport { Float } from '../types/Float';\nimport * as options from '../share/options';\nimport * as RE from '../share/RE';\nimport { sealedInline, appendTable, parseKeys, prepareInlineTable, assignLiteralString, assignBasicString } from './on-the-spot';\nimport { assignInterpolationString } from './x-feature';\nexport default function Root() {\n    const rootTable = new options.TableDepends;\n    let lastSectionTable = rootTable;\n    while (iterator.rest()) {\n        const line = iterator.next().replace(RE.PRE_WHITESPACE, '');\n        if (line === '') { }\n        else if (line.startsWith('#')) { }\n        else if (line.startsWith('[')) {\n            const { $_asArrayItem$$, keys, tagInner, $$asArrayItem$_, tagOuter } = RE.TABLE_DEFINITION_exec_groups(line);\n            $_asArrayItem$$ === $$asArrayItem$_ || iterator.throws(SyntaxError('Square brackets of table define statement not match at ' + iterator.where()));\n            tagInner && tagOuter && iterator.throws(SyntaxError('Tag for table define statement can not both in and out, which at ' + iterator.where()));\n            lastSectionTable = appendTable(rootTable, keys, $_asArrayItem$$, tagOuter || tagInner);\n        }\n        else {\n            let rest = assign(lastSectionTable, line);\n            while (iterator.stacks_length) {\n                rest = iterator.stacks_pop()(rest);\n            }\n            rest === '' || rest.startsWith('#') || iterator.throws(SyntaxError(iterator.where()));\n        }\n    }\n    return rootTable;\n}\n;\nfunction assign(lastInlineTable_array, lineRest) {\n    let left;\n    let tagLeft;\n    let tagRight;\n    ({ left, tagLeft, tagRight, right: lineRest } = RE.KEY_VALUE_PAIR_exec_groups(lineRest));\n    const leadingKeys = parseKeys(left);\n    const finalKey = leadingKeys.pop();\n    const table = prepareInlineTable(lastInlineTable_array, leadingKeys);\n    finalKey in table && iterator.throws(Error('Duplicate property definition at ' + iterator.where()));\n    tagLeft && tagRight && iterator.throws(SyntaxError('Tag for key/value pair can not both left and right, which at ' + iterator.where()));\n    (tagLeft || tagRight) && options.collect({ parent: table, key: finalKey, tag: tagLeft || tagRight });\n    switch (lineRest[0]) {\n        case '\\'':\n            return assignLiteralString(table, finalKey, lineRest);\n        case '\"':\n            return assignBasicString(table, finalKey, lineRest);\n        case '`':\n            return assignInterpolationString(table, finalKey, lineRest);\n        case '{':\n            iterator.stacks_push(lineRest => equalInlineTable(table, finalKey, lineRest));\n            return lineRest;\n        case '[':\n            iterator.stacks_push(lineRest => equalInlineArray(table, finalKey, lineRest));\n            return lineRest;\n    }\n    let literal;\n    ({ 1: literal, 2: lineRest } = RE.VALUE_REST.exec(lineRest) || iterator.throws(SyntaxError(iterator.where())));\n    table[finalKey] =\n        literal === 'true' ? true : literal === 'false' ? false :\n            literal === 'inf' || literal === '+inf' ? Infinity : literal === '-inf' ? -Infinity :\n                literal === 'nan' || literal === '+nan' || literal === '-nan' ? NaN :\n                    literal.includes(':') || literal.indexOf('-') !== literal.lastIndexOf('-') && !literal.startsWith('-') ? new Datetime(literal) :\n                        literal.includes('.') || (literal.includes('e') || literal.includes('E')) && !literal.startsWith('0x') ? Float(literal) :\n                            options.enableNull && literal === 'null' ? null :\n                                options.IntegerDepends(literal);\n    return lineRest;\n}\nfunction push(lastInlineTable_array, lineRest) {\n    if (lineRest.startsWith('(')) {\n        let tag;\n        ({ 1: tag, 2: lineRest } = RE._VALUE_PAIR.exec(lineRest) || iterator.throws(SyntaxError(iterator.where())));\n        options.collect({ array: lastInlineTable_array, index: lastInlineTable_array.length, tag });\n    }\n    const lastIndex = '' + lastInlineTable_array.length;\n    switch (lineRest[0]) {\n        case '\\'':\n            return assignLiteralString(options.asStrings(lastInlineTable_array), lastIndex, lineRest);\n        case '\"':\n            return assignBasicString(options.asStrings(lastInlineTable_array), lastIndex, lineRest);\n        case '`':\n            return assignInterpolationString(options.asStrings(lastInlineTable_array), lastIndex, lineRest);\n        case '{':\n            iterator.stacks_push(lineRest => equalInlineTable(options.asTables(lastInlineTable_array), lastIndex, lineRest));\n            return lineRest;\n        case '[':\n            iterator.stacks_push(lineRest => equalInlineArray(options.asArrays(lastInlineTable_array), lastIndex, lineRest));\n            return lineRest;\n    }\n    let literal;\n    ({ 1: literal, 2: lineRest } = RE.VALUE_REST.exec(lineRest) || iterator.throws(SyntaxError(iterator.where())));\n    if (literal === 'true') {\n        options.asBooleans(lastInlineTable_array).push(true);\n    }\n    else if (literal === 'false') {\n        options.asBooleans(lastInlineTable_array).push(false);\n    }\n    else if (literal === 'inf' || literal === '+inf') {\n        options.asFloats(lastInlineTable_array).push(Infinity);\n    }\n    else if (literal === '-inf') {\n        options.asFloats(lastInlineTable_array).push(-Infinity);\n    }\n    else if (literal === 'nan' || literal === '+nan' || literal === '-nan') {\n        options.asFloats(lastInlineTable_array).push(NaN);\n    }\n    else if (literal.includes(':') || literal.indexOf('-') !== literal.lastIndexOf('-') && !literal.startsWith('-')) {\n        options.asDatetimes(lastInlineTable_array).push(new Datetime(literal));\n    }\n    else if (literal.includes('.') || (literal.includes('e') || literal.includes('E')) && !literal.startsWith('0x')) {\n        options.asFloats(lastInlineTable_array).push(Float(literal));\n    }\n    else if (options.enableNull && literal === 'null') {\n        options.asNulls(lastInlineTable_array).push(null);\n    }\n    else {\n        options.asIntegers(lastInlineTable_array).push(options.IntegerDepends(literal));\n    }\n    return lineRest;\n}\nfunction equalInlineTable(table, finalKey, lineRest) {\n    const inlineTable = table[finalKey] = new options.TableDepends;\n    sealedInline.add(inlineTable);\n    lineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n    if (options.allowInlineTableMultiLineAndTrailingCommaEvenNoComma) {\n        const start = iterator.mark();\n        const length = iterator.stacks_length;\n        return function callee(lineRest) {\n            for (;;) {\n                while (lineRest === '' || lineRest.startsWith('#')) {\n                    lineRest = iterator.must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n                }\n                if (lineRest.startsWith('}')) {\n                    return lineRest.replace(RE.SYM_WHITESPACE, '');\n                }\n                lineRest = assign(inlineTable, lineRest);\n                if (iterator.stacks_length > length) {\n                    iterator.stacks_insertBeforeLast(function inserted(lineRest) {\n                        //\n                        while (lineRest === '' || lineRest.startsWith('#')) { //\n                            lineRest = iterator.must('Inline Table', start).replace(RE.PRE_WHITESPACE, ''); //\n                        } //\n                        if (lineRest.startsWith(',')) {\n                            lineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n                        } //\n                        //\n                        return callee(lineRest);\n                    });\n                    return lineRest;\n                }\n                while (lineRest === '' || lineRest.startsWith('#')) {\n                    lineRest = iterator.must('Inline Table', start).replace(RE.PRE_WHITESPACE, '');\n                }\n                if (lineRest.startsWith(',')) {\n                    lineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n                }\n            }\n        }(lineRest);\n    }\n    else {\n        if (lineRest.startsWith('}')) {\n            return lineRest.replace(RE.SYM_WHITESPACE, '');\n        }\n        (lineRest === '' || lineRest.startsWith('#')) && iterator.throws(SyntaxError('Inline Table is intended to appear on a single line, which broken at ' + iterator.where()));\n        const length = iterator.stacks_length;\n        return function callee(lineRest) {\n            for (;;) {\n                lineRest = assign(inlineTable, lineRest);\n                if (iterator.stacks_length > length) {\n                    iterator.stacks_insertBeforeLast(function inserted(lineRest) {\n                        //\n                        if (lineRest.startsWith('}')) {\n                            return lineRest.replace(RE.SYM_WHITESPACE, '');\n                        } //\n                        if (lineRest.startsWith(',')) { //\n                            lineRest = lineRest.replace(RE.SYM_WHITESPACE, ''); //\n                            lineRest.startsWith('}') && iterator.throws(SyntaxError('The last property of an Inline Table can not have a trailing comma, which was found at ' + iterator.where())); //\n                        } //\n                        (lineRest === '' || lineRest.startsWith('#')) && iterator.throws(SyntaxError('Inline Table is intended to appear on a single line, which broken at ' + iterator.where())); //\n                        //\n                        return callee(lineRest);\n                    });\n                    return lineRest;\n                }\n                if (lineRest.startsWith('}')) {\n                    return lineRest.replace(RE.SYM_WHITESPACE, '');\n                }\n                if (lineRest.startsWith(',')) {\n                    lineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n                    lineRest.startsWith('}') && iterator.throws(SyntaxError('The last property of an Inline Table can not have a trailing comma, which was found at ' + iterator.where()));\n                }\n                (lineRest === '' || lineRest.startsWith('#')) && iterator.throws(SyntaxError('Inline Table is intended to appear on a single line, which broken at ' + iterator.where()));\n            }\n        }(lineRest);\n    }\n}\nfunction equalInlineArray(table, finalKey, lineRest) {\n    const inlineArray = table[finalKey] = [];\n    sealedInline.add(inlineArray);\n    const start = iterator.mark();\n    lineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n    while (lineRest === '' || lineRest.startsWith('#')) {\n        lineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n    }\n    if (lineRest.startsWith(']')) {\n        return lineRest.replace(RE.SYM_WHITESPACE, '');\n    }\n    const length = iterator.stacks_length;\n    return function callee(lineRest) {\n        for (;;) {\n            lineRest = push(inlineArray, lineRest);\n            if (iterator.stacks_length > length) {\n                iterator.stacks_insertBeforeLast(function inserted(lineRest) {\n                    //\n                    while (lineRest === '' || lineRest.startsWith('#')) { //\n                        lineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, ''); //\n                    } //\n                    if (lineRest.startsWith(',')) { //\n                        lineRest = lineRest.replace(RE.SYM_WHITESPACE, ''); //\n                        while (lineRest === '' || lineRest.startsWith('#')) { //\n                            lineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, ''); //\n                        } //\n                        if (lineRest.startsWith(']')) {\n                            return lineRest.replace(RE.SYM_WHITESPACE, '');\n                        } //\n                    } //\n                    else { //\n                        if (lineRest.startsWith(']')) {\n                            return lineRest.replace(RE.SYM_WHITESPACE, '');\n                        } //\n                        iterator.throws(SyntaxError(iterator.where())); //\n                    } //\n                    //\n                    return callee(lineRest);\n                });\n                return lineRest;\n            }\n            while (lineRest === '' || lineRest.startsWith('#')) {\n                lineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n            }\n            if (lineRest.startsWith(',')) {\n                lineRest = lineRest.replace(RE.SYM_WHITESPACE, '');\n                while (lineRest === '' || lineRest.startsWith('#')) {\n                    lineRest = iterator.must('Inline Array', start).replace(RE.PRE_WHITESPACE, '');\n                }\n                if (lineRest.startsWith(']')) {\n                    return lineRest.replace(RE.SYM_WHITESPACE, '');\n                }\n            }\n            else {\n                if (lineRest.startsWith(']')) {\n                    return lineRest.replace(RE.SYM_WHITESPACE, '');\n                }\n                iterator.throws(SyntaxError(iterator.where()));\n            }\n        }\n    }(lineRest);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
			"import Error from '.Error';\nimport TypeError from '.TypeError';\nimport isBuffer from '.Buffer.isBuffer';\nimport from from \".Buffer.from\";\nimport * as iterator from './share/iterator';\nimport * as options from './share/options';\nimport * as RE from './share/RE';\nimport Root from './parse/level-loop';\nexport default function parse(sourceContent, specificationVersion, useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger = true, extensionOptions = null) {\n    iterator.could();\n    if (isBuffer(sourceContent)) {\n        const buffer = sourceContent;\n        sourceContent = buffer.toString();\n        if (!from(buffer).equals(buffer)) {\n            throw Error('A TOML doc must be a (ful-scalar) valid UTF-8 file, without any unknown code point.');\n        }\n        sourceContent = sourceContent.replace(RE.BOM, '');\n    }\n    if (typeof sourceContent !== 'string') {\n        throw new TypeError('TOML.parse(sourceContent)');\n    }\n    if (RE.NON_SCALAR.test(sourceContent)) {\n        throw Error('A TOML doc must be a (ful-scalar) valid UTF-8 file, without any uncoupled UCS-4 character code.');\n    }\n    if (specificationVersion !== 0.5) {\n        throw new Error('TOML.parse(,specificationVersion)');\n    }\n    try {\n        options.use(useWhatToJoinMultiLineString_notUsingForSplitTheSourceLines, useBigInt_forInteger, extensionOptions);\n        iterator.todo(sourceContent);\n        try {\n            const rootTable = Root();\n            options.process();\n            return rootTable;\n        }\n        finally {\n            iterator.done();\n        }\n    }\n    finally {\n        options.clear();\n    }\n}\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxNQUFNLFFBQVEsQ0FBQztBQUMzQixPQUFPLFNBQVMsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxRQUFRLE1BQU0sa0JBQWtCLENBQUM7QUFDeEMsT0FBTyxJQUFJLE1BQU0sY0FBYyxDQUFDO0FBQ2hDLE9BQU8sS0FBSyxRQUFRLE1BQU0sa0JBQWtCLENBQUM7QUFDN0MsT0FBTyxLQUFLLE9BQU8sTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEtBQUssRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNqQyxPQUFPLElBQUksTUFBTSxvQkFBb0IsQ0FBQztBQUV0QyxNQUFNLENBQUMsT0FBTyxVQUFVLEtBQUssQ0FDNUIsYUFBOEIsRUFDOUIsb0JBQXlCLEVBQ3pCLDJEQUFtRSxFQUNuRSx1QkFBeUMsSUFBSSxFQUM3QyxnQkFBZ0IsR0FBeUIsSUFBSTtJQUU3QyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsSUFBSyxRQUFRLENBQUMsYUFBYSxDQUFDLEVBQUc7UUFDOUIsTUFBTSxNQUFNLEdBQVcsYUFBYSxDQUFDO1FBQ3JDLGFBQWEsR0FBRyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbEMsSUFBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUc7WUFBRSxNQUFNLEtBQUssQ0FBQyxxRkFBcUYsQ0FBQyxDQUFDO1NBQUU7UUFDM0ksYUFBYSxHQUFHLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztLQUNsRDtJQUNELElBQUssT0FBTyxhQUFhLEtBQUcsUUFBUSxFQUFHO1FBQUUsTUFBTSxJQUFJLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0tBQUU7SUFDNUYsSUFBSyxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRztRQUFFLE1BQU0sS0FBSyxDQUFDLGlHQUFpRyxDQUFDLENBQUM7S0FBRTtJQUM1SixJQUFLLG9CQUFvQixLQUFHLEdBQUcsRUFBRztRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQztLQUFFO0lBQzNGLElBQUk7UUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLDJEQUEyRCxFQUFFLG9CQUFvQixFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDakgsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM3QixJQUFJO1lBQ0gsTUFBTSxTQUFTLEdBQUcsSUFBSSxFQUFFLENBQUM7WUFDekIsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2xCLE9BQU8sU0FBUyxDQUFDO1NBQ2pCO2dCQUNPO1lBQUUsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQUU7S0FDNUI7WUFDTztRQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztLQUFFO0FBQzdCLENBQUM7QUFBQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVycm9yIGZyb20gJy5FcnJvcic7XG5pbXBvcnQgVHlwZUVycm9yIGZyb20gJy5UeXBlRXJyb3InO1xuaW1wb3J0IGlzQnVmZmVyIGZyb20gJy5CdWZmZXIuaXNCdWZmZXInO1xuaW1wb3J0IGZyb20gZnJvbSBcIi5CdWZmZXIuZnJvbVwiO1xuaW1wb3J0ICogYXMgaXRlcmF0b3IgZnJvbSAnLi9zaGFyZS9pdGVyYXRvcic7XG5pbXBvcnQgKiBhcyBvcHRpb25zIGZyb20gJy4vc2hhcmUvb3B0aW9ucyc7XG5pbXBvcnQgKiBhcyBSRSBmcm9tICcuL3NoYXJlL1JFJztcbmltcG9ydCBSb290IGZyb20gJy4vcGFyc2UvbGV2ZWwtbG9vcCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlIChcblx0c291cmNlQ29udGVudCA6QnVmZmVyIHwgc3RyaW5nLFxuXHRzcGVjaWZpY2F0aW9uVmVyc2lvbiA6MC41LFxuXHR1c2VXaGF0VG9Kb2luTXVsdGlMaW5lU3RyaW5nX25vdFVzaW5nRm9yU3BsaXRUaGVTb3VyY2VMaW5lcyA6c3RyaW5nLFxuXHR1c2VCaWdJbnRfZm9ySW50ZWdlciA6Ym9vbGVhbiB8IG51bWJlciA9IHRydWUsXG5cdGV4dGVuc2lvbk9wdGlvbnMgICAgICAgICAgICAgICAgICAgICAgID0gbnVsbFxuKSA6b2JqZWN0IHtcblx0aXRlcmF0b3IuY291bGQoKTtcblx0aWYgKCBpc0J1ZmZlcihzb3VyY2VDb250ZW50KSApIHtcblx0XHRjb25zdCBidWZmZXIgOkJ1ZmZlciA9IHNvdXJjZUNvbnRlbnQ7XG5cdFx0c291cmNlQ29udGVudCA9IGJ1ZmZlci50b1N0cmluZygpO1xuXHRcdGlmICggIWZyb20oYnVmZmVyKS5lcXVhbHMoYnVmZmVyKSApIHsgdGhyb3cgRXJyb3IoJ0EgVE9NTCBkb2MgbXVzdCBiZSBhIChmdWwtc2NhbGFyKSB2YWxpZCBVVEYtOCBmaWxlLCB3aXRob3V0IGFueSB1bmtub3duIGNvZGUgcG9pbnQuJyk7IH1cblx0XHRzb3VyY2VDb250ZW50ID0gc291cmNlQ29udGVudC5yZXBsYWNlKFJFLkJPTSwgJycpO1xuXHR9XG5cdGlmICggdHlwZW9mIHNvdXJjZUNvbnRlbnQhPT0nc3RyaW5nJyApIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignVE9NTC5wYXJzZShzb3VyY2VDb250ZW50KScpOyB9XG5cdGlmICggUkUuTk9OX1NDQUxBUi50ZXN0KHNvdXJjZUNvbnRlbnQpICkgeyB0aHJvdyBFcnJvcignQSBUT01MIGRvYyBtdXN0IGJlIGEgKGZ1bC1zY2FsYXIpIHZhbGlkIFVURi04IGZpbGUsIHdpdGhvdXQgYW55IHVuY291cGxlZCBVQ1MtNCBjaGFyYWN0ZXIgY29kZS4nKTsgfVxuXHRpZiAoIHNwZWNpZmljYXRpb25WZXJzaW9uIT09MC41ICkgeyB0aHJvdyBuZXcgRXJyb3IoJ1RPTUwucGFyc2UoLHNwZWNpZmljYXRpb25WZXJzaW9uKScpOyB9XG5cdHRyeSB7XG5cdFx0b3B0aW9ucy51c2UodXNlV2hhdFRvSm9pbk11bHRpTGluZVN0cmluZ19ub3RVc2luZ0ZvclNwbGl0VGhlU291cmNlTGluZXMsIHVzZUJpZ0ludF9mb3JJbnRlZ2VyLCBleHRlbnNpb25PcHRpb25zKTtcblx0XHRpdGVyYXRvci50b2RvKHNvdXJjZUNvbnRlbnQpO1xuXHRcdHRyeSB7XG5cdFx0XHRjb25zdCByb290VGFibGUgPSBSb290KCk7XG5cdFx0XHRvcHRpb25zLnByb2Nlc3MoKTtcblx0XHRcdHJldHVybiByb290VGFibGU7XG5cdFx0fVxuXHRcdGZpbmFsbHkgeyBpdGVyYXRvci5kb25lKCk7IH1cblx0fVxuXHRmaW5hbGx5IHsgb3B0aW9ucy5jbGVhcigpOyB9XG59O1xuIl19",
			"import version from './version?text';\nimport parse from './parse';\nconst TOML = {\n    parse,\n    version,\n    get default() { return this; }\n};\nexport default TOML;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlZmF1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxPQUFPLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxLQUFLLE1BQU0sU0FBUyxDQUFDO0FBRTVCLE1BQU0sSUFBSSxHQUFHO0lBQ1osS0FBSztJQUNMLE9BQU87SUFDUCxJQUFJLE9BQU8sS0FBTSxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUM7Q0FDL0IsQ0FBQztBQUVGLGVBQWUsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZlcnNpb24gZnJvbSAnLi92ZXJzaW9uP3RleHQnO1xuaW1wb3J0IHBhcnNlIGZyb20gJy4vcGFyc2UnO1xuXG5jb25zdCBUT01MID0ge1xuXHRwYXJzZSxcblx0dmVyc2lvbixcblx0Z2V0IGRlZmF1bHQgKCkgeyByZXR1cm4gdGhpczsgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgVE9NTDtcbiJdfQ=="
		]
}